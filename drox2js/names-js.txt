alg1:one
alg1:zero
arith1:abs
arith1:divide
arith1:minus
arith1:power
arith1:rem
arith1:times
arith1:unary_minus
arith2:plus
arith2:unary_plus
bitwise1:and
bitwise1:not
bitwise1:or
bitwise1:xor
bitwise3:arithmetic_right_shift
bitwise3:left_shift
bitwise3:right_shift
ecmascript3:arguments
ecmascript3:array
ecmascript3:debugger
ecmascript3:decodeURI
ecmascript3:decodeURIComponent
ecmascript3:encodeURI
ecmascript3:encodeURIComponent
ecmascript3:eval
ecmascript3:function
ecmascript3:get
ecmascript3:in
ecmascript3:instanceof
ecmascript3:isFinite
ecmascript3:isNaN
ecmascript3:object
ecmascript3:parseFloat
ecmascript3:parseInt
ecmascript3:regexp
ecmascript3:script
ecmascript3:selector
ecmascript3:set
ecmascript3:strict_eq
ecmascript3:strict_neq
ecmascript3:this
ecmascript3:typeof
ecmascript3:undefined
ecmascript3:void
ecmascript3:with
ecmascript4:const
fns1:lambda
logic1:and
logic1:false
logic1:not
logic1:or
logic1:true
minmax1:max
minmax1:min
nums1:NaN
nums1:e
nums1:infinity
nums1:pi
prog1:assignment
prog1:block
prog1:for
prog1:if
prog1:local_var
prog1:return
prog1:while
prog2:assignment_operator
prog2:begin
prog2:break
prog2:catch
prog2:continue
prog2:decrement
prog2:delete
prog2:do_while
prog2:empty
prog2:finally
prog2:for_each
prog2:if_exp
prog2:increment
prog2:label
prog2:namespace_selector
prog2:new
prog2:null
prog2:post_decrement
prog2:post_increment
prog2:throw
prog2:try
random1:random_unit
relation1:eq
relation1:geq
relation1:gt
relation1:leq
relation1:lt
relation1:neq
rounding1:ceiling
rounding1:floor
rounding_rnp:round
switch1:case
switch2:cond
transc1:arccos
transc1:arcsin
transc1:arctan
transc1:cos
transc1:exp
transc1:ln
transc1:sin
transc1:sqrt
transc1:tan
transc2:arctan
cd, name) {
