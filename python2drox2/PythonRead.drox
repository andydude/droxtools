<?xml version="1.0"?>
<drox:dl xmlns:drox="http://drosoft.org/ns/drosera" xmlns:py="http://drosoft.org/ns/drosera/pythonxml" xmlns:m="http://www.w3.org/1998/Math/MathML">
  <m:csymbol cd="python2">module</m:csymbol>
  <m:apply>
    <m:csymbol cd="python2">import_from</m:csymbol>
    <m:ci>__future__</m:ci>
    <m:ci>print_function</m:ci>
  </m:apply>
  <m:apply>
    <m:csymbol cd="python2">import_from</m:csymbol>
    <m:ci>__future__</m:ci>
    <m:ci>unicode_literals</m:ci>
  </m:apply>
  <m:apply>
    <m:csymbol cd="python2">import_from</m:csymbol>
    <m:ci>__future__</m:ci>
    <m:ci>with_statement</m:ci>
  </m:apply>
  <m:apply>
    <m:csymbol cd="python2">import_from</m:csymbol>
    <m:ci>xml.sax.saxutils</m:ci>
    <m:ci>escape</m:ci>
  </m:apply>
  <m:apply>
    <m:csymbol cd="python2">import</m:csymbol>
    <m:ci>ast</m:ci>
  </m:apply>
  <drox:dl>
    <m:csymbol cd="python2">class</m:csymbol>
    <drox:dt>
      <m:ci>DroVisitor</m:ci>
      <py:base>
        <drox:ns>ast.NodeVisitor</drox:ns>
      </py:base>
    </drox:dt>
    <drox:dl>
      <m:csymbol cd="prog1">assignment</m:csymbol>
      <drox:dt>
        <m:ci>PYTHON_MAJOR_VERSION</m:ci>
      </drox:dt>
      <m:cn>2</m:cn>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_symbol</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>cd</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>name</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
          <m:cs>&lt;m:csymbol cd="%s"&gt;%s&lt;/m:csymbol&gt;</m:cs>
          <m:apply>
            <m:csymbol cd="python2">tuple</m:csymbol>
            <m:ci>cd</m:ci>
            <m:ci>name</m:ci>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_id</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>s</m:ci>
      </m:bvar>
      <drox:dl>
        <m:csymbol cd="switch2">cond</m:csymbol>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>abs</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>arith1</m:cs>
            <m:cs>abs</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>apply</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>fns2</m:cs>
            <m:cs>apply_to_list</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>complex</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>complex1</m:cs>
            <m:cs>complex_cartesian</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>max</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>minmax1</m:cs>
            <m:cs>max</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>min</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>minmax1</m:cs>
            <m:cs>min</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>pow</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>arith1</m:cs>
            <m:cs>power</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>print</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>python3</m:cs>
            <m:cs>print</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>round</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>rounding_rta</m:cs>
            <m:cs>round</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>setattr</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>python2</m:cs>
            <m:cs>setattr</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>slice</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>python2</m:cs>
            <m:cs>slice</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>sorted</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>python2</m:cs>
            <m:cs>sorted</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>staticmethod</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>python2</m:cs>
            <m:cs>staticmethod</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply parens="false">
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">eq</m:csymbol>
              <m:ci>s</m:ci>
              <m:cs>str</m:cs>
            </m:apply>
            <m:apply>
              <m:csymbol cd="relation1">eq</m:csymbol>
              <drox:ns>self.PYTHON_MAJOR_VERSION</drox:ns>
              <m:cn>2</m:cn>
            </m:apply>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>string1</m:cs>
            <m:cs>to_string</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply parens="false">
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">eq</m:csymbol>
              <m:ci>s</m:ci>
              <m:cs>str</m:cs>
            </m:apply>
            <m:apply>
              <m:csymbol cd="relation1">eq</m:csymbol>
              <drox:ns>self.PYTHON_MAJOR_VERSION</drox:ns>
              <m:cn>3</m:cn>
            </m:apply>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>bytes1</m:cs>
            <m:cs>to_bytes</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>True</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>logic1</m:cs>
            <m:cs>true</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>False</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>logic1</m:cs>
            <m:cs>false</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:ci>s</m:ci>
            <m:cs>None</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>prog2</m:cs>
            <m:cs>null</m:cs>
          </m:apply>
        </drox:di>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:apply parens="false">
            <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
            <m:cs>&lt;m:ci&gt;%s&lt;/m:ci&gt;</m:cs>
            <m:ci>s</m:ci>
          </m:apply>
        </m:apply>
      </drox:dl>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_elem</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>prefix</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>name</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
          <m:cs>&lt;%s:%s&gt;</m:cs>
          <m:apply>
            <m:csymbol cd="python2">tuple</m:csymbol>
            <m:ci>prefix</m:ci>
            <m:ci>name</m:ci>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_elem_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>prefix</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>name</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
          <m:cs>&lt;/%s:%s&gt;</m:cs>
          <m:apply>
            <m:csymbol cd="python2">tuple</m:csymbol>
            <m:ci>prefix</m:ci>
            <m:ci>name</m:ci>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_app_parens_false</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>apply parens="false"</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_app</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>apply</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_app_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem_end</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>apply</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_bvar</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>bvar</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_bvar_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem_end</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>bvar</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_bdom</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>domainofapplication</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_bdom_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem_end</drox:ns>
        <m:cs>m</m:cs>
        <m:cs>domainofapplication</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_decl</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>drox</m:cs>
        <m:cs>dl</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_decl_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem_end</drox:ns>
        <m:cs>drox</m:cs>
        <m:cs>dl</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_decl_item</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>drox</m:cs>
        <m:cs>di</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_decl_item_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem_end</drox:ns>
        <m:cs>drox</m:cs>
        <m:cs>di</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_decl_term</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem</drox:ns>
        <m:cs>drox</m:cs>
        <m:cs>dt</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>emit_decl_term_end</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_elem_end</drox:ns>
        <m:cs>drox</m:cs>
        <m:cs>dt</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_arguments</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>arg</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.args</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.emit_bvar</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_id</drox:ns>
          <drox:ns>arg.id</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_bvar_end</drox:ns>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_bases</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>bases</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">gt</m:csymbol>
          <m:apply>
            <m:ci>len</m:ci>
            <m:ci>bases</m:ci>
          </m:apply>
          <m:csymbol cd="alg1">zero</m:csymbol>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;py:base&gt;</m:cs>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit_argument_exprs</drox:ns>
          <m:ci>bases</m:ci>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;/py:base&gt;</m:cs>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_decorators</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>decorators</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">gt</m:csymbol>
          <m:apply>
            <m:ci>len</m:ci>
            <m:ci>decorators</m:ci>
          </m:apply>
          <m:csymbol cd="alg1">zero</m:csymbol>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;py:decorator&gt;</m:cs>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog2">for_each</m:csymbol>
          <m:bvar>
            <m:ci>decorator</m:ci>
          </m:bvar>
          <m:domainofapplication>
            <m:ci>decorators</m:ci>
          </m:domainofapplication>
          <m:apply>
            <drox:ns>self.visit</drox:ns>
            <m:ci>decorator</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;/py:decorator&gt;</m:cs>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Num</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <drox:dl>
        <m:csymbol cd="switch2">cond</m:csymbol>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <drox:ns>node.n</drox:ns>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>alg1</m:cs>
            <m:cs>zero</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <drox:ns>node.n</drox:ns>
            <m:csymbol cd="alg1">one</m:csymbol>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>alg1</m:cs>
            <m:cs>one</m:cs>
          </m:apply>
        </drox:di>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:apply parens="false">
            <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
            <m:cs>&lt;m:cn&gt;%s&lt;/m:cn&gt;</m:cs>
            <drox:ns>node.n</drox:ns>
          </m:apply>
        </m:apply>
      </drox:dl>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Str</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
          <m:cs>&lt;m:cs&gt;%s&lt;/m:cs&gt;</m:cs>
          <m:apply>
            <m:ci>escape</m:ci>
            <drox:ns>node.s</drox:ns>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Module</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;drox:dl
xmlns:drox="http://drosoft.org/ns/drosera"
xmlns:py="http://drosoft.org/ns/drosera/pythonxml"
xmlns:m="http://www.w3.org/1998/Math/MathML"&gt;</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>module</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;/drox:dl&gt;</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_FunctionDef</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_decl</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>def</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_id</drox:ns>
        <drox:ns>node.name</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term_end</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_decorators</drox:ns>
        <drox:ns>node.decorator_list</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_arguments</drox:ns>
        <drox:ns>node.args</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>stmt</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.body</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>stmt</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_ClassDef</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_decl</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>class</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_id</drox:ns>
        <drox:ns>node.name</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_bases</drox:ns>
        <drox:ns>node.bases</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_decorators</drox:ns>
        <drox:ns>node.decorator_list</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term_end</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>stmt</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.body</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>stmt</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Return</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog1</m:cs>
        <m:cs>return</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Delete</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>delete</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Assign</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_decl</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog1</m:cs>
        <m:cs>assignment</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>target</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.targets</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>target</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term_end</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.value</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_AugAssign</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_decl</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>assignment_operator</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.target</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_term_end</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.op</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.value</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_decl_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Print</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>print</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_For</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>for_each</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;m:bvar&gt;</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.target</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;/m:bvar&gt;</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;m:domainofapplication&gt;</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.iter</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;/m:domainofapplication&gt;</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>stmt</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.body</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>stmt</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">gt</m:csymbol>
          <m:apply>
            <m:ci>len</m:ci>
            <drox:ns>node.orelse</drox:ns>
          </m:apply>
          <m:csymbol cd="alg1">zero</m:csymbol>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit_Else</drox:ns>
          <drox:ns>node.orelse</drox:ns>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_While</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog1</m:cs>
        <m:cs>while</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.test</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>stmt</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.body</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>stmt</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">gt</m:csymbol>
          <m:apply>
            <m:ci>len</m:ci>
            <drox:ns>node.orelse</drox:ns>
          </m:apply>
          <m:csymbol cd="alg1">zero</m:csymbol>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit_Else</drox:ns>
          <drox:ns>node.orelse</drox:ns>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_If</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="logic1">and</m:csymbol>
          <m:apply>
            <m:csymbol cd="relation1">gt</m:csymbol>
            <m:apply>
              <m:ci>len</m:ci>
              <drox:ns>node.orelse</drox:ns>
            </m:apply>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="relation1">eq</m:csymbol>
            <m:cs>If</m:cs>
          </m:apply>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_decl</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_symbol</drox:ns>
          <m:cs>switch2</m:cs>
          <m:cs>cond</m:cs>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>mode</m:ci>
          </drox:dt>
          <m:ci>node</m:ci>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">while</m:csymbol>
          <m:apply parens="false">
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:ci>mode</m:ci>
            <m:apply>
              <m:csymbol cd="relation1">eq</m:csymbol>
              <drox:ns>mode.__class__.__name__</drox:ns>
              <m:cs>If</m:cs>
            </m:apply>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_decl_item</drox:ns>
          </m:apply>
          <m:apply>
            <drox:ns>self.visit</drox:ns>
            <drox:ns>mode.test</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">for_each</m:csymbol>
            <m:bvar>
              <m:ci>stmt</m:ci>
            </m:bvar>
            <m:domainofapplication>
              <drox:ns>mode.body</drox:ns>
            </m:domainofapplication>
            <m:apply>
              <drox:ns>self.visit</drox:ns>
              <m:ci>stmt</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_decl_item_end</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">if</m:csymbol>
            <m:apply parens="false">
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">gt</m:csymbol>
                <m:apply>
                  <m:ci>len</m:ci>
                  <drox:ns>mode.orelse</drox:ns>
                </m:apply>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="relation1">neq</m:csymbol>
                <m:cs>If</m:cs>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:bvar>
                <m:ci>stmt</m:ci>
              </m:bvar>
              <m:domainofapplication>
                <drox:ns>mode.orelse</drox:ns>
              </m:domainofapplication>
              <m:apply>
                <drox:ns>self.visit</drox:ns>
                <m:ci>stmt</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">break</m:csymbol>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">eq</m:csymbol>
              <m:apply>
                <m:ci>len</m:ci>
                <drox:ns>mode.orelse</drox:ns>
              </m:apply>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">break</m:csymbol>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>mode</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="python2">selector</m:csymbol>
              <drox:ns>mode.orelse</drox:ns>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
          </drox:dl>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_decl_end</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog2">else</m:csymbol>
          <m:apply>
            <drox:ns>self.emit_app</drox:ns>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>prog2</m:cs>
            <m:cs>if</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.visit</drox:ns>
            <drox:ns>node.test</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">for_each</m:csymbol>
            <m:bvar>
              <m:ci>stmt</m:ci>
            </m:bvar>
            <m:domainofapplication>
              <drox:ns>node.body</drox:ns>
            </m:domainofapplication>
            <m:apply>
              <drox:ns>self.visit</drox:ns>
              <m:ci>stmt</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">gt</m:csymbol>
              <m:apply>
                <m:ci>len</m:ci>
                <drox:ns>node.orelse</drox:ns>
              </m:apply>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
            <m:apply>
              <drox:ns>self.visit_Else</drox:ns>
              <drox:ns>node.orelse</drox:ns>
            </m:apply>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_app_end</drox:ns>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Else</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>stmts</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>else</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>stmt</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <m:ci>stmts</m:ci>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>stmt</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_WithItem</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">empty</m:csymbol>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_With</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python3</m:cs>
        <m:cs>with</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Raise</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>throw</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_TryExcept</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;py:try_except/&gt;</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_TryFinally</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;py:try_finally/&gt;</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Assert</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>assert</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:cs>&lt;py:assert/&gt;</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
          <m:cs>%s </m:cs>
          <drox:ns>node.test</drox:ns>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <m:apply parens="false">
          <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
          <m:cs>%s </m:cs>
          <drox:ns>node.msg</drox:ns>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Import</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>import</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_names</drox:ns>
        <drox:ns>node.names</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_alias</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>alias</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">eq</m:csymbol>
          <drox:ns>alias.asname</drox:ns>
          <m:csymbol cd="prog2">null</m:csymbol>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_id</drox:ns>
          <drox:ns>alias.name</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog2">else</m:csymbol>
          <m:apply>
            <m:csymbol cd="python3">print</m:csymbol>
            <m:apply parens="false">
              <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
              <m:cs>%s </m:cs>
              <drox:ns>alias.name</drox:ns>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="python3">print</m:csymbol>
            <m:apply parens="false">
              <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
              <m:cs>%s </m:cs>
              <drox:ns>alias.asname</drox:ns>
            </m:apply>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_names</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>names</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>alias</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <m:ci>names</m:ci>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit_alias</drox:ns>
          <m:ci>alias</m:ci>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_ImportFrom</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>import_from</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_id</drox:ns>
        <drox:ns>node.module</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_names</drox:ns>
        <drox:ns>node.names</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">gt</m:csymbol>
          <drox:ns>node.level</drox:ns>
          <m:csymbol cd="alg1">zero</m:csymbol>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:apply parens="false">
            <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
            <m:cs>&lt;m:cn&gt;%s&lt;/m:cn&gt;</m:cs>
            <drox:ns>node.level</drox:ns>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Exec</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>exec</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Global</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog1</m:cs>
        <m:cs>global_var</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Pass</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>empty</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Break</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>break</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Continue</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>continue</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_BoolOp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app_parens_false</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.op</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>value</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.values</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>value</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_BinOp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app_parens_false</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.op</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.left</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.right</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_UnaryOp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.op</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.operand</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Lambda</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>fns1</m:cs>
        <m:cs>lambda</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <drox:ns>node.args</drox:ns>
      </m:apply>
      <m:apply>
        <m:csymbol cd="python3">print</m:csymbol>
        <drox:ns>node.body</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_IfExp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog2</m:cs>
        <m:cs>if_exp</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Dict</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>dict</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Set</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>set</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_ListComp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>list_comp</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_SetComp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>set_comp</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_DictComp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>dict_comp</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_GeneratorExp</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>generator</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Yield</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>prog3</m:cs>
        <m:cs>yield</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.generic_visit</drox:ns>
        <m:ci>node</m:ci>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Compare</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="relation1">eq</m:csymbol>
          <m:apply>
            <m:ci>len</m:ci>
            <drox:ns>node.ops</drox:ns>
          </m:apply>
          <m:csymbol cd="alg1">one</m:csymbol>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_app</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:apply>
            <m:csymbol cd="python2">selector</m:csymbol>
            <drox:ns>node.ops</drox:ns>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </m:apply>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <drox:ns>node.left</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:apply>
            <m:csymbol cd="python2">selector</m:csymbol>
            <drox:ns>node.comparators</drox:ns>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </m:apply>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_app_end</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog2">else</m:csymbol>
          <m:apply>
            <drox:ns>self.emit_app</drox:ns>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_symbol</drox:ns>
            <m:cs>python2</m:cs>
            <m:cs>compare</m:cs>
          </m:apply>
          <m:apply>
            <drox:ns>self.visit</drox:ns>
            <drox:ns>node.left</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">for_each</m:csymbol>
            <m:bvar>
              <m:ci>i</m:ci>
            </m:bvar>
            <m:domainofapplication>
              <m:apply>
                <m:ci>range</m:ci>
                <m:apply>
                  <m:ci>len</m:ci>
                  <drox:ns>node.ops</drox:ns>
                </m:apply>
              </m:apply>
            </m:domainofapplication>
            <m:apply>
              <drox:ns>self.visit</drox:ns>
              <m:apply>
                <m:csymbol cd="python2">selector</m:csymbol>
                <drox:ns>node.ops</drox:ns>
                <m:ci>i</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <drox:ns>self.visit</drox:ns>
              <m:apply>
                <m:csymbol cd="python2">selector</m:csymbol>
                <drox:ns>node.comparators</drox:ns>
                <m:ci>i</m:ci>
              </m:apply>
            </m:apply>
          </m:apply>
          <m:apply>
            <drox:ns>self.emit_app_end</drox:ns>
          </m:apply>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_argument_exprs</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>args</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>arg</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <m:ci>args</m:ci>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>arg</m:ci>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_keyword_exprs</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>keywords</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>kw</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <m:ci>keywords</m:ci>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>kw</m:ci>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Call</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.func</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_argument_exprs</drox:ns>
        <drox:ns>node.args</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_keyword_exprs</drox:ns>
        <drox:ns>node.keywords</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Repr</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>repr</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.value</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_context</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>ctx</m:ci>
      </m:bvar>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="python2">isnot</m:csymbol>
          <m:apply>
            <m:ci>type</m:ci>
            <m:ci>ctx</m:ci>
          </m:apply>
          <drox:ns>ast.Load</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>ctx</m:ci>
        </m:apply>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Attribute</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <drox:dl>
        <m:csymbol cd="switch2">cond</m:csymbol>
        <drox:di>
          <m:apply>
            <m:csymbol cd="python2">is</m:csymbol>
            <m:apply>
              <m:ci>type</m:ci>
              <drox:ns>node.value</drox:ns>
            </m:apply>
            <drox:ns>ast.Attribute</drox:ns>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="switch2">cond</m:csymbol>
            <drox:di>
              <m:apply>
                <m:csymbol cd="python2">is</m:csymbol>
                <m:apply>
                  <m:ci>type</m:ci>
                  <drox:ns>node.value.value</drox:ns>
                </m:apply>
                <drox:ns>ast.Attribute</drox:ns>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="python2">is</m:csymbol>
                  <m:apply>
                    <m:ci>type</m:ci>
                    <drox:ns>node.value.value.value</drox:ns>
                  </m:apply>
                  <drox:ns>ast.Name</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="python3">print</m:csymbol>
                  <m:apply parens="false">
                    <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
                    <m:cs>&lt;drox:ns&gt;%s.%s.%s.%s&lt;/drox:ns&gt;</m:cs>
                    <m:apply>
                      <m:csymbol cd="python2">tuple</m:csymbol>
                      <drox:ns>node.value.value.attr</drox:ns>
                      <drox:ns>node.value.attr</drox:ns>
                      <drox:ns>node.attr</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </drox:di>
            <drox:di>
              <m:apply>
                <m:csymbol cd="python2">is</m:csymbol>
                <m:apply>
                  <m:ci>type</m:ci>
                  <drox:ns>node.value.value</drox:ns>
                </m:apply>
                <drox:ns>ast.Name</drox:ns>
              </m:apply>
              <m:apply>
                <m:csymbol cd="python3">print</m:csymbol>
                <m:apply parens="false">
                  <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
                  <m:cs>&lt;drox:ns&gt;%s.%s.%s&lt;/drox:ns&gt;</m:cs>
                  <m:apply>
                    <m:csymbol cd="python2">tuple</m:csymbol>
                    <drox:ns>node.value.value.id</drox:ns>
                    <drox:ns>node.value.attr</drox:ns>
                    <drox:ns>node.attr</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
            </drox:di>
          </drox:dl>
        </drox:di>
        <drox:di>
          <m:apply>
            <m:csymbol cd="python2">is</m:csymbol>
            <m:apply>
              <m:ci>type</m:ci>
              <drox:ns>node.value</drox:ns>
            </m:apply>
            <drox:ns>ast.Name</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="python3">print</m:csymbol>
            <m:apply parens="false">
              <m:csymbol cd="rounding_rtn">remainder</m:csymbol>
              <m:cs>&lt;drox:ns&gt;%s.%s&lt;/drox:ns&gt;</m:cs>
              <m:apply>
                <m:csymbol cd="python2">tuple</m:csymbol>
                <drox:ns>node.value.id</drox:ns>
                <drox:ns>node.attr</drox:ns>
              </m:apply>
            </m:apply>
          </m:apply>
        </drox:di>
        <m:apply>
          <drox:ns>self.emit_app</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_symbol</drox:ns>
          <m:cs>prog2</m:cs>
          <m:cs>namespace_selector</m:cs>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <drox:ns>node.value</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_id</drox:ns>
          <drox:ns>node.attr</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit_context</drox:ns>
          <drox:ns>node.ctx</drox:ns>
        </m:apply>
        <m:apply>
          <drox:ns>self.emit_app_end</drox:ns>
        </m:apply>
      </drox:dl>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Subscript</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>selector</m:cs>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.value</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.slice</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_context</drox:ns>
        <drox:ns>node.ctx</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Name</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_id</drox:ns>
        <drox:ns>node.id</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_List</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>list</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.elts</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>elem</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_context</drox:ns>
        <drox:ns>node.ctx</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Tuple</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>tuple</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">for_each</m:csymbol>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:domainofapplication>
          <drox:ns>node.elts</drox:ns>
        </m:domainofapplication>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <m:ci>elem</m:ci>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.visit_context</drox:ns>
        <drox:ns>node.ctx</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Ellipsis</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>ellipsis</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Slice</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>slice</m:cs>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <drox:ns>node.lower</drox:ns>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;m:lowlimit&gt;</m:cs>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <drox:ns>node.lower</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;/m:lowlimit&gt;</m:cs>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <drox:ns>node.upper</drox:ns>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;m:uplimit&gt;</m:cs>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <drox:ns>node.upper</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;/m:uplimit&gt;</m:cs>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog2">if</m:csymbol>
        <drox:ns>node.step</drox:ns>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;py:step&gt;</m:cs>
        </m:apply>
        <m:apply>
          <drox:ns>self.visit</drox:ns>
          <drox:ns>node.step</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="python3">print</m:csymbol>
          <m:cs>&lt;/py:step&gt;</m:cs>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_ExtSlice</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_app</drox:ns>
      </m:apply>
      <m:apply>
        <drox:ns>self.emit_app_end</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Index</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.visit</drox:ns>
        <drox:ns>node.value</drox:ns>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Load</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>load</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Store</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>store</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Del</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>del</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_AugLoad</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>aug_load</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_AugStore</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>aug_store</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Param</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>param</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_And</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>logic1</m:cs>
        <m:cs>and</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Or</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>logic1</m:cs>
        <m:cs>or</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Add</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>arith2</m:cs>
        <m:cs>plus</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Sub</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>arith1</m:cs>
        <m:cs>minus</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Mult</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>arith1</m:cs>
        <m:cs>times</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Div</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>divide</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Mod</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>rounding_rtn</m:cs>
        <m:cs>remainder</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Pow</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>arith1</m:cs>
        <m:cs>power</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_LShift</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>bitwise3</m:cs>
        <m:cs>left_shift</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_RShift</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>bitwise3</m:cs>
        <m:cs>arithmetic_right_shift</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_BitOr</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>bitwise1</m:cs>
        <m:cs>or</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_BitXor</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>bitwise1</m:cs>
        <m:cs>xor</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_BitAnd</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>bitwise1</m:cs>
        <m:cs>and</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_FloorDiv</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>rounding_rtn</m:cs>
        <m:cs>quotient</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Invert</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>bitwise1</m:cs>
        <m:cs>not</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Not</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>logic1</m:cs>
        <m:cs>not</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_UAdd</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>arith2</m:cs>
        <m:cs>unary_plus</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_USub</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>arith1</m:cs>
        <m:cs>unary_minus</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Eq</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>relation1</m:cs>
        <m:cs>eq</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_NotEq</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>relation1</m:cs>
        <m:cs>neq</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Lt</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>relation1</m:cs>
        <m:cs>lt</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_LtE</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>relation1</m:cs>
        <m:cs>leq</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Gt</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>relation1</m:cs>
        <m:cs>gt</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_GtE</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>relation1</m:cs>
        <m:cs>geq</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_Is</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>is</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_IsNot</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>python2</m:cs>
        <m:cs>isnot</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_In</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>set1</m:cs>
        <m:cs>in</m:cs>
      </m:apply>
    </drox:dl>
    <drox:dl>
      <m:csymbol cd="python2">def</m:csymbol>
      <drox:dt>
        <m:ci>visit_NotIn</m:ci>
      </drox:dt>
      <m:bvar>
        <m:ci>self</m:ci>
      </m:bvar>
      <m:bvar>
        <m:ci>node</m:ci>
      </m:bvar>
      <m:apply>
        <drox:ns>self.emit_symbol</drox:ns>
        <m:cs>set1</m:cs>
        <m:cs>notin</m:cs>
      </m:apply>
    </drox:dl>
  </drox:dl>
</drox:dl>
