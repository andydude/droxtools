<?xml version="1.0"?>
<drox:dl xmlns:drox="http://drosoft.org/ns/drosera" xmlns:m="http://www.w3.org/1998/Math/MathML">
  <m:csymbol cd="ecmascript3">script</m:csymbol>
  <m:apply>
    <m:bind>
      <m:csymbol cd="fns1">lambda</m:csymbol>
      <m:bvar>
        <m:ci>window</m:ci>
      </m:bvar>
      <m:bvar>
        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
      </m:bvar>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>readyList</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rootjQuery</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_strundefined</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>document</m:ci>
          </drox:dt>
          <drox:ns>window.document</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>location</m:ci>
          </drox:dt>
          <drox:ns>window.location</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>_jQuery</m:ci>
          </drox:dt>
          <drox:ns>window.jQuery</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>_$</m:ci>
          </drox:dt>
          <drox:ns>window.$</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>class2type</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_deletedIds</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">array</m:csymbol>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_version</m:ci>
          </drox:dt>
          <m:cs>1.9.1</m:cs>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_concat</m:ci>
          </drox:dt>
          <drox:ns>core_deletedIds.concat</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_push</m:ci>
          </drox:dt>
          <drox:ns>core_deletedIds.push</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_slice</m:ci>
          </drox:dt>
          <drox:ns>core_deletedIds.slice</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_indexOf</m:ci>
          </drox:dt>
          <drox:ns>core_deletedIds.indexOf</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_toString</m:ci>
          </drox:dt>
          <drox:ns>class2type.toString</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_hasOwn</m:ci>
          </drox:dt>
          <drox:ns>class2type.hasOwnProperty</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_trim</m:ci>
          </drox:dt>
          <drox:ns>core_version.trim</drox:ns>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>jQuery</m:ci>
          </drox:dt>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>selector</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>context</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">new</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.fn</drox:ns>
                  <m:ci>init</m:ci>
                </m:apply>
                <m:ci>selector</m:ci>
                <m:ci>context</m:ci>
                <m:ci>rootjQuery</m:ci>
              </m:apply>
            </m:apply>
          </m:bind>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_pnum</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">regexp</m:csymbol>
              <m:cs>/%5B+-%5D?(?:%5Cd*%5C.%7C)%5Cd+(?:%5BeE%5D%5B+-%5D?%5Cd+%7C)/</m:cs>
            </m:apply>
            <m:ci>source</m:ci>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>core_rnotwhite</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5CS+/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rtrim</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E%5B%5Cs%5CuFEFF%5CxA0%5D+%7C%5B%5Cs%5CuFEFF%5CxA0%5D+$/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rquickExpr</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:(%3C%5B%5Cw%5CW%5D+%3E)%5B%5E%3E%5D*%7C#(%5B%5Cw-%5D*))$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rsingleTag</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E%3C(%5Cw+)%5Cs*%5C/?%3E(?:%3C%5C/%5C1%3E%7C)$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rvalidchars</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E%5B%5C%5D,:%7B%7D%5Cs%5D*$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rvalidbraces</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/(?:%5E%7C:%7C,)(?:%5Cs*%5C%5B)+/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rvalidescape</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5C%5C(?:%5B%22%5C%5C%5C/bfnrt%5D%7Cu%5B%5Cda-fA-F%5D%7B4%7D)/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rvalidtokens</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%22%5B%5E%22%5C%5C%5Cr%5Cn%5D*%22%7Ctrue%7Cfalse%7Cnull%7C-?(?:%5Cd+%5C.%7C)%5Cd+(?:%5BeE%5D%5B+-%5D?%5Cd+%7C)/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rmsPrefix</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E-ms-/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rdashAlpha</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/-(%5B%5Cda-z%5D)/gi</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>fcamelCase</m:ci>
          </drox:dt>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>all</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>letter</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <drox:ns>letter.toUpperCase</drox:ns>
              </m:apply>
            </m:apply>
          </m:bind>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>completed</m:ci>
          </drox:dt>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>event</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:ci>detach</m:ci>
                </m:apply>
                <m:apply>
                  <drox:ns>jQuery.ready</drox:ns>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:bind>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>detach</m:ci>
          </drox:dt>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <drox:ns>document.addEventListener</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>document.removeEventListener</drox:ns>
                  <m:cs>DOMContentLoaded</m:cs>
                  <m:ci>completed</m:ci>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
                <m:apply>
                  <drox:ns>window.removeEventListener</drox:ns>
                  <m:cs>load</m:cs>
                  <m:ci>completed</m:ci>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>document.detachEvent</drox:ns>
                    <m:cs>onreadystatechange</m:cs>
                    <m:ci>completed</m:ci>
                  </m:apply>
                  <m:apply>
                    <drox:ns>window.detachEvent</drox:ns>
                    <m:cs>onload</m:cs>
                    <m:ci>completed</m:ci>
                  </m:apply>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:bind>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.fn</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <drox:ns>jQuery.prototype</drox:ns>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>jquery</m:ci>
              </drox:dt>
              <m:ci>core_version</m:ci>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>constructor</m:ci>
              </drox:dt>
              <m:ci>jQuery</m:ci>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>init</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>selector</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>context</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>rootjQuery</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>match</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>selector</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="switch2">cond</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                          <m:ci>selector</m:ci>
                        </m:apply>
                        <m:cs>string</m:cs>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <drox:ns>selector.charAt</drox:ns>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:cs>%3C</m:cs>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <drox:ns>selector.charAt</drox:ns>
                              <m:apply>
                                <m:csymbol cd="arith1">minus</m:csymbol>
                                <drox:ns>selector.length</drox:ns>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:cs>%3E</m:cs>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="relation1">geq</m:csymbol>
                          <drox:ns>selector.length</drox:ns>
                          <m:cn>3</m:cn>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>match</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:csymbol cd="prog2">null</m:csymbol>
                            <m:ci>selector</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>match</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>rquickExpr.exec</drox:ns>
                              <m:ci>selector</m:ci>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="switch2">cond</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>match</m:ci>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>match</m:ci>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>context</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">instanceof</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>context</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                                <m:ci>context</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <drox:ns>jQuery.merge</drox:ns>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.parseHTML</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:ci>context</m:ci>
                                    <drox:ns>context.nodeType</drox:ns>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">or</m:csymbol>
                                  </m:apply>
                                  <m:ci>document</m:ci>
                                </m:apply>
                                <m:csymbol cd="logic1">true</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>elem</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <drox:ns>document.getElementById</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>match</m:ci>
                                    <m:cn>2</m:cn>
                                  </m:apply>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:ci>elem</m:ci>
                                  <drox:ns>elem.parentNode</drox:ns>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                      <drox:ns>elem.id</drox:ns>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>match</m:ci>
                                        <m:cn>2</m:cn>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog1">return</m:csymbol>
                                        <m:apply>
                                          <drox:ns>rootjQuery.find</drox:ns>
                                          <m:ci>selector</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:ci>length</m:ci>
                                      </m:apply>
                                    </drox:dt>
                                    <m:csymbol cd="alg1">one</m:csymbol>
                                  </drox:dl>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                      </m:apply>
                                    </drox:dt>
                                    <m:ci>elem</m:ci>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    <m:ci>context</m:ci>
                                  </m:apply>
                                </drox:dt>
                                <m:ci>document</m:ci>
                              </drox:dl>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    <m:ci>selector</m:ci>
                                  </m:apply>
                                </drox:dt>
                                <m:ci>selector</m:ci>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:ci>find</m:ci>
                            </m:apply>
                            <m:ci>selector</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>constructor</m:ci>
                              </m:apply>
                              <m:ci>context</m:ci>
                            </m:apply>
                            <m:ci>find</m:ci>
                          </m:apply>
                          <m:ci>selector</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <drox:ns>selector.nodeType</drox:ns>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>context</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </drox:dt>
                        <m:ci>selector</m:ci>
                      </drox:dl>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>length</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:apply>
                        <drox:ns>jQuery.isFunction</drox:ns>
                        <m:ci>selector</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <drox:ns>rootjQuery.ready</drox:ns>
                        <m:ci>selector</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <drox:ns>selector.selector</drox:ns>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>selector</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:ns>selector.selector</drox:ns>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>context</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:ns>selector.context</drox:ns>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.makeArray</drox:ns>
                    <m:ci>selector</m:ci>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>selector</m:ci>
              </drox:dt>
              <m:cs/>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>length</m:ci>
              </drox:dt>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>size</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>toArray</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <drox:ns>core_slice.call</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>get</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>num</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>num</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>toArray</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">lt</m:csymbol>
                        <m:ci>num</m:ci>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>length</m:ci>
                          </m:apply>
                          <m:ci>num</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>num</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>pushStack</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>elems</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>ret</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.merge</drox:ns>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>constructor</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:ci>elems</m:ci>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>ret.prevObject</drox:ns>
                  </drox:dt>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>ret.context</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>context</m:ci>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>ret</m:ci>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>each</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>callback</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>args</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.each</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>callback</m:ci>
                    <m:ci>args</m:ci>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>ready</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>fn</m:ci>
                </m:bvar>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.ready</drox:ns>
                        <m:ci>promise</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>done</m:ci>
                  </m:apply>
                  <m:ci>fn</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>slice</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>pushStack</m:ci>
                    </m:apply>
                    <m:apply>
                      <drox:ns>core_slice.apply</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>first</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>eq</m:ci>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>last</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>eq</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="arith1">unary_minus</m:csymbol>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>eq</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>i</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>len</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>length</m:ci>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>j</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">unary_plus</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:ci>len</m:ci>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>pushStack</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">geq</m:csymbol>
                          <m:ci>j</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>j</m:ci>
                          <m:ci>len</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>j</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>map</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>callback</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>pushStack</m:ci>
                    </m:apply>
                    <m:apply>
                      <drox:ns>jQuery.map</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>i</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <drox:ns>callback.call</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>i</m:ci>
                            <m:ci>elem</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>end</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>push</m:ci>
              </drox:dt>
              <m:ci>core_push</m:ci>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>sort</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                </m:apply>
                <m:ci>sort</m:ci>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>splice</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                </m:apply>
                <m:ci>splice</m:ci>
              </m:apply>
            </drox:di>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>jQuery.fn</drox:ns>
              <m:ci>init</m:ci>
            </m:apply>
            <m:ci>prototype</m:ci>
          </m:apply>
        </drox:dt>
        <drox:ns>jQuery.fn</drox:ns>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.extend</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>jQuery.fn</drox:ns>
              <m:ci>extend</m:ci>
            </m:apply>
          </drox:dt>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>src</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>copyIsArray</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>copy</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>name</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>options</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>clone</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>target</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">one</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>length</m:ci>
                </drox:dt>
                <drox:ns>arguments.length</drox:ns>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>deep</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">false</m:csymbol>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <m:ci>target</m:ci>
                </m:apply>
                <m:cs>boolean</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>deep</m:ci>
                  </drox:dt>
                  <m:ci>target</m:ci>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>target</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:cn>2</m:cn>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>target</m:ci>
                  </m:apply>
                  <m:cs>object</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.isFunction</drox:ns>
                    <m:ci>target</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>target</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>length</m:ci>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>target</m:ci>
                  </drox:dt>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog2">decrement</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:csymbol cd="prog2">empty</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>i</m:ci>
                <m:ci>length</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">neq</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>options</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </drox:dl>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">for_each</m:csymbol>
                      <m:ci>name</m:ci>
                      <m:ci>options</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>src</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>target</m:ci>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>copy</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>options</m:ci>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>target</m:ci>
                            <m:ci>copy</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">continue</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="switch2">cond</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:ci>deep</m:ci>
                                  <m:ci>copy</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:ci>copyIsArray</m:ci>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>copyIsArray</m:ci>
                                  </drox:dt>
                                  <m:csymbol cd="logic1">false</m:csymbol>
                                </drox:dl>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>clone</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">and</m:csymbol>
                                      <m:ci>src</m:ci>
                                      <m:apply>
                                        <drox:ns>jQuery.isArray</drox:ns>
                                        <m:ci>src</m:ci>
                                      </m:apply>
                                    </m:apply>
                                    <m:ci>src</m:ci>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                </drox:dl>
                              </m:apply>
                              <drox:else>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>clone</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="logic1">and</m:csymbol>
                                        <m:ci>src</m:ci>
                                        <m:apply>
                                          <drox:ns>jQuery.isPlainObject</drox:ns>
                                          <m:ci>src</m:ci>
                                        </m:apply>
                                      </m:apply>
                                      <m:ci>src</m:ci>
                                      <drox:dl>
                                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                                      </drox:dl>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </drox:else>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>target</m:ci>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>jQuery.extend</drox:ns>
                                <m:ci>deep</m:ci>
                                <m:ci>clone</m:ci>
                                <m:ci>copy</m:ci>
                              </m:apply>
                            </drox:dl>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                <m:ci>copy</m:ci>
                                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                              </m:apply>
                            </drox:dt>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>target</m:ci>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:ci>copy</m:ci>
                            </drox:dl>
                          </drox:di>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>target</m:ci>
            </m:apply>
          </m:bind>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>noConflict</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>deep</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <drox:ns>window.$</drox:ns>
                  <m:ci>jQuery</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>window.$</drox:ns>
                    </drox:dt>
                    <m:ci>_$</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>deep</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>window.jQuery</drox:ns>
                    <m:ci>jQuery</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>window.jQuery</drox:ns>
                    </drox:dt>
                    <m:ci>_jQuery</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>jQuery</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isReady</m:ci>
            </drox:dt>
            <m:csymbol cd="logic1">false</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>readyWait</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">one</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>holdReady</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>hold</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>hold</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">post_increment</m:csymbol>
                    <drox:ns>jQuery.readyWait</drox:ns>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.ready</drox:ns>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ready</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>wait</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>wait</m:ci>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">decrement</m:csymbol>
                    <drox:ns>jQuery.readyWait</drox:ns>
                  </m:apply>
                  <drox:ns>jQuery.isReady</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>document.body</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:ci>setTimeout</m:ci>
                      <drox:ns>jQuery.ready</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>jQuery.isReady</drox:ns>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:ci>wait</m:ci>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">decrement</m:csymbol>
                      <drox:ns>jQuery.readyWait</drox:ns>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <drox:ns>readyList.resolveWith</drox:ns>
                <m:ci>document</m:ci>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                  <m:ci>jQuery</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.fn</drox:ns>
                  <m:ci>trigger</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:ci>jQuery</m:ci>
                            <m:ci>document</m:ci>
                          </m:apply>
                          <m:ci>trigger</m:ci>
                        </m:apply>
                        <m:cs>ready</m:cs>
                      </m:apply>
                      <m:ci>off</m:ci>
                    </m:apply>
                    <m:cs>ready</m:cs>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isFunction</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.type</drox:ns>
                    <m:ci>obj</m:ci>
                  </m:apply>
                  <m:cs>function</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isArray</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isWindow</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">neq</m:csymbol>
                    <m:ci>obj</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="relation1">eq</m:csymbol>
                    <m:ci>obj</m:ci>
                    <drox:ns>obj.window</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isNumeric</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">isNaN</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">parseFloat</m:csymbol>
                        <m:ci>obj</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">isFinite</m:csymbol>
                    <m:ci>obj</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>type</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">eq</m:csymbol>
                  <m:ci>obj</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:ci>String</m:ci>
                      <m:ci>obj</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>obj</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isPlainObject</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog2">try</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <drox:ns>obj.constructor</drox:ns>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <drox:ns>core_hasOwn.call</drox:ns>
                          <m:ci>obj</m:ci>
                          <m:cs>constructor</m:cs>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <drox:ns>core_hasOwn.call</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>obj.constructor</drox:ns>
                          <m:ci>prototype</m:ci>
                        </m:apply>
                        <m:cs>isPrototypeOf</m:cs>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog2">catch</m:csymbol>
                  <m:bvar>
                    <m:ci>e</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </drox:dl>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>key</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>key</m:ci>
                <m:ci>obj</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isEmptyObject</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>name</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>name</m:ci>
                <m:ci>obj</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="logic1">true</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>error</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>msg</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog2">throw</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>parseHTML</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>context</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>keepScripts</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>context</m:ci>
                  </m:apply>
                  <m:cs>boolean</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>keepScripts</m:ci>
                    </drox:dt>
                    <m:ci>context</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>context</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>context</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>parsed</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>rsingleTag.exec</drox:ns>
                    <m:ci>data</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>scripts</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>keepScripts</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>parsed</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:apply>
                        <drox:ns>context.createElement</drox:ns>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>parsed</m:ci>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>parsed</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>jQuery.buildFragment</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:ci>data</m:ci>
                  </m:apply>
                  <m:ci>context</m:ci>
                  <m:ci>scripts</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>scripts</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:ci>jQuery</m:ci>
                        <m:ci>scripts</m:ci>
                      </m:apply>
                      <m:ci>remove</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.merge</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                  <drox:ns>parsed.childNodes</drox:ns>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>parseJSON</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:ns>window.JSON</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>window.JSON</drox:ns>
                    <m:ci>parse</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>window.JSON</drox:ns>
                        <m:ci>parse</m:ci>
                      </m:apply>
                      <m:ci>data</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>data</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>data</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>data</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>data</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.trim</drox:ns>
                      <m:ci>data</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>data</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <drox:ns>rvalidchars.test</drox:ns>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <drox:ns>data.replace</drox:ns>
                                    <m:ci>rvalidescape</m:ci>
                                    <m:cs>@</m:cs>
                                  </m:apply>
                                  <m:ci>replace</m:ci>
                                </m:apply>
                                <m:ci>rvalidtokens</m:ci>
                                <m:cs>%5D</m:cs>
                              </m:apply>
                              <m:ci>replace</m:ci>
                            </m:apply>
                            <m:ci>rvalidbraces</m:ci>
                            <m:cs/>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">new</m:csymbol>
                                <m:ci>Function</m:ci>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>return%20</m:cs>
                                  <m:ci>data</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <drox:ns>jQuery.error</drox:ns>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:cs>Invalid%20JSON:%20</m:cs>
                  <m:ci>data</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>parseXML</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>xml</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog2">try</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:ns>window.DOMParser</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>tmp</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">new</m:csymbol>
                        <m:ci>DOMParser</m:ci>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>xml</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>tmp.parseFromString</drox:ns>
                        <m:ci>data</m:ci>
                        <m:cs>text/xml</m:cs>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>xml</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">new</m:csymbol>
                          <m:ci>ActiveXObject</m:ci>
                          <m:cs>Microsoft.XMLDOM</m:cs>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>xml.async</drox:ns>
                        </drox:dt>
                        <m:cs>false</m:cs>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>xml.loadXML</drox:ns>
                        <m:ci>data</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog2">catch</m:csymbol>
                  <m:bvar>
                    <m:ci>e</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>xml</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </drox:dl>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.error</drox:ns>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>Invalid%20XML:%20</m:cs>
                      <m:ci>data</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>xml</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>noop</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>globalEval</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>data</m:ci>
                  <m:apply>
                    <drox:ns>jQuery.trim</drox:ns>
                    <m:ci>data</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>data</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>camelCase</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>string</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <drox:ns>string.replace</drox:ns>
                      <m:ci>rmsPrefix</m:ci>
                      <m:cs>ms-</m:cs>
                    </m:apply>
                    <m:ci>replace</m:ci>
                  </m:apply>
                  <m:ci>rdashAlpha</m:ci>
                  <m:ci>fcamelCase</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>nodeName</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:ns>elem.nodeName</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>elem.nodeName</drox:ns>
                        <m:ci>toLowerCase</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <drox:ns>name.toLowerCase</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>each</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>args</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>value</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>length</m:ci>
                  </drox:dt>
                  <drox:ns>obj.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>isArray</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>isArraylike</m:ci>
                    <m:ci>obj</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>args</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>isArray</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">for</m:csymbol>
                        <m:csymbol cd="prog2">empty</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:ci>length</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>value</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>callback.apply</drox:ns>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>obj</m:ci>
                                <m:ci>i</m:ci>
                              </m:apply>
                              <m:ci>args</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>value</m:ci>
                              <m:csymbol cd="logic1">false</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">break</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">for_each</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:ci>obj</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>value</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>callback.apply</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>obj</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:ci>args</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>value</m:ci>
                                <m:csymbol cd="logic1">false</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">break</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>isArray</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">for</m:csymbol>
                          <m:csymbol cd="prog2">empty</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">lt</m:csymbol>
                            <m:ci>i</m:ci>
                            <m:ci>length</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">post_increment</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>value</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>callback.call</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>obj</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:ci>i</m:ci>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>obj</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>value</m:ci>
                                <m:csymbol cd="logic1">false</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">break</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">for_each</m:csymbol>
                            <m:ci>i</m:ci>
                            <m:ci>obj</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>value</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <drox:ns>callback.call</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>obj</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                  <m:ci>i</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>obj</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:ci>value</m:ci>
                                  <m:csymbol cd="logic1">false</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">break</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>obj</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>trim</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>core_trim</m:ci>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <drox:ns>core_trim.call</drox:ns>
                    <m:cs>%EF%BB%BF%C2%A0</m:cs>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>text</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>text</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:cs/>
                    <m:apply>
                      <drox:ns>core_trim.call</drox:ns>
                      <m:ci>text</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>text</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>text</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:cs/>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>text</m:ci>
                          <m:cs/>
                        </m:apply>
                        <m:ci>replace</m:ci>
                      </m:apply>
                      <m:ci>rtrim</m:ci>
                      <m:cs/>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>makeArray</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>arr</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>results</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <m:ci>arr</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:ci>isArraylike</m:ci>
                      <m:apply>
                        <m:ci>Object</m:ci>
                        <m:ci>arr</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.merge</drox:ns>
                        <m:ci>ret</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                              <m:ci>arr</m:ci>
                            </m:apply>
                            <m:cs>string</m:cs>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>arr</m:ci>
                          </m:apply>
                          <m:ci>arr</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>core_push.call</drox:ns>
                          <m:ci>ret</m:ci>
                          <m:ci>arr</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>ret</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>inArray</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>arr</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>len</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>arr</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>core_indexOf</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <drox:ns>core_indexOf.call</drox:ns>
                          <m:ci>arr</m:ci>
                          <m:ci>elem</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>len</m:ci>
                    </drox:dt>
                    <drox:ns>arr.length</drox:ns>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>i</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="minmax1">max</m:csymbol>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:ci>len</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:ci>len</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">in</m:csymbol>
                            <m:ci>i</m:ci>
                            <m:ci>arr</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>arr</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:ci>elem</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="arith1">unary_minus</m:csymbol>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>merge</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>first</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>second</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>l</m:ci>
                  </drox:dt>
                  <drox:ns>second.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <drox:ns>first.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>l</m:ci>
                  </m:apply>
                  <m:cs>number</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>j</m:ci>
                      <m:ci>l</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>j</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>first</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>second</m:ci>
                          <m:ci>j</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">while</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>second</m:ci>
                          <m:ci>j</m:ci>
                        </m:apply>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>first</m:ci>
                              <m:apply>
                                <m:csymbol cd="prog2">post_increment</m:csymbol>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>second</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>j</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>first.length</drox:ns>
                </drox:dt>
                <m:ci>i</m:ci>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>first</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>grep</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elems</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>inv</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>retVal</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>length</m:ci>
                  </drox:dt>
                  <drox:ns>elems.length</drox:ns>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>inv</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>inv</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>i</m:ci>
                  <m:ci>length</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>retVal</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:ci>callback</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>elems</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>inv</m:ci>
                      <m:ci>retVal</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>ret.push</drox:ns>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elems</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>ret</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>map</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elems</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>arg</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>value</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>length</m:ci>
                  </drox:dt>
                  <drox:ns>elems.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>isArray</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>isArraylike</m:ci>
                    <m:ci>elems</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>isArray</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:ci>length</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>value</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>callback</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>elems</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:ci>i</m:ci>
                          <m:ci>arg</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">neq</m:csymbol>
                          <m:ci>value</m:ci>
                          <m:csymbol cd="prog2">null</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>ret</m:ci>
                                <drox:ns>ret.length</drox:ns>
                              </m:apply>
                            </drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">for_each</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:ci>elems</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>callback</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elems</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:ci>i</m:ci>
                            <m:ci>arg</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">neq</m:csymbol>
                            <m:ci>value</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>ret</m:ci>
                                  <drox:ns>ret.length</drox:ns>
                                </m:apply>
                              </drox:dt>
                              <m:ci>value</m:ci>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>core_concat.apply</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                  <m:ci>ret</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>guid</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">one</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>proxy</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>context</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>args</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>proxy</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>context</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>tmp</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>fn</m:ci>
                      <m:ci>context</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>context</m:ci>
                    </drox:dt>
                    <m:ci>fn</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.isFunction</drox:ns>
                    <m:ci>fn</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>args</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>core_slice.call</drox:ns>
                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  <m:cn>2</m:cn>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>proxy</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>fn.apply</drox:ns>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <drox:ns>args.concat</drox:ns>
                        <m:apply>
                          <drox:ns>core_slice.call</drox:ns>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>proxy.guid</drox:ns>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>fn.guid</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>proxy</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>access</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elems</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>key</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>chainable</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>emptyGet</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>raw</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>length</m:ci>
                  </drox:dt>
                  <drox:ns>elems.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>bulk</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="relation1">eq</m:csymbol>
                    <m:ci>key</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.type</drox:ns>
                        <m:ci>key</m:ci>
                      </m:apply>
                      <m:cs>object</m:cs>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>chainable</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog2">for_each</m:csymbol>
                    <m:ci>i</m:ci>
                    <m:ci>key</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.access</drox:ns>
                        <m:ci>elems</m:ci>
                        <m:ci>fn</m:ci>
                        <m:ci>i</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>key</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:csymbol cd="logic1">true</m:csymbol>
                        <m:ci>emptyGet</m:ci>
                        <m:ci>raw</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>value</m:ci>
                      <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>chainable</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.isFunction</drox:ns>
                        <m:ci>value</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>raw</m:ci>
                        </drox:dt>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>bulk</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>raw</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>fn.call</drox:ns>
                            <m:ci>elems</m:ci>
                            <m:ci>value</m:ci>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>fn</m:ci>
                            </drox:dt>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </drox:dl>
                        </m:apply>
                        <drox:else>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>bulk</m:ci>
                              </drox:dt>
                              <m:ci>fn</m:ci>
                            </drox:dl>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>fn</m:ci>
                              </drox:dt>
                              <m:bind>
                                <m:csymbol cd="fns1">lambda</m:csymbol>
                                <m:bvar>
                                  <m:ci>elem</m:ci>
                                </m:bvar>
                                <m:bvar>
                                  <m:ci>key</m:ci>
                                </m:bvar>
                                <m:bvar>
                                  <m:ci>value</m:ci>
                                </m:bvar>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:apply>
                                    <drox:ns>bulk.call</drox:ns>
                                    <m:apply>
                                      <m:ci>jQuery</m:ci>
                                      <m:ci>elem</m:ci>
                                    </m:apply>
                                    <m:ci>value</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:bind>
                            </drox:dl>
                          </m:apply>
                        </drox:else>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>fn</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">for</m:csymbol>
                        <m:csymbol cd="prog2">empty</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:ci>length</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:ci>fn</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elems</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:ci>key</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:ci>raw</m:ci>
                              <m:ci>value</m:ci>
                              <m:apply>
                                <drox:ns>value.call</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>elems</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:ci>i</m:ci>
                                <m:apply>
                                  <m:ci>fn</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>elems</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                  <m:ci>key</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:ci>chainable</m:ci>
                  <m:ci>elems</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:ci>bulk</m:ci>
                    <m:apply>
                      <drox:ns>fn.call</drox:ns>
                      <m:ci>elems</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:ci>length</m:ci>
                      <m:apply>
                        <m:ci>fn</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elems</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:ci>key</m:ci>
                      </m:apply>
                      <m:ci>emptyGet</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>now</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">new</m:csymbol>
                      <m:ci>Date</m:ci>
                    </m:apply>
                    <m:ci>getTime</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.ready</drox:ns>
            <m:ci>promise</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>obj</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:ci>readyList</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>readyList</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>jQuery.Deferred</drox:ns>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <drox:ns>document.readyState</drox:ns>
                      <m:cs>complete</m:cs>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:ci>setTimeout</m:ci>
                    <drox:ns>jQuery.ready</drox:ns>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <drox:ns>document.addEventListener</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>document.addEventListener</drox:ns>
                    <m:cs>DOMContentLoaded</m:cs>
                    <m:ci>completed</m:ci>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <drox:ns>window.addEventListener</drox:ns>
                    <m:cs>load</m:cs>
                    <m:ci>completed</m:ci>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </drox:di>
                <m:apply>
                  <drox:ns>document.attachEvent</drox:ns>
                  <m:cs>onreadystatechange</m:cs>
                  <m:ci>completed</m:ci>
                </m:apply>
                <m:apply>
                  <drox:ns>window.attachEvent</drox:ns>
                  <m:cs>onload</m:cs>
                  <m:ci>completed</m:ci>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>top</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </drox:di>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog2">try</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>top</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">eq</m:csymbol>
                        <drox:ns>window.frameElement</drox:ns>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                      <drox:ns>document.documentElement</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog2">catch</m:csymbol>
                    <m:bvar>
                      <m:ci>e</m:ci>
                    </m:bvar>
                  </drox:dl>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>top</m:ci>
                    <drox:ns>top.doScroll</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <drox:ns>jQuery.isReady</drox:ns>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog2">try</m:csymbol>
                              <m:apply>
                                <drox:ns>top.doScroll</drox:ns>
                                <m:cs>left</m:cs>
                              </m:apply>
                              <drox:dl>
                                <m:csymbol cd="prog2">catch</m:csymbol>
                                <m:bvar>
                                  <m:ci>e</m:ci>
                                </m:bvar>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:apply>
                                    <m:ci>setTimeout</m:ci>
                                    <m:ci>doScrollCheck</m:ci>
                                    <m:cn>50</m:cn>
                                  </m:apply>
                                </m:apply>
                              </drox:dl>
                            </drox:dl>
                            <m:apply>
                              <m:ci>detach</m:ci>
                            </m:apply>
                            <m:apply>
                              <drox:ns>jQuery.ready</drox:ns>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:apply>
              <drox:ns>readyList.promise</drox:ns>
              <m:ci>obj</m:ci>
            </m:apply>
          </m:apply>
        </m:bind>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <m:cs>Boolean%20Number%20String%20Function%20Array%20Date%20RegExp%20Object%20Error</m:cs>
            <m:ci>split</m:ci>
          </m:apply>
          <m:cs>%20</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>i</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>class2type</m:ci>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:cs>%5Bobject%20</m:cs>
                    <m:ci>name</m:ci>
                  </m:apply>
                  <m:cs>%5D</m:cs>
                </m:apply>
              </m:apply>
            </drox:dt>
            <m:apply>
              <drox:ns>name.toLowerCase</drox:ns>
            </m:apply>
          </drox:dl>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>isArraylike</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>obj</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>length</m:ci>
            </drox:dt>
            <drox:ns>obj.length</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>type</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.type</drox:ns>
              <m:ci>obj</m:ci>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.isWindow</drox:ns>
            <m:ci>obj</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:csymbol cd="logic1">false</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <drox:ns>obj.nodeType</drox:ns>
              <m:csymbol cd="alg1">one</m:csymbol>
            </m:apply>
            <m:ci>length</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:csymbol cd="logic1">true</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:ci>rootjQuery</m:ci>
        </drox:dt>
        <m:apply>
          <m:ci>jQuery</m:ci>
          <m:ci>document</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>optionsCache</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
          </drox:dl>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>createOptions</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>options</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>object</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>optionsCache</m:ci>
                  <m:ci>options</m:ci>
                </m:apply>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
              </drox:dl>
            </drox:dl>
          </drox:di>
        </drox:dl>
        <m:apply>
          <drox:ns>jQuery.each</drox:ns>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>_</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>flag</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>object</m:ci>
                  <m:ci>flag</m:ci>
                </m:apply>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:dl>
          </m:bind>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>object</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.Callbacks</drox:ns>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>options</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>options</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <m:ci>options</m:ci>
                </m:apply>
                <m:cs>string</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <drox:ns>jQuery.extend</drox:ns>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                </drox:dl>
                <m:ci>options</m:ci>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>firing</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>memory</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>fired</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>firingLength</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>firingIndex</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>firingStart</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>list</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>stack</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>options.once</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                </m:apply>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>fire</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>data</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>memory</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>options.memory</drox:ns>
                    <m:ci>data</m:ci>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>fired</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>firingIndex</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>firingStart</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>firingLength</m:ci>
                  </drox:dt>
                  <drox:ns>list.length</drox:ns>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>firing</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">for</m:csymbol>
                  <m:csymbol cd="prog2">empty</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>list</m:ci>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>firingIndex</m:ci>
                      <m:ci>firingLength</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">post_increment</m:csymbol>
                    <m:ci>firingIndex</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>list</m:ci>
                                <m:ci>firingIndex</m:ci>
                              </m:apply>
                              <m:ci>apply</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>data</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>data</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:csymbol cd="logic1">false</m:csymbol>
                        </m:apply>
                        <drox:ns>options.stopOnFalse</drox:ns>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>memory</m:ci>
                          </drox:dt>
                          <m:csymbol cd="logic1">false</m:csymbol>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog2">break</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>firing</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>list</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="switch2">cond</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>stack</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <drox:ns>stack.length</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:ci>fire</m:ci>
                              <m:apply>
                                <drox:ns>stack.shift</drox:ns>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>memory</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>list</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                          </m:apply>
                        </drox:dl>
                      </drox:di>
                      <m:apply>
                        <drox:ns>self.disable</drox:ns>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>self</m:ci>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>add</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>list</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>start</m:ci>
                            </drox:dt>
                            <drox:ns>list.length</drox:ns>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <m:bvar>
                              <m:ci>args</m:ci>
                            </m:bvar>
                            <m:apply>
                              <drox:ns>jQuery.each</drox:ns>
                              <m:ci>args</m:ci>
                              <m:bind>
                                <m:csymbol cd="fns1">lambda</m:csymbol>
                                <m:bvar>
                                  <m:ci>_</m:ci>
                                </m:bvar>
                                <m:bvar>
                                  <m:ci>arg</m:ci>
                                </m:bvar>
                                <drox:dl>
                                  <m:csymbol cd="prog1">local_var</m:csymbol>
                                  <drox:di>
                                    <drox:dt>
                                      <m:ci>type</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <drox:ns>jQuery.type</drox:ns>
                                      <m:ci>arg</m:ci>
                                    </m:apply>
                                  </drox:di>
                                </drox:dl>
                                <drox:dl>
                                  <m:csymbol cd="switch2">cond</m:csymbol>
                                  <drox:di>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                        <m:ci>type</m:ci>
                                        <m:cs>function</m:cs>
                                      </m:apply>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="prog1">if</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <drox:ns>list.push</drox:ns>
                                          <m:ci>arg</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </drox:di>
                                  <drox:di>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="logic1">and</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:ci>arg</m:ci>
                                          <drox:ns>arg.length</drox:ns>
                                        </m:apply>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                          <m:ci>type</m:ci>
                                          <m:cs>string</m:cs>
                                        </m:apply>
                                      </m:apply>
                                    </drox:dt>
                                    <m:apply>
                                      <m:ci>add</m:ci>
                                      <m:ci>arg</m:ci>
                                    </m:apply>
                                  </drox:di>
                                </drox:dl>
                              </m:bind>
                            </m:apply>
                          </m:bind>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="switch2">cond</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>firing</m:ci>
                            </drox:dt>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>firingLength</m:ci>
                              </drox:dt>
                              <drox:ns>list.length</drox:ns>
                            </drox:dl>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>memory</m:ci>
                            </drox:dt>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>firingStart</m:ci>
                              </drox:dt>
                              <m:ci>start</m:ci>
                            </drox:dl>
                            <m:apply>
                              <m:ci>fire</m:ci>
                              <m:ci>memory</m:ci>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>remove</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>list</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.each</drox:ns>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <m:bvar>
                              <m:ci>_</m:ci>
                            </m:bvar>
                            <m:bvar>
                              <m:ci>arg</m:ci>
                            </m:bvar>
                            <drox:dl>
                              <m:csymbol cd="prog1">local_var</m:csymbol>
                              <drox:di>
                                <drox:dt>
                                  <m:ci>index</m:ci>
                                </drox:dt>
                              </drox:di>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">while</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="relation1">gt</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>index</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <drox:ns>jQuery.inArray</drox:ns>
                                    <m:ci>arg</m:ci>
                                    <m:ci>list</m:ci>
                                    <m:ci>index</m:ci>
                                  </m:apply>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <drox:ns>list.splice</drox:ns>
                                  <m:ci>index</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:ci>firing</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="prog1">if</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="relation1">leq</m:csymbol>
                                        <m:ci>index</m:ci>
                                        <m:ci>firingLength</m:ci>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                          <m:ci>firingLength</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">if</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="relation1">leq</m:csymbol>
                                        <m:ci>index</m:ci>
                                        <m:ci>firingIndex</m:ci>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                          <m:ci>firingIndex</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:bind>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>has</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>fn</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>fn</m:ci>
                        <m:apply>
                          <m:csymbol cd="relation1">gt</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.inArray</drox:ns>
                            <m:ci>fn</m:ci>
                            <m:ci>list</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="arith1">unary_minus</m:csymbol>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:ci>list</m:ci>
                              <drox:ns>list.length</drox:ns>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>empty</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>list</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>disable</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>list</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>stack</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>memory</m:ci>
                          </drox:dt>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </drox:dl>
                      </drox:dl>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>disabled</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>list</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>lock</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>stack</m:ci>
                      </drox:dt>
                      <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>memory</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>self.disable</drox:ns>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>locked</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>stack</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fireWith</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>context</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>args</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>args</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>args</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:ci>context</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <drox:ns>args.slice</drox:ns>
                          <m:apply>
                            <drox:ns>args.slice</drox:ns>
                          </m:apply>
                          <m:ci>args</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:ci>list</m:ci>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>firing</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>stack.push</drox:ns>
                              <m:ci>args</m:ci>
                            </m:apply>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:ci>fire</m:ci>
                                <m:ci>args</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fire</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <drox:ns>self.fireWith</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fired</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:ci>fired</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
            </drox:di>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:ci>self</m:ci>
          </m:apply>
        </m:bind>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>Deferred</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>func</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>tuples</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:cs>resolve</m:cs>
                      <m:cs>done</m:cs>
                      <m:apply>
                        <drox:ns>jQuery.Callbacks</drox:ns>
                        <m:cs>once%20memory</m:cs>
                      </m:apply>
                      <m:cs>resolved</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:cs>reject</m:cs>
                      <m:cs>fail</m:cs>
                      <m:apply>
                        <drox:ns>jQuery.Callbacks</drox:ns>
                        <m:cs>once%20memory</m:cs>
                      </m:apply>
                      <m:cs>rejected</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:cs>notify</m:cs>
                      <m:cs>progress</m:cs>
                      <m:apply>
                        <drox:ns>jQuery.Callbacks</drox:ns>
                        <m:cs>memory</m:cs>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>state</m:ci>
                  </drox:dt>
                  <m:cs>pending</m:cs>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>promise</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>state</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>state</m:ci>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>always</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <drox:ns>deferred.done</drox:ns>
                              <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                            </m:apply>
                            <m:ci>fail</m:ci>
                          </m:apply>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>then</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>fns</m:ci>
                            </drox:dt>
                            <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.Deferred</drox:ns>
                                <m:bind>
                                  <m:csymbol cd="fns1">lambda</m:csymbol>
                                  <m:bvar>
                                    <m:ci>newDefer</m:ci>
                                  </m:bvar>
                                  <m:apply>
                                    <drox:ns>jQuery.each</drox:ns>
                                    <m:ci>tuples</m:ci>
                                    <m:bind>
                                      <m:csymbol cd="fns1">lambda</m:csymbol>
                                      <m:bvar>
                                        <m:ci>i</m:ci>
                                      </m:bvar>
                                      <m:bvar>
                                        <m:ci>tuple</m:ci>
                                      </m:bvar>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">local_var</m:csymbol>
                                        <drox:di>
                                          <drox:dt>
                                            <m:ci>action</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>tuple</m:ci>
                                            <m:csymbol cd="alg1">zero</m:csymbol>
                                          </m:apply>
                                        </drox:di>
                                        <drox:di>
                                          <drox:dt>
                                            <m:ci>fn</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="logic1">and</m:csymbol>
                                            <m:apply>
                                              <drox:ns>jQuery.isFunction</drox:ns>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:ci>fns</m:ci>
                                                <m:ci>i</m:ci>
                                              </m:apply>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>fns</m:ci>
                                              <m:ci>i</m:ci>
                                            </m:apply>
                                          </m:apply>
                                        </drox:di>
                                      </drox:dl>
                                      <m:apply>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>deferred</m:ci>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>tuple</m:ci>
                                            <m:csymbol cd="alg1">one</m:csymbol>
                                          </m:apply>
                                        </m:apply>
                                        <m:bind>
                                          <m:csymbol cd="fns1">lambda</m:csymbol>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">local_var</m:csymbol>
                                            <drox:di>
                                              <drox:dt>
                                                <m:ci>returned</m:ci>
                                              </drox:dt>
                                              <m:apply>
                                                <m:csymbol cd="logic1">and</m:csymbol>
                                                <m:ci>fn</m:ci>
                                                <m:apply>
                                                  <drox:ns>fn.apply</drox:ns>
                                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                                                </m:apply>
                                              </m:apply>
                                            </drox:di>
                                          </drox:dl>
                                          <m:apply>
                                            <m:csymbol cd="prog1">if</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="logic1">and</m:csymbol>
                                              <m:ci>returned</m:ci>
                                              <m:apply>
                                                <drox:ns>jQuery.isFunction</drox:ns>
                                                <drox:ns>returned.promise</drox:ns>
                                              </m:apply>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog1">block</m:csymbol>
                                              <m:apply>
                                                <m:apply>
                                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                                  <m:apply>
                                                    <m:apply>
                                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                                      <m:apply>
                                                        <m:apply>
                                                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                                          <m:apply>
                                                            <drox:ns>returned.promise</drox:ns>
                                                          </m:apply>
                                                          <m:ci>done</m:ci>
                                                        </m:apply>
                                                        <drox:ns>newDefer.resolve</drox:ns>
                                                      </m:apply>
                                                      <m:ci>fail</m:ci>
                                                    </m:apply>
                                                    <drox:ns>newDefer.reject</drox:ns>
                                                  </m:apply>
                                                  <m:ci>progress</m:ci>
                                                </m:apply>
                                                <drox:ns>newDefer.notify</drox:ns>
                                              </m:apply>
                                            </m:apply>
                                            <drox:else>
                                              <m:apply>
                                                <m:csymbol cd="prog1">block</m:csymbol>
                                                <m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                    <m:ci>newDefer</m:ci>
                                                    <m:apply>
                                                      <m:csymbol cd="arith2">plus</m:csymbol>
                                                      <m:ci>action</m:ci>
                                                      <m:cs>With</m:cs>
                                                    </m:apply>
                                                  </m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                                    <m:apply>
                                                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                                                      <m:ci>promise</m:ci>
                                                    </m:apply>
                                                    <m:apply>
                                                      <drox:ns>newDefer.promise</drox:ns>
                                                    </m:apply>
                                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                                  </m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                                    <m:ci>fn</m:ci>
                                                    <m:apply>
                                                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                                                      <m:ci>returned</m:ci>
                                                    </m:apply>
                                                    <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                                                  </m:apply>
                                                </m:apply>
                                              </m:apply>
                                            </drox:else>
                                          </m:apply>
                                        </m:bind>
                                      </m:apply>
                                    </m:bind>
                                  </m:apply>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>fns</m:ci>
                                    </drox:dt>
                                    <m:csymbol cd="prog2">null</m:csymbol>
                                  </drox:dl>
                                </m:bind>
                              </m:apply>
                              <m:ci>promise</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>promise</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>obj</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">neq</m:csymbol>
                              <m:ci>obj</m:ci>
                              <m:csymbol cd="prog2">null</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <drox:ns>jQuery.extend</drox:ns>
                              <m:ci>obj</m:ci>
                              <m:ci>promise</m:ci>
                            </m:apply>
                            <m:ci>promise</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>deferred</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>promise.pipe</drox:ns>
                </drox:dt>
                <drox:ns>promise.then</drox:ns>
              </drox:dl>
              <m:apply>
                <drox:ns>jQuery.each</drox:ns>
                <m:ci>tuples</m:ci>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>i</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>tuple</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>list</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>tuple</m:ci>
                        <m:cn>2</m:cn>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>stateString</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>tuple</m:ci>
                        <m:cn>3</m:cn>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>promise</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tuple</m:ci>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </drox:dt>
                    <drox:ns>list.add</drox:ns>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>stateString</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>list.add</drox:ns>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>state</m:ci>
                            </drox:dt>
                            <m:ci>stateString</m:ci>
                          </drox:dl>
                        </m:bind>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>tuples</m:ci>
                              <m:apply>
                                <m:csymbol cd="bitwise1">xor</m:csymbol>
                                <m:ci>i</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:cn>2</m:cn>
                          </m:apply>
                          <m:ci>disable</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>tuples</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                            <m:cn>2</m:cn>
                          </m:apply>
                          <m:ci>lock</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>deferred</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tuple</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>deferred</m:ci>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>tuple</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:cs>With</m:cs>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>deferred</m:ci>
                          </m:apply>
                          <m:ci>promise</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                        <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                      </m:apply>
                    </m:bind>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>deferred</m:ci>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>tuple</m:ci>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                          <m:cs>With</m:cs>
                        </m:apply>
                      </m:apply>
                    </drox:dt>
                    <drox:ns>list.fireWith</drox:ns>
                  </drox:dl>
                </m:bind>
              </m:apply>
              <m:apply>
                <drox:ns>promise.promise</drox:ns>
                <m:ci>deferred</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>func</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>func.call</drox:ns>
                    <m:ci>deferred</m:ci>
                    <m:ci>deferred</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>deferred</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>when</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>subordinate</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>resolveValues</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>core_slice.call</drox:ns>
                    <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>length</m:ci>
                  </drox:dt>
                  <drox:ns>resolveValues.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>remaining</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>length</m:ci>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>deferred</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>remaining</m:ci>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:ci>subordinate</m:ci>
                    <m:apply>
                      <drox:ns>jQuery.Deferred</drox:ns>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>updateFunc</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>i</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>contexts</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>values</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>value</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>contexts</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>values</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">gt</m:csymbol>
                              <drox:ns>arguments.length</drox:ns>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <drox:ns>core_slice.call</drox:ns>
                              <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                            </m:apply>
                            <m:ci>value</m:ci>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="switch2">cond</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>values</m:ci>
                                <m:ci>progressValues</m:ci>
                              </m:apply>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>deferred.notifyWith</drox:ns>
                              <m:ci>contexts</m:ci>
                              <m:ci>values</m:ci>
                            </m:apply>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">decrement</m:csymbol>
                                  <m:ci>remaining</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>deferred.resolveWith</drox:ns>
                              <m:ci>contexts</m:ci>
                              <m:ci>values</m:ci>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                      </m:bind>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>progressValues</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>progressContexts</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>resolveContexts</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">gt</m:csymbol>
                  <m:ci>length</m:ci>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>progressValues</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">new</m:csymbol>
                      <m:ci>Array</m:ci>
                      <m:ci>length</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>progressContexts</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">new</m:csymbol>
                      <m:ci>Array</m:ci>
                      <m:ci>length</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>resolveContexts</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">new</m:csymbol>
                      <m:ci>Array</m:ci>
                      <m:ci>length</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:ci>length</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>resolveValues</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>jQuery.isFunction</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>resolveValues</m:ci>
                                <m:ci>i</m:ci>
                              </m:apply>
                              <m:ci>promise</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:apply>
                                        <m:apply>
                                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>resolveValues</m:ci>
                                            <m:ci>i</m:ci>
                                          </m:apply>
                                          <m:ci>promise</m:ci>
                                        </m:apply>
                                      </m:apply>
                                      <m:ci>done</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:ci>updateFunc</m:ci>
                                      <m:ci>i</m:ci>
                                      <m:ci>resolveContexts</m:ci>
                                      <m:ci>resolveValues</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <m:ci>fail</m:ci>
                                </m:apply>
                                <drox:ns>deferred.reject</drox:ns>
                              </m:apply>
                              <m:ci>progress</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:ci>updateFunc</m:ci>
                              <m:ci>i</m:ci>
                              <m:ci>progressContexts</m:ci>
                              <m:ci>progressValues</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:else>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">decrement</m:csymbol>
                              <m:ci>remaining</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:else>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>remaining</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>deferred.resolveWith</drox:ns>
                    <m:ci>resolveContexts</m:ci>
                    <m:ci>resolveValues</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>deferred.promise</drox:ns>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.support</drox:ns>
        </drox:dt>
        <m:apply>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>support</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>all</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>a</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>input</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>select</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>fragment</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>opt</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>eventName</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>isSupported</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>div</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>document.createElement</drox:ns>
                  <m:cs>div</m:cs>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <drox:ns>div.setAttribute</drox:ns>
              <m:cs>className</m:cs>
              <m:cs>t</m:cs>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>div.innerHTML</drox:ns>
              </drox:dt>
              <m:cs>%20%20%3Clink/%3E%3Ctable%3E%3C/table%3E%3Ca%20href='/a'%3Ea%3C/a%3E%3Cinput%20type='checkbox'/%3E</m:cs>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>all</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>div.getElementsByTagName</drox:ns>
                <m:cs>*</m:cs>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>a</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:apply>
                  <drox:ns>div.getElementsByTagName</drox:ns>
                  <m:cs>a</m:cs>
                </m:apply>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>select</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>document.createElement</drox:ns>
                <m:cs>select</m:cs>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>opt</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>select.appendChild</drox:ns>
                <m:apply>
                  <drox:ns>document.createElement</drox:ns>
                  <m:cs>option</m:cs>
                </m:apply>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>input</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:apply>
                  <drox:ns>div.getElementsByTagName</drox:ns>
                  <m:cs>input</m:cs>
                </m:apply>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>a.style</drox:ns>
                  <m:ci>cssText</m:ci>
                </m:apply>
              </drox:dt>
              <m:cs>top:1px;float:left;opacity:.5</m:cs>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>support</m:ci>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>getSetAttribute</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <drox:ns>div.className</drox:ns>
                    <m:cs>t</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>leadingWhitespace</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>div.firstChild</drox:ns>
                      <m:ci>nodeType</m:ci>
                    </m:apply>
                    <m:cn>3</m:cn>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tbody</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <drox:ns>div.getElementsByTagName</drox:ns>
                        <m:cs>tbody</m:cs>
                      </m:apply>
                      <m:ci>length</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>htmlSerialize</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <drox:ns>div.getElementsByTagName</drox:ns>
                          <m:cs>link</m:cs>
                        </m:apply>
                        <m:ci>length</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>style</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                        <m:cs>/top/</m:cs>
                      </m:apply>
                      <m:ci>test</m:ci>
                    </m:apply>
                    <m:apply>
                      <drox:ns>a.getAttribute</drox:ns>
                      <m:cs>style</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hrefNormalized</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <drox:ns>a.getAttribute</drox:ns>
                      <m:cs>href</m:cs>
                    </m:apply>
                    <m:cs>/a</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>opacity</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                        <m:cs>/%5E0.5/</m:cs>
                      </m:apply>
                      <m:ci>test</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>a.style</drox:ns>
                      <m:ci>opacity</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cssFloat</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>a.style</drox:ns>
                        <m:ci>cssFloat</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>checkOn</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <drox:ns>input.value</drox:ns>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>optSelected</m:ci>
                  </drox:dt>
                  <drox:ns>opt.selected</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>enctype</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <drox:ns>document.createElement</drox:ns>
                          <m:cs>form</m:cs>
                        </m:apply>
                        <m:ci>enctype</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>html5Clone</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <drox:ns>document.createElement</drox:ns>
                            <m:cs>nav</m:cs>
                          </m:apply>
                          <m:ci>cloneNode</m:ci>
                        </m:apply>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                      <m:ci>outerHTML</m:ci>
                    </m:apply>
                    <m:cs>%3C:nav%3E%3C/:nav%3E</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>boxModel</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>document.compatMode</drox:ns>
                    <m:cs>CSS1Compat</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>deleteExpando</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>noCloneEvent</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>inlineBlockNeedsLayout</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>shrinkWrapBlocks</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>reliableMarginRight</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>boxSizingReliable</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>pixelPosition</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:di>
              </drox:dl>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>input.checked</drox:ns>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.noCloneChecked</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <drox:ns>input.cloneNode</drox:ns>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
                <m:ci>checked</m:ci>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>select.disabled</drox:ns>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.optDisabled</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <drox:ns>opt.disabled</drox:ns>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog2">try</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">delete</m:csymbol>
                <drox:ns>div.test</drox:ns>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog2">catch</m:csymbol>
                <m:bvar>
                  <m:ci>e</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.deleteExpando</drox:ns>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:dl>
              </drox:dl>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>input</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>document.createElement</drox:ns>
                <m:cs>input</m:cs>
              </m:apply>
            </drox:dl>
            <m:apply>
              <drox:ns>input.setAttribute</drox:ns>
              <m:cs>value</m:cs>
              <m:cs/>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.input</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <drox:ns>input.getAttribute</drox:ns>
                  <m:cs>value</m:cs>
                </m:apply>
                <m:cs/>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>input.value</drox:ns>
              </drox:dt>
              <m:cs>t</m:cs>
            </drox:dl>
            <m:apply>
              <drox:ns>input.setAttribute</drox:ns>
              <m:cs>type</m:cs>
              <m:cs>radio</m:cs>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.radioValue</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <drox:ns>input.value</drox:ns>
                <m:cs>t</m:cs>
              </m:apply>
            </drox:dl>
            <m:apply>
              <drox:ns>input.setAttribute</drox:ns>
              <m:cs>checked</m:cs>
              <m:cs>t</m:cs>
            </m:apply>
            <m:apply>
              <drox:ns>input.setAttribute</drox:ns>
              <m:cs>name</m:cs>
              <m:cs>t</m:cs>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>fragment</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>document.createDocumentFragment</drox:ns>
              </m:apply>
            </drox:dl>
            <m:apply>
              <drox:ns>fragment.appendChild</drox:ns>
              <m:ci>input</m:ci>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.appendChecked</drox:ns>
              </drox:dt>
              <drox:ns>input.checked</drox:ns>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.checkClone</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <drox:ns>fragment.cloneNode</drox:ns>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                      <m:ci>cloneNode</m:ci>
                    </m:apply>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </m:apply>
                  <m:ci>lastChild</m:ci>
                </m:apply>
                <m:ci>checked</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <drox:ns>div.attachEvent</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>div.attachEvent</drox:ns>
                  <m:cs>onclick</m:cs>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>support.noCloneEvent</drox:ns>
                      </drox:dt>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </drox:dl>
                  </m:bind>
                </m:apply>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <drox:ns>div.cloneNode</drox:ns>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                    <m:ci>click</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:ci>i</m:ci>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>submit</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>change</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>focusin</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>div.setAttribute</drox:ns>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>eventName</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>on</m:cs>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:cs>t</m:cs>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>support</m:ci>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>i</m:ci>
                        <m:cs>Bubbles</m:cs>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>div.style</drox:ns>
                  <m:ci>backgroundClip</m:ci>
                </m:apply>
              </drox:dt>
              <m:cs>content-box</m:cs>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <drox:ns>div.cloneNode</drox:ns>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                    <m:ci>style</m:ci>
                  </m:apply>
                  <m:ci>backgroundClip</m:ci>
                </m:apply>
              </drox:dt>
              <m:cs/>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>support.clearCloneStyle</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>div.style</drox:ns>
                  <m:ci>backgroundClip</m:ci>
                </m:apply>
                <m:cs>content-box</m:cs>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:ci>jQuery</m:ci>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>container</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>marginDiv</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>tds</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>divReset</m:ci>
                    </drox:dt>
                    <m:cs>padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;</m:cs>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>body</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:apply>
                        <drox:ns>document.getElementsByTagName</drox:ns>
                        <m:cs>body</m:cs>
                      </m:apply>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>body</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>container</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>document.createElement</drox:ns>
                    <m:cs>div</m:cs>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>container.style</drox:ns>
                      <m:ci>cssText</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:cs>border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px</m:cs>
                </drox:dl>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <drox:ns>body.appendChild</drox:ns>
                      <m:ci>container</m:ci>
                    </m:apply>
                    <m:ci>appendChild</m:ci>
                  </m:apply>
                  <m:ci>div</m:ci>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>div.innerHTML</drox:ns>
                  </drox:dt>
                  <m:cs>%3Ctable%3E%3Ctr%3E%3Ctd%3E%3C/td%3E%3Ctd%3Et%3C/td%3E%3C/tr%3E%3C/table%3E</m:cs>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>tds</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>div.getElementsByTagName</drox:ns>
                    <m:cs>td</m:cs>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tds</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:ci>style</m:ci>
                      </m:apply>
                      <m:ci>cssText</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:cs>padding:0;margin:0;border:0;display:none</m:cs>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>isSupported</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>tds</m:ci>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:ci>offsetHeight</m:ci>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tds</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:ci>style</m:ci>
                      </m:apply>
                      <m:ci>display</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:cs/>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tds</m:ci>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                        <m:ci>style</m:ci>
                      </m:apply>
                      <m:ci>display</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:cs>none</m:cs>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.reliableHiddenOffsets</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>isSupported</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tds</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:ci>offsetHeight</m:ci>
                      </m:apply>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>div.innerHTML</drox:ns>
                  </drox:dt>
                  <m:cs/>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>div.style</drox:ns>
                      <m:ci>cssText</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:cs>box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%25;position:absolute;top:1%25;</m:cs>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.boxSizing</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>div.offsetWidth</drox:ns>
                    <m:cn>4</m:cn>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.doesNotIncludeMarginInBodyOffset</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <drox:ns>body.offsetTop</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:ns>window.getComputedStyle</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>support.pixelPosition</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                          <m:ci>top</m:ci>
                        </m:apply>
                        <m:cs>1%25</m:cs>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>support.boxSizingReliable</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                          <m:ci>width</m:ci>
                        </m:apply>
                        <m:cs>4px</m:cs>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>marginDiv</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>div.appendChild</drox:ns>
                        <m:apply>
                          <drox:ns>document.createElement</drox:ns>
                          <m:cs>div</m:cs>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>marginDiv.style</drox:ns>
                          <m:ci>cssText</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>div.style</drox:ns>
                            <m:ci>cssText</m:ci>
                          </m:apply>
                        </drox:dt>
                        <m:ci>divReset</m:ci>
                      </drox:dl>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>marginDiv.style</drox:ns>
                          <m:ci>marginRight</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>marginDiv.style</drox:ns>
                            <m:ci>width</m:ci>
                          </m:apply>
                        </drox:dt>
                        <m:cs>0</m:cs>
                      </drox:dl>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>div.style</drox:ns>
                          <m:ci>width</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:cs>1px</m:cs>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>support.reliableMarginRight</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">parseFloat</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:ci>marginRight</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>div.style</drox:ns>
                        <m:ci>zoom</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>core_strundefined</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>div.innerHTML</drox:ns>
                      </drox:dt>
                      <m:cs/>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>div.style</drox:ns>
                          <m:ci>cssText</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>divReset</m:ci>
                        <m:cs>width:1px;padding:1px;display:inline;zoom:1</m:cs>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>support.inlineBlockNeedsLayout</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <drox:ns>div.offsetWidth</drox:ns>
                        <m:cn>3</m:cn>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>div.style</drox:ns>
                          <m:ci>display</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:cs>block</m:cs>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>div.innerHTML</drox:ns>
                      </drox:dt>
                      <m:cs>%3Cdiv%3E%3C/div%3E</m:cs>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>div.firstChild</drox:ns>
                            <m:ci>style</m:ci>
                          </m:apply>
                          <m:ci>width</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:cs>5px</m:cs>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>support.shrinkWrapBlocks</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <drox:ns>div.offsetWidth</drox:ns>
                        <m:cn>3</m:cn>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <drox:ns>support.inlineBlockNeedsLayout</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>body.style</drox:ns>
                              <m:ci>zoom</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <drox:ns>body.removeChild</drox:ns>
                  <m:ci>container</m:ci>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>container</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>div</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>tds</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>marginDiv</m:ci>
                        </drox:dt>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </drox:dl>
                    </drox:dl>
                  </drox:dl>
                </drox:dl>
              </m:bind>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>all</m:ci>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>select</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>fragment</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>opt</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>a</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>input</m:ci>
                        </drox:dt>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </drox:dl>
                    </drox:dl>
                  </drox:dl>
                </drox:dl>
              </drox:dl>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>support</m:ci>
            </m:apply>
          </m:bind>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>rbrace</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/(?:%5C%7B%5B%5Cs%5CS%5D*%5C%7D%7C%5C%5B%5B%5Cs%5CS%5D*%5C%5D)$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rmultiDash</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/(%5BA-Z%5D)/g</m:cs>
          </m:apply>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>internalData</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>name</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>data</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>pvt</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:apply>
              <drox:ns>jQuery.acceptData</drox:ns>
              <m:ci>elem</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>thisCache</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ret</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>internalKey</m:ci>
            </drox:dt>
            <drox:ns>jQuery.expando</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>getByName</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                <m:ci>name</m:ci>
              </m:apply>
              <m:cs>string</m:cs>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isNode</m:ci>
            </drox:dt>
            <drox:ns>elem.nodeType</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>cache</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:ci>isNode</m:ci>
              <drox:ns>jQuery.cache</drox:ns>
              <m:ci>elem</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>id</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:ci>isNode</m:ci>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>elem</m:ci>
                <m:ci>internalKey</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>elem</m:ci>
                  <m:ci>internalKey</m:ci>
                </m:apply>
                <m:ci>internalKey</m:ci>
              </m:apply>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:ci>getByName</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <m:ci>data</m:ci>
              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:ci>id</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>isNode</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>elem</m:ci>
                      <m:ci>internalKey</m:ci>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>id</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </drox:dl>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>id</m:ci>
                    </drox:dt>
                    <m:ci>internalKey</m:ci>
                  </drox:dl>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>cache</m:ci>
              <m:ci>id</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>cache</m:ci>
                  <m:ci>id</m:ci>
                </m:apply>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
              </drox:dl>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <m:ci>isNode</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>cache</m:ci>
                        <m:ci>id</m:ci>
                      </m:apply>
                      <m:ci>toJSON</m:ci>
                    </m:apply>
                  </drox:dt>
                  <drox:ns>jQuery.noop</drox:ns>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>pvt</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>cache</m:ci>
                      <m:ci>id</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.extend</drox:ns>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>cache</m:ci>
                      <m:ci>id</m:ci>
                    </m:apply>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>cache</m:ci>
                          <m:ci>id</m:ci>
                        </m:apply>
                        <m:ci>data</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.extend</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>cache</m:ci>
                          <m:ci>id</m:ci>
                        </m:apply>
                        <m:ci>data</m:ci>
                      </m:apply>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>thisCache</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">selector</m:csymbol>
            <m:ci>cache</m:ci>
            <m:ci>id</m:ci>
          </m:apply>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:ci>pvt</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <drox:ns>thisCache.data</drox:ns>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>thisCache.data</drox:ns>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:dl>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>thisCache</m:ci>
              </drox:dt>
              <drox:ns>thisCache.data</drox:ns>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
            <m:ci>data</m:ci>
            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>thisCache</m:ci>
                  <m:apply>
                    <drox:ns>jQuery.camelCase</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dt>
              <m:ci>data</m:ci>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>getByName</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>ret</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>thisCache</m:ci>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">eq</m:csymbol>
                <m:ci>ret</m:ci>
                <m:csymbol cd="prog2">null</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>thisCache</m:ci>
                    <m:apply>
                      <drox:ns>jQuery.camelCase</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
          <drox:else>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>ret</m:ci>
                </drox:dt>
                <m:ci>thisCache</m:ci>
              </drox:dl>
            </m:apply>
          </drox:else>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>ret</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>internalRemoveData</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>name</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>pvt</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:apply>
              <drox:ns>jQuery.acceptData</drox:ns>
              <m:ci>elem</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>l</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>thisCache</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isNode</m:ci>
            </drox:dt>
            <drox:ns>elem.nodeType</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>cache</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:ci>isNode</m:ci>
              <drox:ns>jQuery.cache</drox:ns>
              <m:ci>elem</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>id</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:ci>isNode</m:ci>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>elem</m:ci>
                <drox:ns>jQuery.expando</drox:ns>
              </m:apply>
              <drox:ns>jQuery.expando</drox:ns>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>cache</m:ci>
              <m:ci>id</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>name</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>thisCache</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:ci>pvt</m:ci>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>cache</m:ci>
                  <m:ci>id</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>cache</m:ci>
                    <m:ci>id</m:ci>
                  </m:apply>
                  <m:ci>data</m:ci>
                </m:apply>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>thisCache</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.isArray</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">in</m:csymbol>
                        <m:ci>name</m:ci>
                        <m:ci>thisCache</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>name</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>name</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>jQuery.camelCase</drox:ns>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">in</m:csymbol>
                              <m:ci>name</m:ci>
                              <m:ci>thisCache</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>name</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </drox:dl>
                            </m:apply>
                            <drox:else>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>name</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <drox:ns>name.split</drox:ns>
                                    <m:cs>%20</m:cs>
                                  </m:apply>
                                </drox:dl>
                              </m:apply>
                            </drox:else>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>name</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>name.concat</drox:ns>
                          <m:apply>
                            <drox:ns>jQuery.map</drox:ns>
                            <m:ci>name</m:ci>
                            <drox:ns>jQuery.camelCase</drox:ns>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </drox:else>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">for</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">begin</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>l</m:ci>
                      </drox:dt>
                      <drox:ns>name.length</drox:ns>
                    </drox:dl>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="relation1">lt</m:csymbol>
                    <m:ci>i</m:ci>
                    <m:ci>l</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">post_increment</m:csymbol>
                    <m:ci>i</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">delete</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>thisCache</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>name</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>pvt</m:ci>
                        <m:ci>isEmptyDataObject</m:ci>
                        <drox:ns>jQuery.isEmptyObject</drox:ns>
                      </m:apply>
                      <m:ci>thisCache</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:ci>pvt</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">delete</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>cache</m:ci>
                  <m:ci>id</m:ci>
                </m:apply>
                <m:ci>data</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <m:apply>
                  <m:ci>isEmptyDataObject</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>cache</m:ci>
                    <m:ci>id</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="switch2">cond</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>isNode</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.cleanData</drox:ns>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:ci>elem</m:ci>
              </m:apply>
              <m:csymbol cd="logic1">true</m:csymbol>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">delete</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>cache</m:ci>
                <m:ci>id</m:ci>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>cache</m:ci>
                <m:ci>id</m:ci>
              </m:apply>
            </drox:dt>
            <m:csymbol cd="prog2">null</m:csymbol>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>cache</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>expando</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:cs>jQuery</m:cs>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:ci>core_version</m:ci>
                    <m:apply>
                      <m:csymbol cd="random1">random_unit</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:ci>replace</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                  <m:cs>/%5CD/g</m:cs>
                </m:apply>
                <m:cs/>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>noData</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>embed</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>object</m:ci>
                </drox:dt>
                <m:cs>clsid:D27CDB6E-AE6D-11cf-96B8-444553540000</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>applet</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hasData</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>elem</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <drox:ns>elem.nodeType</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.cache</drox:ns>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>elem</m:ci>
                      <drox:ns>jQuery.expando</drox:ns>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>elem</m:ci>
                    <drox:ns>jQuery.expando</drox:ns>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:ci>isEmptyDataObject</m:ci>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>data</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>internalData</m:ci>
                  <m:ci>elem</m:ci>
                  <m:ci>name</m:ci>
                  <m:ci>data</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>removeData</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>internalRemoveData</m:ci>
                  <m:ci>elem</m:ci>
                  <m:ci>name</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>_data</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>internalData</m:ci>
                  <m:ci>elem</m:ci>
                  <m:ci>name</m:ci>
                  <m:ci>data</m:ci>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>_removeData</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>internalRemoveData</m:ci>
                  <m:ci>elem</m:ci>
                  <m:ci>name</m:ci>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>acceptData</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>elem.nodeType</drox:ns>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <drox:ns>elem.nodeType</drox:ns>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <drox:ns>elem.nodeType</drox:ns>
                    <m:cn>9</m:cn>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>noData</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>elem.nodeName</drox:ns>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>jQuery.noData</drox:ns>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>elem.nodeName</drox:ns>
                          <m:ci>toLowerCase</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>data</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>key</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>attrs</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>name</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>data</m:ci>
                  </drox:dt>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>key</m:ci>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>length</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>jQuery.data</drox:ns>
                          <m:ci>elem</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.nodeType</drox:ns>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery._data</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:cs>parsedAttrs</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>attrs</m:ci>
                            </drox:dt>
                            <drox:ns>elem.attributes</drox:ns>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>i</m:ci>
                              <drox:ns>attrs.length</drox:ns>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>name</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>attrs</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">not</m:csymbol>
                                  <m:apply>
                                    <drox:ns>name.indexOf</drox:ns>
                                    <m:cs>data-</m:cs>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>name</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <drox:ns>jQuery.camelCase</drox:ns>
                                      <m:apply>
                                        <drox:ns>name.slice</drox:ns>
                                        <m:cn>5</m:cn>
                                      </m:apply>
                                    </m:apply>
                                  </drox:dl>
                                  <m:apply>
                                    <m:ci>dataAttr</m:ci>
                                    <m:ci>elem</m:ci>
                                    <m:ci>name</m:ci>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>data</m:ci>
                                      <m:ci>name</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <drox:ns>jQuery._data</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:cs>parsedAttrs</m:cs>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>data</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>key</m:ci>
                  </m:apply>
                  <m:cs>object</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.data</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>key</m:ci>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>value</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>value</m:ci>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:ci>elem</m:ci>
                            <m:apply>
                              <m:ci>dataAttr</m:ci>
                              <m:ci>elem</m:ci>
                              <m:ci>key</m:ci>
                              <m:apply>
                                <drox:ns>jQuery.data</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:ci>key</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.data</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>key</m:ci>
                          <m:ci>value</m:ci>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:bind>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:ci>value</m:ci>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <drox:ns>arguments.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>removeData</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>key</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.removeData</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>key</m:ci>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>dataAttr</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>key</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>data</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <m:ci>data</m:ci>
              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <drox:ns>elem.nodeType</drox:ns>
              <m:csymbol cd="alg1">one</m:csymbol>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>name</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:cs>data-</m:cs>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <drox:ns>key.replace</drox:ns>
                        <m:ci>rmultiDash</m:ci>
                        <m:cs>-$1</m:cs>
                      </m:apply>
                      <m:ci>toLowerCase</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:di>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>data</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>elem.getAttribute</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <m:ci>data</m:ci>
                </m:apply>
                <m:cs>string</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog2">try</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>data</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>data</m:ci>
                        <m:cs>true</m:cs>
                      </m:apply>
                      <m:csymbol cd="logic1">true</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>data</m:ci>
                          <m:cs>false</m:cs>
                        </m:apply>
                        <m:csymbol cd="logic1">false</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>data</m:ci>
                            <m:cs>null</m:cs>
                          </m:apply>
                          <m:csymbol cd="prog2">null</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">unary_plus</m:csymbol>
                                  <m:ci>data</m:ci>
                                </m:apply>
                                <m:cs/>
                              </m:apply>
                              <m:ci>data</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="arith2">unary_plus</m:csymbol>
                              <m:ci>data</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <drox:ns>rbrace.test</drox:ns>
                                <m:ci>data</m:ci>
                              </m:apply>
                              <m:apply>
                                <drox:ns>jQuery.parseJSON</drox:ns>
                                <m:ci>data</m:ci>
                              </m:apply>
                              <m:ci>data</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog2">catch</m:csymbol>
                    <m:bvar>
                      <m:ci>e</m:ci>
                    </m:bvar>
                  </drox:dl>
                </drox:dl>
                <m:apply>
                  <drox:ns>jQuery.data</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:ci>key</m:ci>
                  <m:ci>data</m:ci>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>data</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>data</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>isEmptyDataObject</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>obj</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>name</m:ci>
            </drox:dt>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog2">for_each</m:csymbol>
          <m:ci>name</m:ci>
          <m:ci>obj</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>name</m:ci>
                  <m:cs>data</m:cs>
                </m:apply>
                <m:apply>
                  <drox:ns>jQuery.isEmptyObject</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>obj</m:ci>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">continue</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:ci>name</m:ci>
                <m:cs>toJSON</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:csymbol cd="logic1">true</m:csymbol>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>queue</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>queue</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>elem</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:cs>queue</m:cs>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>queue</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery._data</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>data</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>queue</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>jQuery._data</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>type</m:ci>
                              <m:apply>
                                <drox:ns>jQuery.makeArray</drox:ns>
                                <m:ci>data</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                        <drox:else>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>queue.push</drox:ns>
                              <m:ci>data</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:else>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dequeue</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>queue</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.queue</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:ci>type</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>startLength</m:ci>
                  </drox:dt>
                  <drox:ns>queue.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fn</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>queue.shift</drox:ns>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery._queueHooks</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:ci>type</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>next</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.dequeue</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>fn</m:ci>
                  <m:cs>inprogress</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>queue.shift</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog2">post_decrement</m:csymbol>
                    <m:ci>startLength</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>hooks.cur</drox:ns>
                </drox:dt>
                <m:ci>fn</m:ci>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>fn</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>type</m:ci>
                      <m:cs>fx</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>queue.unshift</drox:ns>
                        <m:cs>inprogress</m:cs>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">delete</m:csymbol>
                    <drox:ns>hooks.stop</drox:ns>
                  </m:apply>
                  <m:apply>
                    <drox:ns>fn.call</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:ci>next</m:ci>
                    <m:ci>hooks</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>startLength</m:ci>
                  </m:apply>
                  <m:ci>hooks</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>hooks.empty</drox:ns>
                      <m:ci>fire</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>_queueHooks</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>key</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:ci>type</m:ci>
                    <m:cs>queueHooks</m:cs>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>queue</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>setter</m:ci>
                  </drox:dt>
                  <m:cn>2</m:cn>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>type</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>data</m:ci>
                    </drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:cs>fx</m:cs>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog2">post_decrement</m:csymbol>
                    <m:ci>setter</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <drox:ns>arguments.length</drox:ns>
                  <m:ci>setter</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.queue</drox:ns>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>data</m:ci>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>each</m:ci>
                    </m:apply>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>queue</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>jQuery.queue</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:ci>data</m:ci>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>jQuery._queueHooks</drox:ns>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>type</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>fx</m:cs>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>queue</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:cs>inprogress</m:cs>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.dequeue</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>type</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dequeue</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.dequeue</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>delay</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>time</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>time</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <drox:ns>jQuery.fx</drox:ns>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:ci>time</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>queue</m:ci>
                  </m:apply>
                  <m:ci>type</m:ci>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>next</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>hooks</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>timeout</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>setTimeout</m:ci>
                          <m:ci>next</m:ci>
                          <m:ci>time</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>hooks.stop</drox:ns>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <m:ci>clearTimeout</m:ci>
                          <m:ci>timeout</m:ci>
                        </m:apply>
                      </m:bind>
                    </drox:dl>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>clearQueue</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>queue</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>promise</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>obj</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>count</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>defer</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.Deferred</drox:ns>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elements</m:ci>
                  </drox:dt>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>resolve</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">decrement</m:csymbol>
                          <m:ci>count</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>defer.resolveWith</drox:ns>
                          <m:ci>elements</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>elements</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>type</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>obj</m:ci>
                    </drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">post_decrement</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>tmp</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery._data</drox:ns>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elements</m:ci>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>type</m:ci>
                        <m:cs>queueHooks</m:cs>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>tmp</m:ci>
                      <drox:ns>tmp.empty</drox:ns>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>count</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>tmp.empty</drox:ns>
                          <m:ci>add</m:ci>
                        </m:apply>
                        <m:ci>resolve</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:ci>resolve</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>defer.promise</drox:ns>
                  <m:ci>obj</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>nodeHook</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>boolHook</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rclass</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5B%5Ct%5Cr%5Cn%5D/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rreturn</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5Cr/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rfocusable</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:input%7Cselect%7Ctextarea%7Cbutton%7Cobject)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rclickable</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:a%7Carea)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rboolean</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:checked%7Cselected%7Cautofocus%7Cautoplay%7Casync%7Ccontrols%7Cdefer%7Cdisabled%7Chidden%7Cloop%7Cmultiple%7Copen%7Creadonly%7Crequired%7Cscoped)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>ruseDefault</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:checked%7Cselected)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>getSetAttribute</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>getSetAttribute</m:ci>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>getSetInput</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>input</m:ci>
          </m:apply>
        </drox:di>
      </drox:dl>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>attr</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <drox:ns>jQuery.attr</drox:ns>
                  <m:ci>name</m:ci>
                  <m:ci>value</m:ci>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <drox:ns>arguments.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>removeAttr</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.removeAttr</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prop</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <drox:ns>jQuery.prop</drox:ns>
                  <m:ci>name</m:ci>
                  <m:ci>value</m:ci>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <drox:ns>arguments.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>removeProp</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>name</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog2">try</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog2">delete</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog2">catch</m:csymbol>
                        <m:bvar>
                          <m:ci>e</m:ci>
                        </m:bvar>
                      </drox:dl>
                    </drox:dl>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>addClass</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>classes</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cur</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>clazz</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>len</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>proceed</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>value</m:ci>
                      </m:apply>
                      <m:cs>string</m:cs>
                    </m:apply>
                    <m:ci>value</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>value</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>j</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>addClass</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>value.call</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>j</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>className</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>proceed</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>classes</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:ci>len</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>elem</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cur</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.nodeType</drox:ns>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <drox:ns>elem.className</drox:ns>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>%20</m:cs>
                                    <drox:ns>elem.className</drox:ns>
                                  </m:apply>
                                  <m:cs>%20</m:cs>
                                </m:apply>
                                <m:ci>replace</m:ci>
                              </m:apply>
                              <m:ci>rclass</m:ci>
                              <m:cs>%20</m:cs>
                            </m:apply>
                            <m:cs>%20</m:cs>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>cur</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>j</m:ci>
                            </drox:dt>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>clazz</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>classes</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                                  <m:ci>j</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:apply>
                                    <drox:ns>cur.indexOf</drox:ns>
                                    <m:apply>
                                      <m:csymbol cd="arith2">plus</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="arith2">plus</m:csymbol>
                                        <m:cs>%20</m:cs>
                                        <m:ci>clazz</m:ci>
                                      </m:apply>
                                      <m:cs>%20</m:cs>
                                    </m:apply>
                                  </m:apply>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                                    <drox:dt>
                                      <m:ci>cur</m:ci>
                                    </drox:dt>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="arith2">plus</m:csymbol>
                                      <m:ci>clazz</m:ci>
                                      <m:cs>%20</m:cs>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>elem.className</drox:ns>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>jQuery.trim</drox:ns>
                              <m:ci>cur</m:ci>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>removeClass</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>classes</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cur</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>clazz</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>len</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>proceed</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>value</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>j</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>removeClass</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>value.call</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>j</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>className</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>proceed</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>classes</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:ci>len</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>elem</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cur</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.nodeType</drox:ns>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <drox:ns>elem.className</drox:ns>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>%20</m:cs>
                                    <drox:ns>elem.className</drox:ns>
                                  </m:apply>
                                  <m:cs>%20</m:cs>
                                </m:apply>
                                <m:ci>replace</m:ci>
                              </m:apply>
                              <m:ci>rclass</m:ci>
                              <m:cs>%20</m:cs>
                            </m:apply>
                            <m:cs/>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>cur</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>j</m:ci>
                            </drox:dt>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>clazz</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>classes</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                                  <m:ci>j</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">while</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">geq</m:csymbol>
                                  <m:apply>
                                    <drox:ns>cur.indexOf</drox:ns>
                                    <m:apply>
                                      <m:csymbol cd="arith2">plus</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="arith2">plus</m:csymbol>
                                        <m:cs>%20</m:cs>
                                        <m:ci>clazz</m:ci>
                                      </m:apply>
                                      <m:cs>%20</m:cs>
                                    </m:apply>
                                  </m:apply>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>cur</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <drox:ns>cur.replace</drox:ns>
                                      <m:apply>
                                        <m:csymbol cd="arith2">plus</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="arith2">plus</m:csymbol>
                                          <m:cs>%20</m:cs>
                                          <m:ci>clazz</m:ci>
                                        </m:apply>
                                        <m:cs>%20</m:cs>
                                      </m:apply>
                                      <m:cs>%20</m:cs>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>elem.className</drox:ns>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:ci>value</m:ci>
                              <m:apply>
                                <drox:ns>jQuery.trim</drox:ns>
                                <m:ci>cur</m:ci>
                              </m:apply>
                              <m:cs/>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>toggleClass</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>stateVal</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>value</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>isBool</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>stateVal</m:ci>
                    </m:apply>
                    <m:cs>boolean</m:cs>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>value</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>i</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>toggleClass</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>value.call</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>i</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>className</m:ci>
                            </m:apply>
                            <m:ci>stateVal</m:ci>
                          </m:apply>
                          <m:ci>stateVal</m:ci>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="switch2">cond</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>string</m:cs>
                          </m:apply>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>className</m:ci>
                            </drox:dt>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>i</m:ci>
                            </drox:dt>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>self</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>state</m:ci>
                            </drox:dt>
                            <m:ci>stateVal</m:ci>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>classNames</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">while</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>className</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>classNames</m:ci>
                              <m:apply>
                                <m:csymbol cd="prog2">post_increment</m:csymbol>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>state</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:ci>isBool</m:ci>
                                <m:ci>state</m:ci>
                                <m:apply>
                                  <m:csymbol cd="logic1">not</m:csymbol>
                                  <m:apply>
                                    <drox:ns>self.hasClass</drox:ns>
                                    <m:ci>className</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>self</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:ci>state</m:ci>
                                  <m:cs>addClass</m:cs>
                                  <m:cs>removeClass</m:cs>
                                </m:apply>
                              </m:apply>
                              <m:ci>className</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>className</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery._data</drox:ns>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:cs>__className__</m:cs>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>className</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>className</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:cs/>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                      </drox:di>
                    </drox:dl>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hasClass</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>className</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>%20</m:cs>
                      <m:ci>selector</m:ci>
                    </m:apply>
                    <m:cs>%20</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>l</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>i</m:ci>
                  <m:ci>l</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:ci>nodeType</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="relation1">geq</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>%20</m:cs>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:ci>i</m:ci>
                                      </m:apply>
                                      <m:ci>className</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <m:cs>%20</m:cs>
                                </m:apply>
                                <m:ci>replace</m:ci>
                              </m:apply>
                              <m:ci>rclass</m:ci>
                              <m:cs>%20</m:cs>
                            </m:apply>
                            <m:ci>indexOf</m:ci>
                          </m:apply>
                          <m:ci>className</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="logic1">false</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>val</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>isFunction</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>arguments.length</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>elem</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>hooks</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>hooks</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">in</m:csymbol>
                              <m:cs>get</m:cs>
                              <m:ci>hooks</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>ret</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>hooks.get</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:cs>value</m:cs>
                              </m:apply>
                            </drox:dl>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>ret</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <drox:ns>elem.value</drox:ns>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                              <m:ci>ret</m:ci>
                            </m:apply>
                            <m:cs>string</m:cs>
                          </m:apply>
                          <m:apply>
                            <drox:ns>ret.replace</drox:ns>
                            <m:ci>rreturn</m:ci>
                            <m:cs/>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">eq</m:csymbol>
                              <m:ci>ret</m:ci>
                              <m:csymbol cd="prog2">null</m:csymbol>
                            </m:apply>
                            <m:cs/>
                            <m:ci>ret</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>isFunction</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>value</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>i</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>val</m:ci>
                        </drox:dt>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>self</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>jQuery</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>nodeType</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>isFunction</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>val</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>value.call</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>i</m:ci>
                            <m:apply>
                              <drox:ns>self.val</drox:ns>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>val</m:ci>
                            </drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dl>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="switch2">cond</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="relation1">eq</m:csymbol>
                            <m:ci>val</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>val</m:ci>
                          </drox:dt>
                          <m:cs/>
                        </drox:dl>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                              <m:ci>val</m:ci>
                            </m:apply>
                            <m:cs>number</m:cs>
                          </m:apply>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                          <drox:dt>
                            <m:ci>val</m:ci>
                          </drox:dt>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:cs/>
                        </drox:dl>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <drox:ns>jQuery.isArray</drox:ns>
                            <m:ci>val</m:ci>
                          </m:apply>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>val</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>jQuery.map</drox:ns>
                            <m:ci>val</m:ci>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>value</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="relation1">eq</m:csymbol>
                                    <m:ci>value</m:ci>
                                    <m:csymbol cd="prog2">null</m:csymbol>
                                  </m:apply>
                                  <m:cs/>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:ci>value</m:ci>
                                    <m:cs/>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </drox:dl>
                      </drox:di>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>hooks</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>value</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:ci>val</m:ci>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>valHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>option</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>val</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>elem.attributes</drox:ns>
                            <m:ci>value</m:ci>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                          <drox:ns>elem.value</drox:ns>
                          <drox:ns>elem.text</drox:ns>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>select</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dt>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>option</m:ci>
                          </drox:dt>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>options</m:ci>
                          </drox:dt>
                          <drox:ns>elem.options</drox:ns>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>index</m:ci>
                          </drox:dt>
                          <drox:ns>elem.selectedIndex</drox:ns>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>one</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>values</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:ci>one</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">array</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>max</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:ci>one</m:ci>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:ci>index</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                            <drox:ns>options.length</drox:ns>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>i</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>index</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:ci>max</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:ci>one</m:ci>
                              <m:ci>index</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">for</m:csymbol>
                        <m:csymbol cd="prog2">empty</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:ci>max</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>option</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>options</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <drox:ns>jQuery.support</drox:ns>
                                    <m:ci>optDisabled</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <drox:ns>option.disabled</drox:ns>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <m:apply>
                                      <drox:ns>option.getAttribute</drox:ns>
                                      <m:cs>disabled</m:cs>
                                    </m:apply>
                                    <m:csymbol cd="prog2">null</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>value</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:ci>jQuery</m:ci>
                                      <m:ci>option</m:ci>
                                    </m:apply>
                                    <m:ci>val</m:ci>
                                  </m:apply>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:ci>one</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:ci>value</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <drox:ns>values.push</drox:ns>
                                <m:ci>value</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:ci>values</m:ci>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>set</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>value</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>values</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>jQuery.makeArray</drox:ns>
                            <m:ci>value</m:ci>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:ci>jQuery</m:ci>
                                <m:ci>elem</m:ci>
                              </m:apply>
                              <m:ci>find</m:ci>
                            </m:apply>
                            <m:cs>option</m:cs>
                          </m:apply>
                          <m:ci>each</m:ci>
                        </m:apply>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>selected</m:ci>
                              </m:apply>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="relation1">geq</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.inArray</drox:ns>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:ci>jQuery</m:ci>
                                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    </m:apply>
                                    <m:ci>val</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:ci>values</m:ci>
                              </m:apply>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </drox:dl>
                        </m:bind>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <drox:ns>values.length</drox:ns>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>elem.selectedIndex</drox:ns>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="arith1">unary_minus</m:csymbol>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:ci>values</m:ci>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>attr</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>notxml</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>nType</m:ci>
                  </drox:dt>
                  <drox:ns>elem.nodeType</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <drox:ns>elem.getAttribute</drox:ns>
                  </m:apply>
                  <m:ci>core_strundefined</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.prop</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:ci>name</m:ci>
                      <m:ci>value</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>notxml</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>notxml</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>name</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>name.toLowerCase</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>hooks</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>value</m:ci>
                      <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="switch2">cond</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>value</m:ci>
                          <m:csymbol cd="prog2">null</m:csymbol>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>jQuery.removeAttr</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:ci>hooks</m:ci>
                              <m:ci>notxml</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">in</m:csymbol>
                              <m:cs>set</m:cs>
                              <m:ci>hooks</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>ret</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>hooks.set</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:ci>value</m:ci>
                                <m:ci>name</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:ci>ret</m:ci>
                      </m:apply>
                    </drox:di>
                    <m:apply>
                      <drox:ns>elem.setAttribute</drox:ns>
                      <m:ci>name</m:ci>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>value</m:ci>
                        <m:cs/>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:ci>value</m:ci>
                    </m:apply>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>hooks</m:ci>
                          <m:ci>notxml</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">in</m:csymbol>
                          <m:cs>get</m:cs>
                          <m:ci>hooks</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>ret</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>hooks.get</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>ret</m:ci>
                  </m:apply>
                </drox:di>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <drox:ns>elem.getAttribute</drox:ns>
                    </m:apply>
                    <m:ci>core_strundefined</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>ret</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>elem.getAttribute</drox:ns>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>ret</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    <m:ci>ret</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>removeAttr</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>name</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>propName</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>attrNames</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>value</m:ci>
                    <m:apply>
                      <drox:ns>value.match</drox:ns>
                      <m:ci>core_rnotwhite</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>attrNames</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>elem.nodeType</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>name</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>attrNames</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>propName</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <drox:ns>rboolean.test</drox:ns>
                          <m:ci>name</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:ci>getSetAttribute</m:ci>
                              </m:apply>
                              <m:apply>
                                <drox:ns>ruseDefault.test</drox:ns>
                                <m:ci>name</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>elem</m:ci>
                                    <m:apply>
                                      <drox:ns>jQuery.camelCase</drox:ns>
                                      <m:apply>
                                        <m:csymbol cd="arith2">plus</m:csymbol>
                                        <m:cs>default-</m:cs>
                                        <m:ci>name</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </drox:dt>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>elem</m:ci>
                                      <m:ci>propName</m:ci>
                                    </m:apply>
                                  </drox:dt>
                                  <m:csymbol cd="logic1">false</m:csymbol>
                                </drox:dl>
                              </drox:dl>
                            </m:apply>
                            <drox:else>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>elem</m:ci>
                                      <m:ci>propName</m:ci>
                                    </m:apply>
                                  </drox:dt>
                                  <m:csymbol cd="logic1">false</m:csymbol>
                                </drox:dl>
                              </m:apply>
                            </drox:else>
                          </m:apply>
                        </m:apply>
                        <drox:else>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.attr</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>name</m:ci>
                              <m:cs/>
                            </m:apply>
                          </m:apply>
                        </drox:else>
                      </m:apply>
                      <m:apply>
                        <drox:ns>elem.removeAttribute</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>getSetAttribute</m:ci>
                          <m:ci>name</m:ci>
                          <m:ci>propName</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>attrHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>set</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>value</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>jQuery.support</drox:ns>
                                <m:ci>radioValue</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>value</m:ci>
                              <m:cs>radio</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <drox:ns>jQuery.nodeName</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:cs>input</m:cs>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>val</m:ci>
                              </drox:dt>
                              <drox:ns>elem.value</drox:ns>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <drox:ns>elem.setAttribute</drox:ns>
                            <m:cs>type</m:cs>
                            <m:ci>value</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>val</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <drox:ns>elem.value</drox:ns>
                                </drox:dt>
                                <m:ci>val</m:ci>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>value</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>propFix</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>tabindex</m:ci>
                </drox:dt>
                <m:cs>tabIndex</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>readonly</m:ci>
                </drox:dt>
                <m:cs>readOnly</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>for</m:ci>
                </drox:dt>
                <m:cs>htmlFor</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>class</m:ci>
                </drox:dt>
                <m:cs>className</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>maxlength</m:ci>
                </drox:dt>
                <m:cs>maxLength</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>cellspacing</m:ci>
                </drox:dt>
                <m:cs>cellSpacing</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>cellpadding</m:ci>
                </drox:dt>
                <m:cs>cellPadding</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>rowspan</m:ci>
                </drox:dt>
                <m:cs>rowSpan</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>colspan</m:ci>
                </drox:dt>
                <m:cs>colSpan</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>usemap</m:ci>
                </drox:dt>
                <m:cs>useMap</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>frameborder</m:ci>
                </drox:dt>
                <m:cs>frameBorder</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>contenteditable</m:ci>
                </drox:dt>
                <m:cs>contentEditable</m:cs>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prop</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>notxml</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>nType</m:ci>
                  </drox:dt>
                  <drox:ns>elem.nodeType</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>notxml</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>notxml</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>name</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>hooks</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>jQuery.propHooks</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:ci>value</m:ci>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:ci>hooks</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">in</m:csymbol>
                          <m:cs>set</m:cs>
                          <m:ci>hooks</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>ret</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>hooks.set</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>value</m:ci>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:ci>ret</m:ci>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>elem</m:ci>
                                <m:ci>name</m:ci>
                              </m:apply>
                            </drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>hooks</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">in</m:csymbol>
                            <m:cs>get</m:cs>
                            <m:ci>hooks</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>ret</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>hooks.get</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:csymbol cd="prog2">null</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>ret</m:ci>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elem</m:ci>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>propHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>tabIndex</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>attributeNode</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>elem.getAttributeNode</drox:ns>
                            <m:cs>tabindex</m:cs>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>attributeNode</m:ci>
                            <drox:ns>attributeNode.specified</drox:ns>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">parseInt</m:csymbol>
                            <drox:ns>attributeNode.value</drox:ns>
                            <m:cn>10</m:cn>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
            </drox:dl>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:ci>boolHook</m:ci>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>get</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>prop</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.prop</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>attr</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>prop</m:ci>
                      </m:apply>
                      <m:cs>boolean</m:cs>
                    </m:apply>
                    <m:apply>
                      <drox:ns>elem.getAttribute</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>detail</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>prop</m:ci>
                      </m:apply>
                      <m:cs>boolean</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:ci>getSetInput</m:ci>
                        <m:ci>getSetAttribute</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="relation1">neq</m:csymbol>
                        <m:ci>attr</m:ci>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <drox:ns>ruseDefault.test</drox:ns>
                          <m:ci>name</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elem</m:ci>
                          <m:apply>
                            <drox:ns>jQuery.camelCase</drox:ns>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cs>default-</m:cs>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>attr</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <drox:ns>elem.getAttributeNode</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>detail</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <drox:ns>detail.value</drox:ns>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <drox:ns>name.toLowerCase</drox:ns>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>set</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>value</m:ci>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.removeAttr</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>elem.setAttribute</drox:ns>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:di>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>elem</m:ci>
                      <m:apply>
                        <drox:ns>jQuery.camelCase</drox:ns>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:cs>default-</m:cs>
                          <m:ci>name</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elem</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:dl>
                </drox:dl>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>name</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">or</m:csymbol>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.attrHooks</drox:ns>
                <m:ci>value</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>get</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>name</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>ret</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>elem.getAttributeNode</drox:ns>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.nodeName</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:cs>input</m:cs>
                      </m:apply>
                      <drox:ns>elem.defaultValue</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>ret</m:ci>
                          <drox:ns>ret.specified</drox:ns>
                        </m:apply>
                        <drox:ns>ret.value</drox:ns>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>set</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>name</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.nodeName</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:cs>input</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>elem.defaultValue</drox:ns>
                        </drox:dt>
                        <m:ci>value</m:ci>
                      </drox:dl>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>nodeHook</m:ci>
                            <m:apply>
                              <drox:ns>nodeHook.set</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>value</m:ci>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:ci>getSetAttribute</m:ci>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>nodeHook</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.valHooks</drox:ns>
                  <m:ci>button</m:ci>
                </m:apply>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>get</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>name</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>elem.getAttributeNode</drox:ns>
                          <m:ci>name</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>ret</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                              <drox:ns>ret.value</drox:ns>
                              <m:cs/>
                            </m:apply>
                            <drox:ns>ret.specified</drox:ns>
                          </m:apply>
                        </m:apply>
                        <drox:ns>ret.value</drox:ns>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>set</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>value</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>name</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>elem.getAttributeNode</drox:ns>
                          <m:ci>name</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>ret</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>elem.setAttributeNode</drox:ns>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>ret</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>elem.ownerDocument</drox:ns>
                                <m:ci>createAttribute</m:ci>
                              </m:apply>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>ret.value</drox:ns>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                        <drox:dt>
                          <m:ci>value</m:ci>
                        </drox:dt>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs/>
                      </drox:dl>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:ci>value</m:ci>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.attrHooks</drox:ns>
                <m:ci>contenteditable</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>get</m:ci>
                </drox:dt>
                <drox:ns>nodeHook.get</drox:ns>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>set</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>name</m:ci>
                  </m:bvar>
                  <m:apply>
                    <drox:ns>nodeHook.set</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>value</m:ci>
                        <m:cs/>
                      </m:apply>
                      <m:csymbol cd="logic1">false</m:csymbol>
                      <m:ci>value</m:ci>
                    </m:apply>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
              <m:cs>width</m:cs>
              <m:cs>height</m:cs>
            </m:apply>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.attrHooks</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <drox:ns>jQuery.extend</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.attrHooks</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>set</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>value</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>value</m:ci>
                            <m:cs/>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>elem.setAttribute</drox:ns>
                              <m:ci>name</m:ci>
                              <m:cs>auto</m:cs>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:ci>value</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                  </drox:dl>
                </m:apply>
              </drox:dl>
            </m:bind>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>hrefNormalized</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
              <m:cs>href</m:cs>
              <m:cs>src</m:cs>
              <m:cs>width</m:cs>
              <m:cs>height</m:cs>
            </m:apply>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.attrHooks</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <drox:ns>jQuery.extend</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.attrHooks</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>get</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>ret</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>elem.getAttribute</drox:ns>
                              <m:ci>name</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">eq</m:csymbol>
                              <m:ci>ret</m:ci>
                              <m:csymbol cd="prog2">null</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                            <m:ci>ret</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                  </drox:dl>
                </m:apply>
              </drox:dl>
            </m:bind>
          </m:apply>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
              <m:cs>href</m:cs>
              <m:cs>src</m:cs>
            </m:apply>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.propHooks</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <drox:ns>elem.getAttribute</drox:ns>
                          <m:ci>name</m:ci>
                          <m:cn>4</m:cn>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:dl>
            </m:bind>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>style</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.attrHooks</drox:ns>
                <m:ci>style</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>get</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>set</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>elem.style</drox:ns>
                          <m:ci>cssText</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>value</m:ci>
                        <m:cs/>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>optSelected</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.propHooks</drox:ns>
                <m:ci>selected</m:ci>
              </m:apply>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.extend</drox:ns>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.propHooks</drox:ns>
                <m:ci>selected</m:ci>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>get</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>parent</m:ci>
                        </drox:dt>
                        <drox:ns>elem.parentNode</drox:ns>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>parent</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:ns>parent.selectedIndex</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <drox:ns>parent.parentNode</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>parent.parentNode</drox:ns>
                              <m:ci>selectedIndex</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
            </m:apply>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>enctype</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.propFix</drox:ns>
                <m:ci>enctype</m:ci>
              </m:apply>
            </drox:dt>
            <m:cs>encoding</m:cs>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>checkOn</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
              <m:cs>radio</m:cs>
              <m:cs>checkbox</m:cs>
            </m:apply>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.valHooks</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <drox:ns>elem.getAttribute</drox:ns>
                              <m:cs>value</m:cs>
                            </m:apply>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                          <m:cs>on</m:cs>
                          <drox:ns>elem.value</drox:ns>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:dl>
            </m:bind>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:csymbol cd="ecmascript3">array</m:csymbol>
          <m:cs>radio</m:cs>
          <m:cs>checkbox</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.valHooks</drox:ns>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.extend</drox:ns>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.valHooks</drox:ns>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>set</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>value</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.isArray</drox:ns>
                        <m:ci>value</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>elem.checked</drox:ns>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="relation1">geq</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.inArray</drox:ns>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:ci>jQuery</m:ci>
                                      <m:ci>elem</m:ci>
                                    </m:apply>
                                    <m:ci>val</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:ci>value</m:ci>
                              </m:apply>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
            </m:apply>
          </drox:dl>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>rformElems</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:input%7Cselect%7Ctextarea)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rkeyEvent</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5Ekey/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rmouseEvent</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:mouse%7Ccontextmenu)%7Cclick/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rfocusMorph</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:focusinfocus%7Cfocusoutblur)$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rtypenamespace</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(%5B%5E.%5D*)(?:%5C.(.+)%7C)$/</m:cs>
          </m:apply>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>returnTrue</m:ci>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:csymbol cd="logic1">true</m:csymbol>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>returnFalse</m:ci>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:csymbol cd="logic1">false</m:csymbol>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.event</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>global</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>add</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>handler</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>events</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>t</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handleObjIn</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>special</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>eventHandle</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handleObj</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handlers</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>namespaces</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>origType</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elemData</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery._data</drox:ns>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>elemData</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:ns>handler.handler</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handleObjIn</m:ci>
                    </drox:dt>
                    <m:ci>handler</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handler</m:ci>
                    </drox:dt>
                    <drox:ns>handleObjIn.handler</drox:ns>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>selector</m:ci>
                    </drox:dt>
                    <drox:ns>handleObjIn.selector</drox:ns>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>handler.guid</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>handler.guid</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <drox:ns>jQuery.guid</drox:ns>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>events</m:ci>
                    </drox:dt>
                    <drox:ns>elemData.events</drox:ns>
                  </drox:dl>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>events</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>elemData.events</drox:ns>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                      </drox:dl>
                    </drox:dl>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>eventHandle</m:ci>
                    </drox:dt>
                    <drox:ns>elemData.handle</drox:ns>
                  </drox:dl>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>eventHandle</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>elemData.handle</drox:ns>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>e</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                  <m:ci>jQuery</m:ci>
                                </m:apply>
                                <m:ci>core_strundefined</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>jQuery.event</drox:ns>
                                  <m:ci>dispatch</m:ci>
                                </m:apply>
                                <m:ci>apply</m:ci>
                              </m:apply>
                              <drox:ns>eventHandle.elem</drox:ns>
                              <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:dl>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>eventHandle.elem</drox:ns>
                    </drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>types</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>t</m:ci>
                </drox:dt>
                <drox:ns>types.length</drox:ns>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">post_decrement</m:csymbol>
                  <m:ci>t</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>tmp</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>origType</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>tmp</m:ci>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </drox:dl>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>namespaces</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:ci>split</m:ci>
                          </m:apply>
                          <m:cs>.</m:cs>
                        </m:apply>
                        <m:ci>sort</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>special</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>special</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handleObj</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.extend</drox:ns>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>type</m:ci>
                          </drox:dt>
                          <m:ci>type</m:ci>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>origType</m:ci>
                          </drox:dt>
                          <m:ci>origType</m:ci>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>data</m:ci>
                          </drox:dt>
                          <m:ci>data</m:ci>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>handler</m:ci>
                          </drox:dt>
                          <m:ci>handler</m:ci>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>guid</m:ci>
                          </drox:dt>
                          <drox:ns>handler.guid</drox:ns>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>selector</m:ci>
                          </drox:dt>
                          <m:ci>selector</m:ci>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>needsContext</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>selector</m:ci>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <drox:ns>jQuery.expr</drox:ns>
                                    <m:ci>match</m:ci>
                                  </m:apply>
                                  <m:ci>needsContext</m:ci>
                                </m:apply>
                                <m:ci>test</m:ci>
                              </m:apply>
                              <m:ci>selector</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>namespace</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>namespaces.join</drox:ns>
                            <m:cs>.</m:cs>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:ci>handleObjIn</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>handlers</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>events</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>handlers</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>events</m:ci>
                              <m:ci>type</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                          </m:apply>
                        </drox:dl>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>handlers.delegateCount</drox:ns>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="switch2">cond</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <drox:ns>elem.addEventListener</drox:ns>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>elem.addEventListener</drox:ns>
                                <m:ci>type</m:ci>
                                <m:ci>eventHandle</m:ci>
                                <m:csymbol cd="logic1">false</m:csymbol>
                              </m:apply>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <drox:ns>elem.attachEvent</drox:ns>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>elem.attachEvent</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>on</m:cs>
                                  <m:ci>type</m:ci>
                                </m:apply>
                                <m:ci>eventHandle</m:ci>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <drox:ns>special.add</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>special.add</drox:ns>
                          <m:ci>call</m:ci>
                        </m:apply>
                        <m:ci>elem</m:ci>
                        <m:ci>handleObj</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>handleObj.handler</drox:ns>
                            <m:ci>guid</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>handleObj.handler</drox:ns>
                                <m:ci>guid</m:ci>
                              </m:apply>
                            </drox:dt>
                            <drox:ns>handler.guid</drox:ns>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>selector</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>handlers.splice</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <drox:ns>handlers.delegateCount</drox:ns>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                        <m:ci>handleObj</m:ci>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>handlers.push</drox:ns>
                          <m:ci>handleObj</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>jQuery.event</drox:ns>
                          <m:ci>global</m:ci>
                        </m:apply>
                        <m:ci>type</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>elem</m:ci>
                </drox:dt>
                <m:csymbol cd="prog2">null</m:csymbol>
              </drox:dl>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>remove</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>handler</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>mappedTypes</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handleObj</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>origCount</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>t</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>events</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>special</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handlers</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>namespaces</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>origType</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elemData</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.hasData</drox:ns>
                      <m:ci>elem</m:ci>
                    </m:apply>
                    <m:apply>
                      <drox:ns>jQuery._data</drox:ns>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>types</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>t</m:ci>
                </drox:dt>
                <drox:ns>types.length</drox:ns>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">post_decrement</m:csymbol>
                  <m:ci>t</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>tmp</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>origType</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>tmp</m:ci>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </drox:dl>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>namespaces</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:ci>split</m:ci>
                          </m:apply>
                          <m:cs>.</m:cs>
                        </m:apply>
                        <m:ci>sort</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>type</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">for_each</m:csymbol>
                        <m:ci>type</m:ci>
                        <m:ci>events</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.event</drox:ns>
                              <m:ci>remove</m:ci>
                            </m:apply>
                            <m:ci>elem</m:ci>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:ci>type</m:ci>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>types</m:ci>
                                <m:ci>t</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>handler</m:ci>
                            <m:ci>selector</m:ci>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">continue</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>special</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handlers</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>tmp</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>tmp</m:ci>
                        <m:cn>2</m:cn>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">new</m:csymbol>
                        <m:ci>RegExp</m:ci>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:cs>(%5E%7C%5C.)</m:cs>
                            <m:apply>
                              <drox:ns>namespaces.join</drox:ns>
                              <m:cs>%5C.(?:.*%5C.%7C)</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:cs>(%5C.%7C$)</m:cs>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>origCount</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>j</m:ci>
                      </drox:dt>
                      <drox:ns>handlers.length</drox:ns>
                    </drox:dl>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">post_decrement</m:csymbol>
                      <m:ci>j</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>handleObj</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>handlers</m:ci>
                          <m:ci>j</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>handlers.splice</drox:ns>
                            <m:ci>j</m:ci>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:ns>handleObj.selector</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                <drox:ns>handlers.delegateCount</drox:ns>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:ns>special.remove</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>special.remove</drox:ns>
                                  <m:ci>call</m:ci>
                                </m:apply>
                                <m:ci>elem</m:ci>
                                <m:ci>handleObj</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>origCount</m:ci>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <drox:ns>handlers.length</drox:ns>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.removeEvent</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>type</m:ci>
                            <drox:ns>elemData.handle</drox:ns>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">delete</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>events</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isEmptyObject</drox:ns>
                  <m:ci>events</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">delete</m:csymbol>
                    <drox:ns>elemData.handle</drox:ns>
                  </m:apply>
                  <m:apply>
                    <drox:ns>jQuery._removeData</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>events</m:cs>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>trigger</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>event</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>onlyHandlers</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>handle</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ontype</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cur</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>bubbleType</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>special</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>eventPath</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <drox:ns>core_hasOwn.call</drox:ns>
                      <m:ci>event</m:ci>
                      <m:cs>type</m:cs>
                    </m:apply>
                    <drox:ns>event.type</drox:ns>
                    <m:ci>event</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>namespaces</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <drox:ns>core_hasOwn.call</drox:ns>
                      <m:ci>event</m:ci>
                      <m:cs>namespace</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>event.namespace</drox:ns>
                        <m:ci>split</m:ci>
                      </m:apply>
                      <m:cs>.</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>cur</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </drox:dl>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>rfocusMorph.test</drox:ns>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:ci>type</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>triggered</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">geq</m:csymbol>
                  <m:apply>
                    <drox:ns>type.indexOf</drox:ns>
                    <m:cs>.</m:cs>
                  </m:apply>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>namespaces</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>type.split</drox:ns>
                      <m:cs>.</m:cs>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>namespaces.shift</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <drox:ns>namespaces.sort</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>ontype</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">lt</m:csymbol>
                    <m:apply>
                      <drox:ns>type.indexOf</drox:ns>
                      <m:cs>:</m:cs>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:cs>on</m:cs>
                    <m:ci>type</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>event</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>event</m:ci>
                    <drox:ns>jQuery.expando</drox:ns>
                  </m:apply>
                  <m:ci>event</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <drox:ns>jQuery.Event</drox:ns>
                    <m:ci>type</m:ci>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                          <m:ci>event</m:ci>
                        </m:apply>
                        <m:cs>object</m:cs>
                      </m:apply>
                      <m:ci>event</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.isTrigger</drox:ns>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.namespace</drox:ns>
                </drox:dt>
                <m:apply>
                  <drox:ns>namespaces.join</drox:ns>
                  <m:cs>.</m:cs>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.namespace_re</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <drox:ns>event.namespace</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>(%5E%7C%5C.)</m:cs>
                        <m:apply>
                          <drox:ns>namespaces.join</drox:ns>
                          <m:cs>%5C.(?:.*%5C.%7C)</m:cs>
                        </m:apply>
                      </m:apply>
                      <m:cs>(%5C.%7C$)</m:cs>
                    </m:apply>
                  </m:apply>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.result</drox:ns>
                </drox:dt>
                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>event.target</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>event.target</drox:ns>
                    </drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>data</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">eq</m:csymbol>
                    <m:ci>data</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:ci>event</m:ci>
                  </m:apply>
                  <m:apply>
                    <drox:ns>jQuery.makeArray</drox:ns>
                    <m:ci>data</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:ci>event</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>special</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>onlyHandlers</m:ci>
                    </m:apply>
                    <drox:ns>special.trigger</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>special.trigger</drox:ns>
                        <m:ci>apply</m:ci>
                      </m:apply>
                      <m:ci>elem</m:ci>
                      <m:ci>data</m:ci>
                    </m:apply>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>onlyHandlers</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <drox:ns>special.noBubble</drox:ns>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.isWindow</drox:ns>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>bubbleType</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <drox:ns>rfocusMorph.test</drox:ns>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>bubbleType</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cur</m:ci>
                        </drox:dt>
                        <drox:ns>cur.parentNode</drox:ns>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:ci>cur</m:ci>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>cur</m:ci>
                      </drox:dt>
                      <drox:ns>cur.parentNode</drox:ns>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>eventPath.push</drox:ns>
                        <m:ci>cur</m:ci>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>tmp</m:ci>
                        </drox:dt>
                        <m:ci>cur</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>tmp</m:ci>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>eventPath.push</drox:ns>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>cur</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>eventPath</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>event.isPropagationStopped</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>event.type</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">gt</m:csymbol>
                        <m:ci>i</m:ci>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                      <m:ci>bubbleType</m:ci>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handle</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <drox:ns>event.type</drox:ns>
                      </m:apply>
                      <m:apply>
                        <drox:ns>jQuery._data</drox:ns>
                        <m:ci>cur</m:ci>
                        <m:cs>handle</m:cs>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>handle</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>handle.apply</drox:ns>
                        <m:ci>cur</m:ci>
                        <m:ci>data</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handle</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>ontype</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>cur</m:ci>
                        <m:ci>ontype</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>handle</m:ci>
                          <m:apply>
                            <drox:ns>jQuery.acceptData</drox:ns>
                            <m:ci>cur</m:ci>
                          </m:apply>
                        </m:apply>
                        <drox:ns>handle.apply</drox:ns>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <drox:ns>handle.apply</drox:ns>
                          <m:ci>cur</m:ci>
                          <m:ci>data</m:ci>
                        </m:apply>
                        <m:csymbol cd="logic1">false</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>event.preventDefault</drox:ns>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.type</drox:ns>
                </drox:dt>
                <m:ci>type</m:ci>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>onlyHandlers</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>event.isDefaultPrevented</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>type</m:ci>
                              <m:cs>click</m:cs>
                            </m:apply>
                            <m:apply>
                              <drox:ns>jQuery.nodeName</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:cs>a</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <drox:ns>jQuery.acceptData</drox:ns>
                        <m:ci>elem</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>ontype</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elem</m:ci>
                              <m:ci>type</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.isWindow</drox:ns>
                              <m:ci>elem</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>tmp</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elem</m:ci>
                              <m:ci>ontype</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>tmp</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>elem</m:ci>
                                    <m:ci>ontype</m:ci>
                                  </m:apply>
                                </drox:dt>
                                <m:csymbol cd="prog2">null</m:csymbol>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>jQuery.event</drox:ns>
                                <m:ci>triggered</m:ci>
                              </m:apply>
                            </drox:dt>
                            <m:ci>type</m:ci>
                          </drox:dl>
                          <drox:dl>
                            <m:csymbol cd="prog2">try</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>elem</m:ci>
                                <m:ci>type</m:ci>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog2">catch</m:csymbol>
                              <m:bvar>
                                <m:ci>e</m:ci>
                              </m:bvar>
                            </drox:dl>
                          </drox:dl>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>jQuery.event</drox:ns>
                                <m:ci>triggered</m:ci>
                              </m:apply>
                            </drox:dt>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>tmp</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>elem</m:ci>
                                    <m:ci>ontype</m:ci>
                                  </m:apply>
                                </drox:dt>
                                <m:ci>tmp</m:ci>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <drox:ns>event.result</drox:ns>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dispatch</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>event</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>event</m:ci>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.event</drox:ns>
                    <m:ci>fix</m:ci>
                  </m:apply>
                  <m:ci>event</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handleObj</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>matched</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handlerQueue</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>args</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>core_slice.call</drox:ns>
                    <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handlers</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>special</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>args</m:ci>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:dt>
                <m:ci>event</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.delegateTarget</drox:ns>
                </drox:dt>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:ns>special.preDispatch</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>special.preDispatch</drox:ns>
                        <m:ci>call</m:ci>
                      </m:apply>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>event</m:ci>
                    </m:apply>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>handlerQueue</m:ci>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>handlers</m:ci>
                    </m:apply>
                    <m:ci>call</m:ci>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:ci>event</m:ci>
                  <m:ci>handlers</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>matched</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>handlerQueue</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>event.isPropagationStopped</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>event.currentTarget</drox:ns>
                    </drox:dt>
                    <drox:ns>matched.elem</drox:ns>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>j</m:ci>
                    </drox:dt>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>handleObj</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>matched.handlers</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog2">post_increment</m:csymbol>
                            <m:ci>j</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <drox:ns>event.isImmediatePropagationStopped</drox:ns>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>event.handleObj</drox:ns>
                            </drox:dt>
                            <m:ci>handleObj</m:ci>
                          </drox:dl>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>event.data</drox:ns>
                            </drox:dt>
                            <drox:ns>handleObj.data</drox:ns>
                          </drox:dl>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>ret</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                                <m:ci>apply</m:ci>
                              </m:apply>
                              <drox:ns>matched.elem</drox:ns>
                              <m:ci>args</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                              <m:ci>ret</m:ci>
                              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <drox:ns>event.result</drox:ns>
                                    </drox:dt>
                                    <m:ci>ret</m:ci>
                                  </drox:dl>
                                  <m:csymbol cd="logic1">false</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>event.preventDefault</drox:ns>
                                  </m:apply>
                                  <m:apply>
                                    <drox:ns>event.stopPropagation</drox:ns>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:ns>special.postDispatch</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>special.postDispatch</drox:ns>
                      <m:ci>call</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>event</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <drox:ns>event.result</drox:ns>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>handlers</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>event</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>handlers</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>sel</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handleObj</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>matches</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handlerQueue</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>delegateCount</m:ci>
                  </drox:dt>
                  <drox:ns>handlers.delegateCount</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cur</m:ci>
                  </drox:dt>
                  <drox:ns>event.target</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>delegateCount</m:ci>
                    <drox:ns>cur.nodeType</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">neq</m:csymbol>
                      <m:ci>cur</m:ci>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>cur</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>cur.nodeType</drox:ns>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>matches</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">array</m:csymbol>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>delegateCount</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>handleObj</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>handlers</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                              </drox:dl>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>sel</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <drox:ns>handleObj.selector</drox:ns>
                                  <m:cs>%20</m:cs>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>matches</m:ci>
                                    <m:ci>sel</m:ci>
                                  </m:apply>
                                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>matches</m:ci>
                                        <m:ci>sel</m:ci>
                                      </m:apply>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                                      <drox:ns>handleObj.needsContext</drox:ns>
                                      <m:apply>
                                        <m:csymbol cd="relation1">geq</m:csymbol>
                                        <m:apply>
                                          <m:apply>
                                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                            <m:apply>
                                              <m:ci>jQuery</m:ci>
                                              <m:ci>sel</m:ci>
                                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                                            </m:apply>
                                            <m:ci>index</m:ci>
                                          </m:apply>
                                          <m:ci>cur</m:ci>
                                        </m:apply>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:apply>
                                          <drox:ns>jQuery.find</drox:ns>
                                          <m:ci>sel</m:ci>
                                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                                          <m:csymbol cd="prog2">null</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                                            <m:ci>cur</m:ci>
                                          </m:apply>
                                        </m:apply>
                                        <m:ci>length</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>matches</m:ci>
                                  <m:ci>sel</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>matches.push</drox:ns>
                                    <m:ci>handleObj</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:ns>matches.length</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>handlerQueue.push</drox:ns>
                                <drox:dl>
                                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                                  <drox:di>
                                    <drox:dt>
                                      <m:ci>elem</m:ci>
                                    </drox:dt>
                                    <m:ci>cur</m:ci>
                                  </drox:di>
                                  <drox:di>
                                    <drox:dt>
                                      <m:ci>handlers</m:ci>
                                    </drox:dt>
                                    <m:ci>matches</m:ci>
                                  </drox:di>
                                </drox:dl>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>delegateCount</m:ci>
                  <drox:ns>handlers.length</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>handlerQueue.push</drox:ns>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>elem</m:ci>
                        </drox:dt>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>handlers</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>handlers.slice</drox:ns>
                          <m:ci>delegateCount</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>handlerQueue</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>fix</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>event</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>event</m:ci>
                  <drox:ns>jQuery.expando</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>event</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>prop</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>copy</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                  <drox:ns>event.type</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>originalEvent</m:ci>
                  </drox:dt>
                  <m:ci>event</m:ci>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fixHook</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>fixHooks</m:ci>
                    </m:apply>
                    <m:ci>type</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>fixHook</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>fixHooks</m:ci>
                        </m:apply>
                        <m:ci>type</m:ci>
                      </m:apply>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>fixHook</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <drox:ns>rmouseEvent.test</drox:ns>
                          <m:ci>type</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>mouseHooks</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <drox:ns>rkeyEvent.test</drox:ns>
                            <m:ci>type</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>keyHooks</m:ci>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="ecmascript3">object</m:csymbol>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>copy</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <drox:ns>fixHook.props</drox:ns>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>props</m:ci>
                      </m:apply>
                      <m:ci>concat</m:ci>
                    </m:apply>
                    <drox:ns>fixHook.props</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>props</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>event</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">new</m:csymbol>
                  <drox:ns>jQuery.Event</drox:ns>
                  <m:ci>originalEvent</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <drox:ns>copy.length</drox:ns>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">post_decrement</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>prop</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>copy</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>event</m:ci>
                        <m:ci>prop</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>originalEvent</m:ci>
                      <m:ci>prop</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>event.target</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>event.target</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>event.target</drox:ns>
                    <m:ci>nodeType</m:ci>
                  </m:apply>
                  <m:cn>3</m:cn>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>event.target</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>event.target</drox:ns>
                      <m:ci>parentNode</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>event.metaKey</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <drox:ns>event.metaKey</drox:ns>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <drox:ns>fixHook.filter</drox:ns>
                  <m:apply>
                    <drox:ns>fixHook.filter</drox:ns>
                    <m:ci>event</m:ci>
                    <m:ci>originalEvent</m:ci>
                  </m:apply>
                  <m:ci>event</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>props</m:ci>
            </drox:dt>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:cs>altKey%20bubbles%20cancelable%20ctrlKey%20currentTarget%20eventPhase%20metaKey%20relatedTarget%20shiftKey%20target%20timeStamp%20view%20which</m:cs>
                <m:ci>split</m:ci>
              </m:apply>
              <m:cs>%20</m:cs>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>fixHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>keyHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>props</m:ci>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:cs>char%20charCode%20key%20keyCode</m:cs>
                    <m:ci>split</m:ci>
                  </m:apply>
                  <m:cs>%20</m:cs>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>filter</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>event</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>original</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <drox:ns>event.which</drox:ns>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.which</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">neq</m:csymbol>
                            <drox:ns>original.charCode</drox:ns>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                          <drox:ns>original.charCode</drox:ns>
                          <drox:ns>original.keyCode</drox:ns>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>event</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>mouseHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>props</m:ci>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:cs>button%20buttons%20clientX%20clientY%20fromElement%20offsetX%20offsetY%20pageX%20pageY%20screenX%20screenY%20toElement</m:cs>
                    <m:ci>split</m:ci>
                  </m:apply>
                  <m:cs>%20</m:cs>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>filter</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>event</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>original</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>body</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>eventDoc</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>doc</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>button</m:ci>
                      </drox:dt>
                      <drox:ns>original.button</drox:ns>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>fromElement</m:ci>
                      </drox:dt>
                      <drox:ns>original.fromElement</drox:ns>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">eq</m:csymbol>
                        <drox:ns>event.pageX</drox:ns>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="relation1">neq</m:csymbol>
                        <drox:ns>original.clientX</drox:ns>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>eventDoc</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>doc</m:ci>
                        </drox:dt>
                        <drox:ns>eventDoc.documentElement</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>body</m:ci>
                        </drox:dt>
                        <drox:ns>eventDoc.body</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.pageX</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="arith1">minus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <drox:ns>original.clientX</drox:ns>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.pageY</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="arith1">minus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <drox:ns>original.clientY</drox:ns>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <drox:ns>event.relatedTarget</drox:ns>
                      </m:apply>
                      <m:ci>fromElement</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.relatedTarget</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>fromElement</m:ci>
                            <drox:ns>event.target</drox:ns>
                          </m:apply>
                          <drox:ns>original.toElement</drox:ns>
                          <m:ci>fromElement</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <drox:ns>event.which</drox:ns>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:ci>button</m:ci>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.which</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="bitwise1">and</m:csymbol>
                            <m:ci>button</m:ci>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:csymbol cd="alg1">one</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="bitwise1">and</m:csymbol>
                              <m:ci>button</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                            <m:cn>3</m:cn>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="bitwise1">and</m:csymbol>
                                <m:ci>button</m:ci>
                                <m:cn>4</m:cn>
                              </m:apply>
                              <m:cn>2</m:cn>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>event</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>special</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>load</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>noBubble</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>click</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>trigger</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.nodeName</drox:ns>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:cs>input</m:cs>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>type</m:ci>
                              </m:apply>
                              <m:cs>checkbox</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>click</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>click</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:csymbol cd="logic1">false</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>focus</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>trigger</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <drox:ns>document.activeElement</drox:ns>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>focus</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog2">try</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                  <m:ci>focus</m:ci>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:csymbol cd="logic1">false</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog2">catch</m:csymbol>
                              <m:bvar>
                                <m:ci>e</m:ci>
                              </m:bvar>
                            </drox:dl>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>delegateType</m:ci>
                    </drox:dt>
                    <m:cs>focusin</m:cs>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>blur</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>trigger</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <drox:ns>document.activeElement</drox:ns>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>blur</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>blur</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:csymbol cd="logic1">false</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>delegateType</m:ci>
                    </drox:dt>
                    <m:cs>focusout</m:cs>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>beforeunload</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>postDispatch</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>event</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <drox:ns>event.result</drox:ns>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>event.originalEvent</drox:ns>
                                <m:ci>returnValue</m:ci>
                              </m:apply>
                            </drox:dt>
                            <drox:ns>event.result</drox:ns>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>simulate</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>event</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>bubble</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>e</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.extend</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog2">new</m:csymbol>
                      <drox:ns>jQuery.Event</drox:ns>
                    </m:apply>
                    <m:ci>event</m:ci>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>type</m:ci>
                        </drox:dt>
                        <m:ci>type</m:ci>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>isSimulated</m:ci>
                        </drox:dt>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>originalEvent</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="ecmascript3">object</m:csymbol>
                        </drox:dl>
                      </drox:di>
                    </drox:dl>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>bubble</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>trigger</m:ci>
                    </m:apply>
                    <m:ci>e</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>jQuery.event</drox:ns>
                          <m:ci>dispatch</m:ci>
                        </m:apply>
                        <m:ci>call</m:ci>
                      </m:apply>
                      <m:ci>elem</m:ci>
                      <m:ci>e</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>e.isDefaultPrevented</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>event.preventDefault</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.removeEvent</drox:ns>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="prog2">if_exp</m:csymbol>
          <drox:ns>document.removeEventListener</drox:ns>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>elem</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>type</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>handle</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <drox:ns>elem.removeEventListener</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>elem.removeEventListener</drox:ns>
                  <m:ci>type</m:ci>
                  <m:ci>handle</m:ci>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:bind>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>elem</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>type</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>handle</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>name</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:cs>on</m:cs>
                  <m:ci>type</m:ci>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <drox:ns>elem.detachEvent</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elem</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>core_strundefined</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elem</m:ci>
                          <m:ci>name</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <drox:ns>elem.detachEvent</drox:ns>
                  <m:ci>name</m:ci>
                  <m:ci>handle</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:bind>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.Event</drox:ns>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>src</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>props</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">instanceof</m:csymbol>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">new</m:csymbol>
                  <drox:ns>jQuery.Event</drox:ns>
                  <m:ci>src</m:ci>
                  <m:ci>props</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:ci>src</m:ci>
              <drox:ns>src.type</drox:ns>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>originalEvent</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>src</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>type</m:ci>
                  </m:apply>
                </drox:dt>
                <drox:ns>src.type</drox:ns>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>isDefaultPrevented</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:ci>returnTrue</m:ci>
                  <m:ci>returnFalse</m:ci>
                </m:apply>
              </drox:dl>
            </m:apply>
            <drox:else>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:ci>src</m:ci>
                </drox:dl>
              </m:apply>
            </drox:else>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:ci>props</m:ci>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.extend</drox:ns>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
                <m:ci>props</m:ci>
              </m:apply>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
                <m:ci>timeStamp</m:ci>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
                <drox:ns>jQuery.expando</drox:ns>
              </m:apply>
            </drox:dt>
            <m:csymbol cd="logic1">true</m:csymbol>
          </drox:dl>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.Event</drox:ns>
            <m:ci>prototype</m:ci>
          </m:apply>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>isDefaultPrevented</m:ci>
            </drox:dt>
            <m:ci>returnFalse</m:ci>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isPropagationStopped</m:ci>
            </drox:dt>
            <m:ci>returnFalse</m:ci>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isImmediatePropagationStopped</m:ci>
            </drox:dt>
            <m:ci>returnFalse</m:ci>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>preventDefault</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>e</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>originalEvent</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>isDefaultPrevented</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>returnTrue</m:ci>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>e</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:ns>e.preventDefault</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>e.preventDefault</drox:ns>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>e.returnValue</drox:ns>
                      </drox:dt>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </drox:dl>
                  </m:apply>
                </drox:else>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>stopPropagation</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>e</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>originalEvent</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>isPropagationStopped</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>returnTrue</m:ci>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>e</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:ns>e.stopPropagation</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>e.stopPropagation</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>e.cancelBubble</drox:ns>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:dl>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>stopImmediatePropagation</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>isImmediatePropagationStopped</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>returnTrue</m:ci>
              </drox:dl>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:ci>stopPropagation</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>mouseenter</m:ci>
            </drox:dt>
            <m:cs>mouseover</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>mouseleave</m:ci>
            </drox:dt>
            <m:cs>mouseout</m:cs>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>orig</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>fix</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.event</drox:ns>
                  <m:ci>special</m:ci>
                </m:apply>
                <m:ci>orig</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>delegateType</m:ci>
                </drox:dt>
                <m:ci>fix</m:ci>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>bindType</m:ci>
                </drox:dt>
                <m:ci>fix</m:ci>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>handle</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>event</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>ret</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>target</m:ci>
                      </drox:dt>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>related</m:ci>
                      </drox:dt>
                      <drox:ns>event.relatedTarget</drox:ns>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>handleObj</m:ci>
                      </drox:dt>
                      <drox:ns>event.handleObj</drox:ns>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.type</drox:ns>
                        </drox:dt>
                        <drox:ns>handleObj.origType</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>handleObj.handler</drox:ns>
                            <m:ci>apply</m:ci>
                          </m:apply>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>event.type</drox:ns>
                        </drox:dt>
                        <m:ci>fix</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>ret</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:bind>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>submitBubbles</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.event</drox:ns>
                  <m:ci>special</m:ci>
                </m:apply>
                <m:ci>submit</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>setup</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.nodeName</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:cs>form</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:csymbol cd="logic1">false</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>add</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:cs>click._submit%20keypress._submit</m:cs>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>e</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>elem</m:ci>
                          </drox:dt>
                          <drox:ns>e.target</drox:ns>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>form</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <drox:ns>elem.form</drox:ns>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>form</m:ci>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery._data</drox:ns>
                              <m:ci>form</m:ci>
                              <m:cs>submitBubbles</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.event</drox:ns>
                              <m:ci>add</m:ci>
                            </m:apply>
                            <m:ci>form</m:ci>
                            <m:cs>submit._submit</m:cs>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>event</m:ci>
                              </m:bvar>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <drox:ns>event._submit_bubble</drox:ns>
                                </drox:dt>
                                <m:csymbol cd="logic1">true</m:csymbol>
                              </drox:dl>
                            </m:bind>
                          </m:apply>
                          <m:apply>
                            <drox:ns>jQuery._data</drox:ns>
                            <m:ci>form</m:ci>
                            <m:cs>submitBubbles</m:cs>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>postDispatch</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>event</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <drox:ns>event._submit_bubble</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">delete</m:csymbol>
                        <drox:ns>event._submit_bubble</drox:ns>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>parentNode</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <drox:ns>event.isTrigger</drox:ns>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.event</drox:ns>
                              <m:ci>simulate</m:ci>
                            </m:apply>
                            <m:cs>submit</m:cs>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>parentNode</m:ci>
                            </m:apply>
                            <m:ci>event</m:ci>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>teardown</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.nodeName</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:cs>form</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:csymbol cd="logic1">false</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>remove</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:cs>._submit</m:cs>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>changeBubbles</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.event</drox:ns>
                  <m:ci>special</m:ci>
                </m:apply>
                <m:ci>change</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>setup</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <drox:ns>rformElems.test</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>nodeName</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.event</drox:ns>
                              <m:ci>add</m:ci>
                            </m:apply>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:cs>propertychange._change</m:cs>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>event</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <drox:ns>event.originalEvent</drox:ns>
                                    <m:ci>propertyName</m:ci>
                                  </m:apply>
                                  <m:cs>checked</m:cs>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:ci>_just_changed</m:ci>
                                      </m:apply>
                                    </drox:dt>
                                    <m:csymbol cd="logic1">true</m:csymbol>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.event</drox:ns>
                              <m:ci>add</m:ci>
                            </m:apply>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:cs>click._change</m:cs>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>event</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    <m:ci>_just_changed</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <drox:ns>event.isTrigger</drox:ns>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:ci>_just_changed</m:ci>
                                      </m:apply>
                                    </drox:dt>
                                    <m:csymbol cd="logic1">false</m:csymbol>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>jQuery.event</drox:ns>
                                  <m:ci>simulate</m:ci>
                                </m:apply>
                                <m:cs>change</m:cs>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>event</m:ci>
                                <m:csymbol cd="logic1">true</m:csymbol>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:csymbol cd="logic1">false</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>add</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:cs>beforeactivate._change</m:cs>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>e</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>elem</m:ci>
                          </drox:dt>
                          <drox:ns>e.target</drox:ns>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <drox:ns>rformElems.test</drox:ns>
                            <drox:ns>elem.nodeName</drox:ns>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery._data</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:cs>changeBubbles</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.event</drox:ns>
                              <m:ci>add</m:ci>
                            </m:apply>
                            <m:ci>elem</m:ci>
                            <m:cs>change._change</m:cs>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>event</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                                      <m:ci>parentNode</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <drox:ns>event.isSimulated</drox:ns>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <drox:ns>event.isTrigger</drox:ns>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <drox:ns>jQuery.event</drox:ns>
                                      <m:ci>simulate</m:ci>
                                    </m:apply>
                                    <m:cs>change</m:cs>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                                      <m:ci>parentNode</m:ci>
                                    </m:apply>
                                    <m:ci>event</m:ci>
                                    <m:csymbol cd="logic1">true</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                          <m:apply>
                            <drox:ns>jQuery._data</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:cs>changeBubbles</m:cs>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>handle</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>event</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                      <drox:ns>event.target</drox:ns>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>event.handleObj</drox:ns>
                              <m:ci>handler</m:ci>
                            </m:apply>
                            <m:ci>apply</m:ci>
                          </m:apply>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>teardown</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>remove</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:cs>._change</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <drox:ns>rformElems.test</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>nodeName</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>focusinBubbles</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>focus</m:ci>
                </drox:dt>
                <m:cs>focusin</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>blur</m:ci>
                </drox:dt>
                <m:cs>focusout</m:cs>
              </drox:di>
            </drox:dl>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>orig</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fix</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>attaches</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>handler</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>event</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.event</drox:ns>
                        <m:ci>simulate</m:ci>
                      </m:apply>
                      <m:ci>fix</m:ci>
                      <drox:ns>event.target</drox:ns>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>jQuery.event</drox:ns>
                          <m:ci>fix</m:ci>
                        </m:apply>
                        <m:ci>event</m:ci>
                      </m:apply>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>special</m:ci>
                    </m:apply>
                    <m:ci>fix</m:ci>
                  </m:apply>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>setup</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">post_increment</m:csymbol>
                            <m:ci>attaches</m:ci>
                          </m:apply>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>document.addEventListener</drox:ns>
                            <m:ci>orig</m:ci>
                            <m:ci>handler</m:ci>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>teardown</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">decrement</m:csymbol>
                            <m:ci>attaches</m:ci>
                          </m:apply>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>document.removeEventListener</drox:ns>
                            <m:ci>orig</m:ci>
                            <m:ci>handler</m:ci>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:dl>
            </m:bind>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>on</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>one</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>origFn</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>types</m:ci>
                  </m:apply>
                  <m:cs>object</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>selector</m:ci>
                      </m:apply>
                      <m:cs>string</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>selector</m:ci>
                        </drox:dt>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">for_each</m:csymbol>
                    <m:ci>type</m:ci>
                    <m:ci>types</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>on</m:ci>
                        </m:apply>
                        <m:ci>type</m:ci>
                        <m:ci>selector</m:ci>
                        <m:ci>data</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>types</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                        <m:ci>one</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">eq</m:csymbol>
                        <m:ci>data</m:ci>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="relation1">eq</m:csymbol>
                        <m:ci>fn</m:ci>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:ci>selector</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>data</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>selector</m:ci>
                      </drox:dt>
                      <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    </drox:dl>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>fn</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>selector</m:ci>
                      </m:apply>
                      <m:cs>string</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>fn</m:ci>
                        </drox:dt>
                        <m:ci>data</m:ci>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dt>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </drox:dl>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>fn</m:ci>
                          </drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>data</m:ci>
                          </drox:dt>
                          <m:ci>selector</m:ci>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>selector</m:ci>
                          </drox:dt>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </drox:dl>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>fn</m:ci>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:ci>returnFalse</m:ci>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>fn</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>one</m:ci>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>origFn</m:ci>
                    </drox:dt>
                    <m:ci>fn</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>event</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:ci>jQuery</m:ci>
                          </m:apply>
                          <m:ci>off</m:ci>
                        </m:apply>
                        <m:ci>event</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <drox:ns>origFn.apply</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>fn.guid</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.event</drox:ns>
                        <m:ci>add</m:ci>
                      </m:apply>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>types</m:ci>
                      <m:ci>fn</m:ci>
                      <m:ci>data</m:ci>
                      <m:ci>selector</m:ci>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>one</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>on</m:ci>
                  </m:apply>
                  <m:ci>types</m:ci>
                  <m:ci>selector</m:ci>
                  <m:ci>data</m:ci>
                  <m:ci>fn</m:ci>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>off</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>handleObj</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>types</m:ci>
                    <drox:ns>types.preventDefault</drox:ns>
                  </m:apply>
                  <drox:ns>types.handleObj</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>handleObj</m:ci>
                    </drox:dt>
                    <drox:ns>types.handleObj</drox:ns>
                  </drox:dl>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:ci>jQuery</m:ci>
                        <drox:ns>types.delegateTarget</drox:ns>
                      </m:apply>
                      <m:ci>off</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <drox:ns>handleObj.namespace</drox:ns>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <drox:ns>handleObj.origType</drox:ns>
                          <m:cs>.</m:cs>
                        </m:apply>
                        <drox:ns>handleObj.namespace</drox:ns>
                      </m:apply>
                      <drox:ns>handleObj.origType</drox:ns>
                    </m:apply>
                    <drox:ns>handleObj.selector</drox:ns>
                    <drox:ns>handleObj.handler</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>types</m:ci>
                  </m:apply>
                  <m:cs>object</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">for_each</m:csymbol>
                    <m:ci>type</m:ci>
                    <m:ci>types</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>off</m:ci>
                        </m:apply>
                        <m:ci>type</m:ci>
                        <m:ci>selector</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>types</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:ci>selector</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>selector</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>fn</m:ci>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fn</m:ci>
                    </drox:dt>
                    <m:ci>returnFalse</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.event</drox:ns>
                        <m:ci>remove</m:ci>
                      </m:apply>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>types</m:ci>
                      <m:ci>fn</m:ci>
                      <m:ci>selector</m:ci>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>bind</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>on</m:ci>
                  </m:apply>
                  <m:ci>types</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:ci>data</m:ci>
                  <m:ci>fn</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>unbind</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>off</m:ci>
                  </m:apply>
                  <m:ci>types</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:ci>fn</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>delegate</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>on</m:ci>
                  </m:apply>
                  <m:ci>types</m:ci>
                  <m:ci>selector</m:ci>
                  <m:ci>data</m:ci>
                  <m:ci>fn</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>undelegate</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>types</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>arguments.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>off</m:ci>
                    </m:apply>
                    <m:ci>selector</m:ci>
                    <m:cs>**</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>off</m:ci>
                    </m:apply>
                    <m:ci>types</m:ci>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>fn</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>trigger</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.event</drox:ns>
                        <m:ci>trigger</m:ci>
                      </m:apply>
                      <m:ci>type</m:ci>
                      <m:ci>data</m:ci>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>triggerHandler</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>elem</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.event</drox:ns>
                        <m:ci>trigger</m:ci>
                      </m:apply>
                      <m:ci>type</m:ci>
                      <m:ci>data</m:ci>
                      <m:ci>elem</m:ci>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>window</m:ci>
          </m:bvar>
          <m:bvar>
            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>i</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>cachedruns</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>Expr</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>getText</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>isXML</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>compile</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>hasDuplicate</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>outermostContext</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>setDocument</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>document</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>docElem</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>documentIsXML</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rbuggyQSA</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rbuggyMatches</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>matches</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>contains</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>sortOrder</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>expando</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>sizzle</m:cs>
                <m:apply>
                  <m:csymbol cd="arith1">unary_minus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>Date</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>preferredDoc</m:ci>
              </drox:dt>
              <drox:ns>window.document</drox:ns>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>support</m:ci>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
              </drox:dl>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>dirruns</m:ci>
              </drox:dt>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>done</m:ci>
              </drox:dt>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>classCache</m:ci>
              </drox:dt>
              <m:apply>
                <m:ci>createCache</m:ci>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>tokenCache</m:ci>
              </drox:dt>
              <m:apply>
                <m:ci>createCache</m:ci>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>compilerCache</m:ci>
              </drox:dt>
              <m:apply>
                <m:ci>createCache</m:ci>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>strundefined</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>MAX_NEGATIVE</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="bitwise3">left_shift</m:csymbol>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:cn>31</m:cn>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>arr</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>pop</m:ci>
              </drox:dt>
              <drox:ns>arr.pop</drox:ns>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>push</m:ci>
              </drox:dt>
              <drox:ns>arr.push</drox:ns>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>slice</m:ci>
              </drox:dt>
              <drox:ns>arr.slice</drox:ns>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>indexOf</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>whitespace</m:ci>
              </drox:dt>
              <m:cs>%5B%5Cx20%5Ct%5Cr%5Cn%5Cf%5D</m:cs>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>characterEncoding</m:ci>
              </drox:dt>
              <m:cs>(?:%5C%5C.%7C%5B%5Cw-%5D%7C%5B%5E%5Cx00-%5Cxa0%5D)+</m:cs>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>identifier</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>characterEncoding.replace</drox:ns>
                <m:cs>w</m:cs>
                <m:cs>w#</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>operators</m:ci>
              </drox:dt>
              <m:cs>(%5B*%5E$%7C!~%5D?=)</m:cs>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>attributes</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="arith2">plus</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="arith2">plus</m:csymbol>
                                        <m:cs>%5C%5B</m:cs>
                                        <m:ci>whitespace</m:ci>
                                      </m:apply>
                                      <m:cs>*(</m:cs>
                                    </m:apply>
                                    <m:ci>characterEncoding</m:ci>
                                  </m:apply>
                                  <m:cs>)</m:cs>
                                </m:apply>
                                <m:ci>whitespace</m:ci>
                              </m:apply>
                              <m:cs>*(?:</m:cs>
                            </m:apply>
                            <m:ci>operators</m:ci>
                          </m:apply>
                          <m:ci>whitespace</m:ci>
                        </m:apply>
                        <m:cs>*(?:(%5B'%22%5D)((?:%5C%5C.%7C%5B%5E%5C%5C%5D)*?)%5C3%7C(</m:cs>
                      </m:apply>
                      <m:ci>identifier</m:ci>
                    </m:apply>
                    <m:cs>)%7C)%7C)</m:cs>
                  </m:apply>
                  <m:ci>whitespace</m:ci>
                </m:apply>
                <m:cs>*%5C%5D</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>pseudos</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>:(</m:cs>
                      <m:ci>characterEncoding</m:ci>
                    </m:apply>
                    <m:cs>)(?:%5C(((%5B'%22%5D)((?:%5C%5C.%7C%5B%5E%5C%5C%5D)*?)%5C3%7C((?:%5C%5C.%7C%5B%5E%5C%5C()%5B%5C%5D%5D%7C</m:cs>
                  </m:apply>
                  <m:apply>
                    <drox:ns>attributes.replace</drox:ns>
                    <m:cn>3</m:cn>
                    <m:cn>8</m:cn>
                  </m:apply>
                </m:apply>
                <m:cs>)*)%7C.*)%5C)%7C)</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rtrim</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">new</m:csymbol>
                <m:ci>RegExp</m:ci>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E</m:cs>
                        <m:ci>whitespace</m:ci>
                      </m:apply>
                      <m:cs>+%7C((?:%5E%7C%5B%5E%5C%5C%5D)(?:%5C%5C.)*)</m:cs>
                    </m:apply>
                    <m:ci>whitespace</m:ci>
                  </m:apply>
                  <m:cs>+$</m:cs>
                </m:apply>
                <m:cs>g</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rcomma</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">new</m:csymbol>
                <m:ci>RegExp</m:ci>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E</m:cs>
                        <m:ci>whitespace</m:ci>
                      </m:apply>
                      <m:cs>*,</m:cs>
                    </m:apply>
                    <m:ci>whitespace</m:ci>
                  </m:apply>
                  <m:cs>*</m:cs>
                </m:apply>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rcombinators</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">new</m:csymbol>
                <m:ci>RegExp</m:ci>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E</m:cs>
                        <m:ci>whitespace</m:ci>
                      </m:apply>
                      <m:cs>*(%5B%5Cx20%5Ct%5Cr%5Cn%5Cf%3E+~%5D)</m:cs>
                    </m:apply>
                    <m:ci>whitespace</m:ci>
                  </m:apply>
                  <m:cs>*</m:cs>
                </m:apply>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rpseudo</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">new</m:csymbol>
                <m:ci>RegExp</m:ci>
                <m:ci>pseudos</m:ci>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>ridentifier</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">new</m:csymbol>
                <m:ci>RegExp</m:ci>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:cs>%5E</m:cs>
                    <m:ci>identifier</m:ci>
                  </m:apply>
                  <m:cs>$</m:cs>
                </m:apply>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>matchExpr</m:ci>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ID</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E#(</m:cs>
                        <m:ci>characterEncoding</m:ci>
                      </m:apply>
                      <m:cs>)</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>CLASS</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E%5C.(</m:cs>
                        <m:ci>characterEncoding</m:ci>
                      </m:apply>
                      <m:cs>)</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>NAME</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E%5C%5Bname=%5B'%22%5D?(</m:cs>
                        <m:ci>characterEncoding</m:ci>
                      </m:apply>
                      <m:cs>)%5B'%22%5D?%5C%5D</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>TAG</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>%5E(</m:cs>
                        <m:apply>
                          <drox:ns>characterEncoding.replace</drox:ns>
                          <m:cs>w</m:cs>
                          <m:cs>w*</m:cs>
                        </m:apply>
                      </m:apply>
                      <m:cs>)</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ATTR</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>%5E</m:cs>
                      <m:ci>attributes</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>PSEUDO</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>%5E</m:cs>
                      <m:ci>pseudos</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>CHILD</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>%5E:(only%7Cfirst%7Clast%7Cnth%7Cnth-last)-(child%7Cof-type)(?:%5C(</m:cs>
                                    <m:ci>whitespace</m:ci>
                                  </m:apply>
                                  <m:cs>*(even%7Codd%7C((%5B+-%5D%7C)(%5Cd*)n%7C)</m:cs>
                                </m:apply>
                                <m:ci>whitespace</m:ci>
                              </m:apply>
                              <m:cs>*(?:(%5B+-%5D%7C)</m:cs>
                            </m:apply>
                            <m:ci>whitespace</m:ci>
                          </m:apply>
                          <m:cs>*(%5Cd+)%7C))</m:cs>
                        </m:apply>
                        <m:ci>whitespace</m:ci>
                      </m:apply>
                      <m:cs>*%5C)%7C)</m:cs>
                    </m:apply>
                    <m:cs>i</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>needsContext</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:cs>%5E</m:cs>
                                <m:ci>whitespace</m:ci>
                              </m:apply>
                              <m:cs>*%5B%3E+~%5D%7C:(even%7Codd%7Ceq%7Cgt%7Clt%7Cnth%7Cfirst%7Clast)(?:%5C(</m:cs>
                            </m:apply>
                            <m:ci>whitespace</m:ci>
                          </m:apply>
                          <m:cs>*((?:-%5Cd)?%5Cd*)</m:cs>
                        </m:apply>
                        <m:ci>whitespace</m:ci>
                      </m:apply>
                      <m:cs>*%5C)%7C)(?=%5B%5E-%5D%7C$)</m:cs>
                    </m:apply>
                    <m:cs>i</m:cs>
                  </m:apply>
                </drox:di>
              </drox:dl>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rsibling</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5B%5Cx20%5Ct%5Cr%5Cn%5Cf%5D*%5B+~%5D/</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rnative</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5E%5B%5E%7B%5D+%5C%7B%5Cs*%5C%5Bnative%20code/</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rquickExpr</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5E(?:#(%5B%5Cw-%5D+)%7C(%5Cw+)%7C%5C.(%5B%5Cw-%5D+))$/</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rinputs</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5E(?:input%7Cselect%7Ctextarea%7Cbutton)$/i</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rheader</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5Eh%5Cd$/i</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rescape</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/'%7C%5C%5C/g</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>rattributeQuotes</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5C=%5B%5Cx20%5Ct%5Cr%5Cn%5Cf%5D*(%5B%5E'%22%5C%5D%5D*)%5B%5Cx20%5Ct%5Cr%5Cn%5Cf%5D*%5C%5D/g</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>runescape</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                <m:cs>/%5C%5C(%5B%5Cda-fA-F%5D%7B1,6%7D%5B%5Cx20%5Ct%5Cr%5Cn%5Cf%5D?%7C.)/g</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>funescape</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>_</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>escaped</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>high</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>0x</m:cs>
                        <m:ci>escaped</m:ci>
                      </m:apply>
                      <m:cn>65536</m:cn>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>high</m:ci>
                      <m:ci>high</m:ci>
                    </m:apply>
                    <m:ci>escaped</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">lt</m:csymbol>
                        <m:ci>high</m:ci>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <drox:ns>String.fromCharCode</drox:ns>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>high</m:ci>
                          <m:cn>65536</m:cn>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <drox:ns>String.fromCharCode</drox:ns>
                        <m:apply>
                          <m:csymbol cd="bitwise1">or</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="bitwise3">arithmetic_right_shift</m:csymbol>
                            <m:ci>high</m:ci>
                            <m:cn>10</m:cn>
                          </m:apply>
                          <m:cn>55296</m:cn>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="bitwise1">or</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="bitwise1">and</m:csymbol>
                            <m:ci>high</m:ci>
                            <m:cn>1023</m:cn>
                          </m:apply>
                          <m:cn>56320</m:cn>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog2">try</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:apply>
                  <drox:ns>slice.call</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>preferredDoc.documentElement</drox:ns>
                    <m:ci>childNodes</m:ci>
                  </m:apply>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
              <m:ci>nodeType</m:ci>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog2">catch</m:csymbol>
              <m:bvar>
                <m:ci>e</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>slice</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>i</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>results</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>results.push</drox:ns>
                        <m:ci>elem</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>results</m:ci>
                  </m:apply>
                </m:bind>
              </drox:dl>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>isNative</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>fn</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <drox:ns>rnative.test</drox:ns>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:ci>fn</m:ci>
                  <m:cs/>
                </m:apply>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>createCache</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>cache</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>keys</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>cache</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>key</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <m:apply>
                        <drox:ns>keys.push</drox:ns>
                        <drox:dl>
                          <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                          <drox:dt>
                            <m:ci>key</m:ci>
                          </drox:dt>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:cs>%20</m:cs>
                        </drox:dl>
                      </m:apply>
                      <drox:ns>Expr.cacheLength</drox:ns>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">delete</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>cache</m:ci>
                          <m:apply>
                            <drox:ns>keys.shift</drox:ns>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>cache</m:ci>
                          <m:ci>key</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:ci>value</m:ci>
                    </drox:dl>
                  </m:apply>
                </m:bind>
              </drox:dl>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>markFunction</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>fn</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>fn</m:ci>
                  <m:ci>expando</m:ci>
                </m:apply>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>fn</m:ci>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>assert</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>fn</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>div</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>document.createElement</drox:ns>
                  <m:cs>div</m:cs>
                </m:apply>
              </drox:di>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog2">try</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>fn</m:ci>
                  <m:ci>div</m:ci>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog2">catch</m:csymbol>
                <m:bvar>
                  <m:ci>e</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog2">finally</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>div</m:ci>
                  </drox:dt>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </drox:dl>
              </drox:dl>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>Sizzle</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>selector</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>context</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>results</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>seed</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>match</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>elem</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>m</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>nodeType</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>groups</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>old</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>nid</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>newContext</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>newSelector</m:ci>
                </drox:dt>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:ci>context</m:ci>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:ci>preferredDoc</m:ci>
                </m:apply>
                <m:ci>document</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:ci>setDocument</m:ci>
                  <m:ci>context</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>context</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>results</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>results</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>nodeType</m:ci>
                    </drox:dt>
                    <drox:ns>context.nodeType</drox:ns>
                  </drox:dl>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:ci>nodeType</m:ci>
                  <m:cn>9</m:cn>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>documentIsXML</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>seed</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>match</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>rquickExpr.exec</drox:ns>
                      <m:ci>selector</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="switch2">cond</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>m</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </drox:dl>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>nodeType</m:ci>
                            <m:cn>9</m:cn>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>context.getElementById</drox:ns>
                                <m:ci>m</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:ci>elem</m:ci>
                                <drox:ns>elem.parentNode</drox:ns>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <drox:ns>elem.id</drox:ns>
                                    <m:ci>m</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <drox:ns>results.push</drox:ns>
                                      <m:ci>elem</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">return</m:csymbol>
                                      <m:ci>results</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <drox:else>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:ci>results</m:ci>
                                  </m:apply>
                                </m:apply>
                              </drox:else>
                            </m:apply>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">and</m:csymbol>
                                      <drox:ns>context.ownerDocument</drox:ns>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>elem</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:apply>
                                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                            <drox:ns>context.ownerDocument</drox:ns>
                                            <m:ci>getElementById</m:ci>
                                          </m:apply>
                                          <m:ci>m</m:ci>
                                        </m:apply>
                                      </drox:dl>
                                    </m:apply>
                                    <m:apply>
                                      <m:ci>contains</m:ci>
                                      <m:ci>context</m:ci>
                                      <m:ci>elem</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <drox:ns>elem.id</drox:ns>
                                    <m:ci>m</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>results.push</drox:ns>
                                    <m:ci>elem</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:ci>results</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>match</m:ci>
                            <m:cn>2</m:cn>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>push.apply</drox:ns>
                          <m:ci>results</m:ci>
                          <m:apply>
                            <drox:ns>slice.call</drox:ns>
                            <m:apply>
                              <drox:ns>context.getElementsByTagName</drox:ns>
                              <m:ci>selector</m:ci>
                            </m:apply>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>results</m:ci>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>m</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>3</m:cn>
                                </m:apply>
                              </drox:dl>
                              <drox:ns>support.getByClassName</drox:ns>
                            </m:apply>
                            <drox:ns>context.getElementsByClassName</drox:ns>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>push.apply</drox:ns>
                          <m:ci>results</m:ci>
                          <m:apply>
                            <drox:ns>slice.call</drox:ns>
                            <m:apply>
                              <drox:ns>context.getElementsByClassName</drox:ns>
                              <m:ci>m</m:ci>
                            </m:apply>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>results</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>support.qsa</drox:ns>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <drox:ns>rbuggyQSA.test</drox:ns>
                        <m:ci>selector</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>old</m:ci>
                      </drox:dt>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>nid</m:ci>
                      </drox:dt>
                      <m:ci>expando</m:ci>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>newContext</m:ci>
                      </drox:dt>
                      <m:ci>context</m:ci>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>newSelector</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>nodeType</m:ci>
                          <m:cn>9</m:cn>
                        </m:apply>
                        <m:ci>selector</m:ci>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>nodeType</m:ci>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>context.nodeName</drox:ns>
                              <m:ci>toLowerCase</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:cs>object</m:cs>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>groups</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>tokenize</m:ci>
                            <m:ci>selector</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>old</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>context.getAttribute</drox:ns>
                              <m:cs>id</m:cs>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>nid</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>old.replace</drox:ns>
                                <m:ci>rescape</m:ci>
                                <m:cs>%5C$&amp;</m:cs>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>context.setAttribute</drox:ns>
                                <m:cs>id</m:cs>
                                <m:ci>nid</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>nid</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cs>%5Bid='</m:cs>
                              <m:ci>nid</m:ci>
                            </m:apply>
                            <m:cs>'%5D%20</m:cs>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>i</m:ci>
                          </drox:dt>
                          <drox:ns>groups.length</drox:ns>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">while</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">post_decrement</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>groups</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:ci>nid</m:ci>
                                <m:apply>
                                  <m:ci>toSelector</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>groups</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>newContext</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>newSelector</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>groups.join</drox:ns>
                            <m:cs>,</m:cs>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>newSelector</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog2">try</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>push.apply</drox:ns>
                              <m:ci>results</m:ci>
                              <m:apply>
                                <drox:ns>slice.call</drox:ns>
                                <m:apply>
                                  <drox:ns>newContext.querySelectorAll</drox:ns>
                                  <m:ci>newSelector</m:ci>
                                </m:apply>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:ci>results</m:ci>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog2">catch</m:csymbol>
                            <m:bvar>
                              <m:ci>qsaError</m:ci>
                            </m:bvar>
                          </drox:dl>
                          <drox:dl>
                            <m:csymbol cd="prog2">finally</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:ci>old</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <drox:ns>context.removeAttribute</drox:ns>
                                  <m:cs>id</m:cs>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </drox:dl>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:ci>select</m:ci>
                <m:apply>
                  <drox:ns>selector.replace</drox:ns>
                  <m:ci>rtrim</m:ci>
                  <m:cs>$1</m:cs>
                </m:apply>
                <m:ci>context</m:ci>
                <m:ci>results</m:ci>
                <m:ci>seed</m:ci>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>isXML</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>Sizzle.isXML</drox:ns>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>elem</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>documentElement</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>elem</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:ci>documentElement</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:ci>documentElement</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <drox:ns>documentElement.nodeName</drox:ns>
                      <m:cs>HTML</m:cs>
                    </m:apply>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>setDocument</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>Sizzle.setDocument</drox:ns>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>node</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>doc</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:ci>node</m:ci>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:ci>preferredDoc</m:ci>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:ci>document</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>document</m:ci>
                  </drox:dt>
                  <m:ci>doc</m:ci>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>docElem</m:ci>
                  </drox:dt>
                  <drox:ns>doc.documentElement</drox:ns>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>documentIsXML</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>isXML</m:ci>
                    <m:ci>doc</m:ci>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.tagNameNoComments</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:ci>assert</m:ci>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>div</m:ci>
                      </m:bvar>
                      <m:apply>
                        <drox:ns>div.appendChild</drox:ns>
                        <m:apply>
                          <drox:ns>doc.createComment</drox:ns>
                          <m:cs/>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <drox:ns>div.getElementsByTagName</drox:ns>
                              <m:cs>*</m:cs>
                            </m:apply>
                            <m:ci>length</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.attributes</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:ci>assert</m:ci>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>div</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>div.innerHTML</drox:ns>
                        </drox:dt>
                        <m:cs>%3Cselect%3E%3C/select%3E</m:cs>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>type</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>div.lastChild</drox:ns>
                                <m:ci>getAttribute</m:ci>
                              </m:apply>
                              <m:cs>multiple</m:cs>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>boolean</m:cs>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>string</m:cs>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.getByClassName</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:ci>assert</m:ci>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>div</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>div.innerHTML</drox:ns>
                        </drox:dt>
                        <m:cs>%3Cdiv%20class='hidden%20e'%3E%3C/div%3E%3Cdiv%20class='hidden'%3E%3C/div%3E</m:cs>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:csymbol cd="logic1">false</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>div.lastChild</drox:ns>
                            <m:ci>className</m:ci>
                          </m:apply>
                        </drox:dt>
                        <m:cs>e</m:cs>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <drox:ns>div.getElementsByClassName</drox:ns>
                              <m:cs>e</m:cs>
                            </m:apply>
                            <m:ci>length</m:ci>
                          </m:apply>
                          <m:cn>2</m:cn>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.getByName</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:ci>assert</m:ci>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>div</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>div.id</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>expando</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>div.innerHTML</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:cs>%3Ca%20name='</m:cs>
                                <m:ci>expando</m:ci>
                              </m:apply>
                              <m:cs>'%3E%3C/a%3E%3Cdiv%20name='</m:cs>
                            </m:apply>
                            <m:ci>expando</m:ci>
                          </m:apply>
                          <m:cs>'%3E%3C/div%3E</m:cs>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>docElem.insertBefore</drox:ns>
                        <m:ci>div</m:ci>
                        <drox:ns>docElem.firstChild</drox:ns>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>pass</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <drox:ns>doc.getElementsByName</drox:ns>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <drox:ns>doc.getElementsByName</drox:ns>
                                  <m:ci>expando</m:ci>
                                </m:apply>
                                <m:ci>length</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:cn>2</m:cn>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <drox:ns>doc.getElementsByName</drox:ns>
                                    <m:apply>
                                      <m:csymbol cd="arith2">plus</m:csymbol>
                                      <m:ci>expando</m:ci>
                                      <m:csymbol cd="alg1">zero</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                  <m:ci>length</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>support.getIdNotName</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <drox:ns>doc.getElementById</drox:ns>
                            <m:ci>expando</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>docElem.removeChild</drox:ns>
                        <m:ci>div</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:ci>pass</m:ci>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>Expr.attrHandle</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:ci>assert</m:ci>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>div</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>div.innerHTML</drox:ns>
                          </drox:dt>
                          <m:cs>%3Ca%20href='#'%3E%3C/a%3E</m:cs>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <drox:ns>div.firstChild</drox:ns>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <drox:ns>div.firstChild</drox:ns>
                                    <m:ci>getAttribute</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:ci>strundefined</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>div.firstChild</drox:ns>
                                  <m:ci>getAttribute</m:ci>
                                </m:apply>
                                <m:cs>href</m:cs>
                              </m:apply>
                              <m:cs>#</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>href</m:ci>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>elem</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <drox:ns>elem.getAttribute</drox:ns>
                              <m:cs>href</m:cs>
                              <m:cn>2</m:cn>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>type</m:ci>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>elem</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <drox:ns>elem.getAttribute</drox:ns>
                              <m:cs>type</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </drox:di>
                    </drox:dl>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:ns>support.getIdNotName</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>Expr.find</drox:ns>
                          <m:cs>ID</m:cs>
                        </m:apply>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>id</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>context</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                <drox:ns>context.getElementById</drox:ns>
                              </m:apply>
                              <m:ci>strundefined</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:ci>documentIsXML</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">local_var</m:csymbol>
                              <drox:di>
                                <drox:dt>
                                  <m:ci>m</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <drox:ns>context.getElementById</drox:ns>
                                  <m:ci>id</m:ci>
                                </m:apply>
                              </drox:di>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:ci>m</m:ci>
                                  <drox:ns>m.parentNode</drox:ns>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                                  <m:ci>m</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>Expr.filter</drox:ns>
                          <m:cs>ID</m:cs>
                        </m:apply>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>id</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>attrId</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>id.replace</drox:ns>
                              <m:ci>runescape</m:ci>
                              <m:ci>funescape</m:ci>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <m:bvar>
                              <m:ci>elem</m:ci>
                            </m:bvar>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <drox:ns>elem.getAttribute</drox:ns>
                                  <m:cs>id</m:cs>
                                </m:apply>
                                <m:ci>attrId</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:bind>
                        </m:apply>
                      </m:bind>
                    </drox:dl>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <drox:ns>Expr.find</drox:ns>
                            <m:cs>ID</m:cs>
                          </m:apply>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>id</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>context</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                  <drox:ns>context.getElementById</drox:ns>
                                </m:apply>
                                <m:ci>strundefined</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:ci>documentIsXML</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">local_var</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>m</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <drox:ns>context.getElementById</drox:ns>
                                    <m:ci>id</m:ci>
                                  </m:apply>
                                </drox:di>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:ci>m</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">or</m:csymbol>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                                      <m:ci>m</m:ci>
                                    </m:apply>
                                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <drox:ns>Expr.filter</drox:ns>
                            <m:cs>ID</m:cs>
                          </m:apply>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>id</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>attrId</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>id.replace</drox:ns>
                                <m:ci>runescape</m:ci>
                                <m:ci>funescape</m:ci>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>elem</m:ci>
                              </m:bvar>
                              <drox:dl>
                                <m:csymbol cd="prog1">local_var</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>node</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                        <drox:ns>elem.getAttributeNode</drox:ns>
                                      </m:apply>
                                      <m:ci>strundefined</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <drox:ns>elem.getAttributeNode</drox:ns>
                                      <m:cs>id</m:cs>
                                    </m:apply>
                                  </m:apply>
                                </drox:di>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:ci>node</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <drox:ns>node.value</drox:ns>
                                    <m:ci>attrId</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </m:bind>
                      </drox:dl>
                    </m:apply>
                  </drox:else>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>Expr.find</drox:ns>
                      <m:cs>TAG</m:cs>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <drox:ns>support.tagNameNoComments</drox:ns>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>tag</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>context</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                            <drox:ns>context.getElementsByTagName</drox:ns>
                          </m:apply>
                          <m:ci>strundefined</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <drox:ns>context.getElementsByTagName</drox:ns>
                              <m:ci>tag</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>tag</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>context</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>elem</m:ci>
                          </drox:dt>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>tmp</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>i</m:ci>
                          </drox:dt>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>results</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>context.getElementsByTagName</drox:ns>
                            <m:ci>tag</m:ci>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>tag</m:ci>
                          <m:cs>*</m:cs>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>results</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                                  <m:ci>i</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <drox:ns>elem.nodeType</drox:ns>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>tmp.push</drox:ns>
                                    <m:ci>elem</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>tmp</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:ci>results</m:ci>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>Expr.find</drox:ns>
                      <m:cs>NAME</m:cs>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>support.getByName</drox:ns>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>tag</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>context</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                            <drox:ns>context.getElementsByName</drox:ns>
                          </m:apply>
                          <m:ci>strundefined</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <drox:ns>context.getElementsByName</drox:ns>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>Expr.find</drox:ns>
                      <m:cs>CLASS</m:cs>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>support.getByClassName</drox:ns>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>className</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>context</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                              <drox:ns>context.getElementsByClassName</drox:ns>
                            </m:apply>
                            <m:ci>strundefined</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>documentIsXML</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <drox:ns>context.getElementsByClassName</drox:ns>
                              <m:ci>className</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>rbuggyMatches</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>rbuggyQSA</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:cs>:focus</m:cs>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>support.qsa</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:ci>isNative</m:ci>
                      <drox:ns>doc.querySelectorAll</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:ci>assert</m:ci>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>div</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>div.innerHTML</drox:ns>
                          </drox:dt>
                          <m:cs>%3Cselect%3E%3Coption%20selected=''%3E%3C/option%3E%3C/select%3E</m:cs>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <drox:ns>div.querySelectorAll</drox:ns>
                                <m:cs>%5Bselected%5D</m:cs>
                              </m:apply>
                              <m:ci>length</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>rbuggyQSA.push</drox:ns>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>%5C%5B</m:cs>
                                  <m:ci>whitespace</m:ci>
                                </m:apply>
                                <m:cs>*(?:checked%7Cdisabled%7Cismap%7Cmultiple%7Creadonly%7Cselected%7Cvalue)</m:cs>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <drox:ns>div.querySelectorAll</drox:ns>
                                <m:cs>:checked</m:cs>
                              </m:apply>
                              <m:ci>length</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>rbuggyQSA.push</drox:ns>
                              <m:cs>:checked</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                    <m:apply>
                      <m:ci>assert</m:ci>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>div</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>div.innerHTML</drox:ns>
                          </drox:dt>
                          <m:cs>%3Cinput%20type='hidden'%20i=''/%3E</m:cs>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <drox:ns>div.querySelectorAll</drox:ns>
                              <m:cs>%5Bi%5E=''%5D</m:cs>
                            </m:apply>
                            <m:ci>length</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>rbuggyQSA.push</drox:ns>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>%5B*%5E$%5D=</m:cs>
                                  <m:ci>whitespace</m:ci>
                                </m:apply>
                                <m:cs>*(?:%22%22%7C'')</m:cs>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <drox:ns>div.querySelectorAll</drox:ns>
                                <m:cs>:enabled</m:cs>
                              </m:apply>
                              <m:ci>length</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>rbuggyQSA.push</drox:ns>
                              <m:cs>:enabled</m:cs>
                              <m:cs>:disabled</m:cs>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <drox:ns>div.querySelectorAll</drox:ns>
                          <m:cs>*,:x</m:cs>
                        </m:apply>
                        <m:apply>
                          <drox:ns>rbuggyQSA.push</drox:ns>
                          <m:cs>,.*:</m:cs>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>support.matchesSelector</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:ci>isNative</m:ci>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>matches</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:ci>assert</m:ci>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>div</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>support.disconnectedMatch</drox:ns>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>matches.call</drox:ns>
                            <m:ci>div</m:ci>
                            <m:cs>div</m:cs>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <drox:ns>matches.call</drox:ns>
                          <m:ci>div</m:ci>
                          <m:cs>%5Bs!=''%5D:x</m:cs>
                        </m:apply>
                        <m:apply>
                          <drox:ns>rbuggyMatches.push</drox:ns>
                          <m:cs>!=</m:cs>
                          <m:ci>pseudos</m:ci>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>rbuggyQSA</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <drox:ns>rbuggyQSA.join</drox:ns>
                      <m:cs>%7C</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>rbuggyMatches</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">new</m:csymbol>
                    <m:ci>RegExp</m:ci>
                    <m:apply>
                      <drox:ns>rbuggyMatches.join</drox:ns>
                      <m:cs>%7C</m:cs>
                    </m:apply>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>contains</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>a</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>b</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>adown</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <drox:ns>a.nodeType</drox:ns>
                              <m:cn>9</m:cn>
                            </m:apply>
                            <drox:ns>a.documentElement</drox:ns>
                            <m:ci>a</m:ci>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>bup</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>b</m:ci>
                            <drox:ns>b.parentNode</drox:ns>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>a</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>b</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>b</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>b</m:ci>
                              </drox:dt>
                              <drox:ns>b.parentNode</drox:ns>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:ci>b</m:ci>
                                  <m:ci>a</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:csymbol cd="logic1">true</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:csymbol cd="logic1">false</m:csymbol>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>sortOrder</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <drox:ns>docElem.compareDocumentPosition</drox:ns>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>a</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>b</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>compare</m:ci>
                          </drox:dt>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>a</m:ci>
                          <m:ci>b</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>hasDuplicate</m:ci>
                            </drox:dt>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>compare</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <drox:ns>b.compareDocumentPosition</drox:ns>
                              <drox:ns>a.compareDocumentPosition</drox:ns>
                            </m:apply>
                            <m:apply>
                              <drox:ns>a.compareDocumentPosition</drox:ns>
                              <m:ci>b</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                      <m:csymbol cd="alg1">one</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:csymbol cd="alg1">one</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="bitwise1">and</m:csymbol>
                                <m:ci>compare</m:ci>
                                <m:cn>4</m:cn>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <drox:ns>a.compareDocumentPosition</drox:ns>
                          <m:apply>
                            <m:csymbol cd="arith1">unary_minus</m:csymbol>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>a</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>b</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>cur</m:ci>
                          </drox:dt>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>i</m:ci>
                          </drox:dt>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>aup</m:ci>
                          </drox:dt>
                          <drox:ns>a.parentNode</drox:ns>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>bup</m:ci>
                          </drox:dt>
                          <drox:ns>b.parentNode</drox:ns>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>ap</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>a</m:ci>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>bp</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>b</m:ci>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="switch2">cond</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>a</m:ci>
                              <m:ci>b</m:ci>
                            </m:apply>
                          </drox:dt>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>hasDuplicate</m:ci>
                            </drox:dt>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>a</m:ci>
                                <m:ci>doc</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:ci>b</m:ci>
                                  <m:ci>doc</m:ci>
                                </m:apply>
                                <m:csymbol cd="alg1">one</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:ci>aup</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                    <m:csymbol cd="alg1">one</m:csymbol>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                    <m:ci>bup</m:ci>
                                    <m:csymbol cd="alg1">one</m:csymbol>
                                    <m:csymbol cd="alg1">zero</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>aup</m:ci>
                              <m:ci>bup</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:ci>siblingCheck</m:ci>
                              <m:ci>a</m:ci>
                              <m:ci>b</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cur</m:ci>
                        </drox:dt>
                        <m:ci>a</m:ci>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>cur</m:ci>
                          </drox:dt>
                          <drox:ns>cur.parentNode</drox:ns>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>ap.unshift</drox:ns>
                            <m:ci>cur</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cur</m:ci>
                        </drox:dt>
                        <m:ci>b</m:ci>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>cur</m:ci>
                          </drox:dt>
                          <drox:ns>cur.parentNode</drox:ns>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>bp.unshift</drox:ns>
                            <m:ci>cur</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>ap</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>bp</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">post_increment</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:apply>
                            <m:ci>siblingCheck</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>ap</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>bp</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>ap</m:ci>
                                <m:ci>i</m:ci>
                              </m:apply>
                              <m:ci>preferredDoc</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="arith1">unary_minus</m:csymbol>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>bp</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:ci>preferredDoc</m:ci>
                              </m:apply>
                              <m:csymbol cd="alg1">one</m:csymbol>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>hasDuplicate</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                    <m:ci>sort</m:ci>
                  </m:apply>
                  <m:ci>sortOrder</m:ci>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>support.detectDuplicates</drox:ns>
                  </drox:dt>
                  <m:ci>hasDuplicate</m:ci>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>document</m:ci>
                </m:apply>
              </m:bind>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.matches</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>expr</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>elements</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>Sizzle</m:ci>
                  <m:ci>expr</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:ci>elements</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.matchesSelector</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>expr</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:ci>document</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:ci>setDocument</m:ci>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>expr</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>expr.replace</drox:ns>
                  <m:ci>rattributeQuotes</m:ci>
                  <m:cs>='$1'%5D</m:cs>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <drox:ns>support.matchesSelector</drox:ns>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>documentIsXML</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>rbuggyQSA.test</drox:ns>
                      <m:ci>expr</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog2">try</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">local_var</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>ret</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>matches.call</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>expr</m:ci>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>ret</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog2">catch</m:csymbol>
                      <m:bvar>
                        <m:ci>e</m:ci>
                      </m:bvar>
                    </drox:dl>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">gt</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:ci>Sizzle</m:ci>
                      <m:ci>expr</m:ci>
                      <m:ci>document</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:ci>elem</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>length</m:ci>
                  </m:apply>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.contains</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>context</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:ci>document</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:ci>setDocument</m:ci>
                    <m:ci>context</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>contains</m:ci>
                  <m:ci>context</m:ci>
                  <m:ci>elem</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.attr</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>val</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:ci>document</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:ci>setDocument</m:ci>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>documentIsXML</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>name</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>name.toLowerCase</drox:ns>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>val</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>Expr.attrHandle</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:ci>val</m:ci>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>elem.getAttribute</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elem</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:ci>name</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>val</m:ci>
                      <drox:ns>val.specified</drox:ns>
                    </m:apply>
                    <drox:ns>val.value</drox:ns>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.error</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>msg</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog2">throw</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.uniqueSort</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>results</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>duplicates</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>hasDuplicate</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>support.detectDuplicates</drox:ns>
                </m:apply>
              </drox:dl>
              <m:apply>
                <drox:ns>results.sort</drox:ns>
                <m:ci>sortOrder</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>hasDuplicate</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>results</m:ci>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>elem</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>results</m:ci>
                            <m:apply>
                              <m:csymbol cd="arith1">minus</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>j</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>duplicates.push</drox:ns>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">post_decrement</m:csymbol>
                      <m:ci>j</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>results.splice</drox:ns>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>duplicates</m:ci>
                          <m:ci>j</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>results</m:ci>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>siblingCheck</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>a</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>b</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>cur</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>b</m:ci>
                  <m:ci>a</m:ci>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>diff</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>cur</m:ci>
                  <m:apply>
                    <m:csymbol cd="arith1">minus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>diff</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>diff</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>cur</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">while</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>cur</m:ci>
                    </drox:dt>
                    <drox:ns>cur.nextSibling</drox:ns>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>cur</m:ci>
                        <m:ci>b</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith1">unary_minus</m:csymbol>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:ci>a</m:ci>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:apply>
                  <m:csymbol cd="arith1">unary_minus</m:csymbol>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>createInputPseudo</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>type</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>elem</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>name</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>elem.nodeName</drox:ns>
                        <m:ci>toLowerCase</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>name</m:ci>
                      <m:cs>input</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <drox:ns>elem.type</drox:ns>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>createButtonPseudo</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>type</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>elem</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>name</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>elem.nodeName</drox:ns>
                        <m:ci>toLowerCase</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <drox:ns>elem.type</drox:ns>
                      <m:ci>type</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>createPositionalPseudo</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>fn</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:ci>markFunction</m:ci>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>argument</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>argument</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">unary_plus</m:csymbol>
                      <m:ci>argument</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:ci>markFunction</m:ci>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>seed</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>matches</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>j</m:ci>
                            </drox:dt>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>matchIndexes</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:ci>fn</m:ci>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">array</m:csymbol>
                              </m:apply>
                              <drox:ns>seed.length</drox:ns>
                              <m:ci>argument</m:ci>
                            </m:apply>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>i</m:ci>
                            </drox:dt>
                            <drox:ns>matchIndexes.length</drox:ns>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">while</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">post_decrement</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>seed</m:ci>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>j</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>matchIndexes</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                </drox:dl>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>seed</m:ci>
                                      <m:ci>j</m:ci>
                                    </m:apply>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>matches</m:ci>
                                          <m:ci>j</m:ci>
                                        </m:apply>
                                      </drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>seed</m:ci>
                                        <m:ci>j</m:ci>
                                      </m:apply>
                                    </drox:dl>
                                  </m:apply>
                                </drox:dl>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>getText</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>Sizzle.getText</drox:ns>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>elem</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>node</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>ret</m:ci>
                    </drox:dt>
                    <m:cs/>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>i</m:ci>
                    </drox:dt>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>nodeType</m:ci>
                    </drox:dt>
                    <drox:ns>elem.nodeType</drox:ns>
                  </drox:di>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="switch2">cond</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>nodeType</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog1">for</m:csymbol>
                      <m:csymbol cd="prog2">empty</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>node</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elem</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                          <drox:dt>
                            <m:ci>ret</m:ci>
                          </drox:dt>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:ci>getText</m:ci>
                            <m:ci>node</m:ci>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                          <drox:ns>elem.textContent</drox:ns>
                        </m:apply>
                        <m:cs>string</m:cs>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <drox:ns>elem.textContent</drox:ns>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <drox:ns>elem.firstChild</drox:ns>
                            </drox:dl>
                            <m:ci>elem</m:ci>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <drox:ns>elem.nextSibling</drox:ns>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                                <drox:dt>
                                  <m:ci>ret</m:ci>
                                </drox:dt>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:ci>getText</m:ci>
                                  <m:ci>elem</m:ci>
                                </m:apply>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <drox:ns>elem.nodeValue</drox:ns>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>ret</m:ci>
                </m:apply>
              </m:bind>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>Expr</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>Sizzle.selectors</drox:ns>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>cacheLength</m:ci>
                  </drox:dt>
                  <m:cn>50</m:cn>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>createPseudo</m:ci>
                  </drox:dt>
                  <m:ci>markFunction</m:ci>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>match</m:ci>
                  </drox:dt>
                  <m:ci>matchExpr</m:ci>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>find</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>relative</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>&gt;</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>dir</m:ci>
                          </drox:dt>
                          <m:cs>parentNode</m:cs>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>first</m:ci>
                          </drox:dt>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </drox:di>
                      </drox:dl>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci> </m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>dir</m:ci>
                          </drox:dt>
                          <m:cs>parentNode</m:cs>
                        </drox:di>
                      </drox:dl>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>+</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>dir</m:ci>
                          </drox:dt>
                          <m:cs>previousSibling</m:cs>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>first</m:ci>
                          </drox:dt>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </drox:di>
                      </drox:dl>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>~</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>dir</m:ci>
                          </drox:dt>
                          <m:cs>previousSibling</m:cs>
                        </drox:di>
                      </drox:dl>
                    </drox:di>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>preFilter</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>ATTR</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>match</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:ci>replace</m:ci>
                            </m:apply>
                            <m:ci>runescape</m:ci>
                            <m:ci>funescape</m:ci>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:cn>3</m:cn>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:ci>replace</m:ci>
                            </m:apply>
                            <m:ci>runescape</m:ci>
                            <m:ci>funescape</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                            <m:cs>~=</m:cs>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>3</m:cn>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>%20</m:cs>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>match</m:ci>
                                    <m:cn>3</m:cn>
                                  </m:apply>
                                </m:apply>
                                <m:cs>%20</m:cs>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <drox:ns>match.slice</drox:ns>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                            <m:cn>4</m:cn>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>CHILD</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>match</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:ci>toLowerCase</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="switch2">cond</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>match</m:ci>
                                      <m:csymbol cd="alg1">one</m:csymbol>
                                    </m:apply>
                                    <m:ci>slice</m:ci>
                                  </m:apply>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                  <m:cn>3</m:cn>
                                </m:apply>
                                <m:cs>nth</m:cs>
                              </m:apply>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>3</m:cn>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <drox:ns>Sizzle.error</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>match</m:ci>
                                    <m:csymbol cd="alg1">zero</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>4</m:cn>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="arith2">unary_plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>match</m:ci>
                                    <m:cn>4</m:cn>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>match</m:ci>
                                      <m:cn>5</m:cn>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">or</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="arith1">times</m:csymbol>
                                    <m:cn>2</m:cn>
                                    <m:apply>
                                      <m:csymbol cd="logic1">or</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>5</m:cn>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="arith2">unary_plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:cn>3</m:cn>
                              </m:apply>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>Sizzle.error</drox:ns>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>match</m:ci>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>PSEUDO</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>match</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>excess</m:ci>
                            </drox:dt>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>unquoted</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>5</m:cn>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:cn>2</m:cn>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>matchExpr</m:ci>
                                <m:cs>CHILD</m:cs>
                              </m:apply>
                              <m:ci>test</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:csymbol cd="prog2">null</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="switch2">cond</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:cn>4</m:cn>
                              </m:apply>
                            </drox:dt>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>2</m:cn>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:cn>4</m:cn>
                              </m:apply>
                            </drox:dl>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:ci>unquoted</m:ci>
                                    <m:apply>
                                      <drox:ns>rpseudo.test</drox:ns>
                                      <m:ci>unquoted</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>excess</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <m:ci>tokenize</m:ci>
                                      <m:ci>unquoted</m:ci>
                                      <m:csymbol cd="logic1">true</m:csymbol>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>excess</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="arith1">minus</m:csymbol>
                                    <m:apply>
                                      <drox:ns>unquoted.indexOf</drox:ns>
                                      <m:cs>)</m:cs>
                                      <m:apply>
                                        <m:csymbol cd="arith1">minus</m:csymbol>
                                        <drox:ns>unquoted.length</drox:ns>
                                        <m:ci>excess</m:ci>
                                      </m:apply>
                                    </m:apply>
                                    <drox:ns>unquoted.length</drox:ns>
                                  </m:apply>
                                </drox:dl>
                              </m:apply>
                            </drox:dt>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>match</m:ci>
                                    <m:csymbol cd="alg1">zero</m:csymbol>
                                  </m:apply>
                                  <m:ci>slice</m:ci>
                                </m:apply>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                                <m:ci>excess</m:ci>
                              </m:apply>
                            </drox:dl>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>match</m:ci>
                                  <m:cn>2</m:cn>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>unquoted.slice</drox:ns>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                                <m:ci>excess</m:ci>
                              </m:apply>
                            </drox:dl>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <drox:ns>match.slice</drox:ns>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                            <m:cn>3</m:cn>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>filter</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>TAG</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>nodeName</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>nodeName</m:ci>
                            <m:cs>*</m:cs>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:bind>
                                <m:csymbol cd="fns1">lambda</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:csymbol cd="logic1">true</m:csymbol>
                                </m:apply>
                              </m:bind>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>nodeName</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <drox:ns>nodeName.replace</drox:ns>
                                <m:ci>runescape</m:ci>
                                <m:ci>funescape</m:ci>
                              </m:apply>
                              <m:ci>toLowerCase</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <m:bvar>
                              <m:ci>elem</m:ci>
                            </m:bvar>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <drox:ns>elem.nodeName</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <drox:ns>elem.nodeName</drox:ns>
                                      <m:ci>toLowerCase</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <m:ci>nodeName</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:bind>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>CLASS</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>className</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>pattern</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>classCache</m:ci>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:ci>className</m:ci>
                                <m:cs>%20</m:cs>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>ATTR</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>name</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>operator</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>check</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <m:bvar>
                              <m:ci>elem</m:ci>
                            </m:bvar>
                            <drox:dl>
                              <m:csymbol cd="prog1">local_var</m:csymbol>
                              <drox:di>
                                <drox:dt>
                                  <m:ci>result</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <drox:ns>Sizzle.attr</drox:ns>
                                  <m:ci>elem</m:ci>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </drox:di>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="relation1">eq</m:csymbol>
                                <m:ci>result</m:ci>
                                <m:csymbol cd="prog2">null</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <m:ci>operator</m:ci>
                                    <m:cs>!=</m:cs>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:ci>operator</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:csymbol cd="logic1">true</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                              <drox:dt>
                                <m:ci>result</m:ci>
                              </drox:dt>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cs/>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:ci>operator</m:ci>
                                  <m:cs>=</m:cs>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <m:ci>result</m:ci>
                                  <m:ci>check</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <m:ci>operator</m:ci>
                                    <m:cs>!=</m:cs>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                    <m:ci>result</m:ci>
                                    <m:ci>check</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                      <m:ci>operator</m:ci>
                                      <m:cs>%5E=</m:cs>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">and</m:csymbol>
                                      <m:ci>check</m:ci>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                        <m:apply>
                                          <drox:ns>result.indexOf</drox:ns>
                                          <m:ci>check</m:ci>
                                        </m:apply>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                        <m:ci>operator</m:ci>
                                        <m:cs>*=</m:cs>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="logic1">and</m:csymbol>
                                        <m:ci>check</m:ci>
                                        <m:apply>
                                          <m:csymbol cd="relation1">gt</m:csymbol>
                                          <m:apply>
                                            <drox:ns>result.indexOf</drox:ns>
                                            <m:ci>check</m:ci>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                            <m:csymbol cd="alg1">one</m:csymbol>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                          <m:ci>operator</m:ci>
                                          <m:cs>$=</m:cs>
                                        </m:apply>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:ci>check</m:ci>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:apply>
                                              <drox:ns>result.slice</drox:ns>
                                              <m:apply>
                                                <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                                <drox:ns>check.length</drox:ns>
                                              </m:apply>
                                            </m:apply>
                                            <m:ci>check</m:ci>
                                          </m:apply>
                                        </m:apply>
                                        <m:apply>
                                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:ci>operator</m:ci>
                                            <m:cs>~=</m:cs>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="relation1">gt</m:csymbol>
                                            <m:apply>
                                              <m:apply>
                                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                                <m:apply>
                                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                                  <m:apply>
                                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                                    <m:cs>%20</m:cs>
                                                    <m:ci>result</m:ci>
                                                  </m:apply>
                                                  <m:cs>%20</m:cs>
                                                </m:apply>
                                                <m:ci>indexOf</m:ci>
                                              </m:apply>
                                              <m:ci>check</m:ci>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                              <m:csymbol cd="alg1">one</m:csymbol>
                                            </m:apply>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                              <m:ci>operator</m:ci>
                                              <m:cs>%7C=</m:cs>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="logic1">or</m:csymbol>
                                            </m:apply>
                                            <m:csymbol cd="logic1">false</m:csymbol>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:bind>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>CHILD</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>type</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>what</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>argument</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>first</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>last</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>simple</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                              <m:apply>
                                <drox:ns>type.slice</drox:ns>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                                <m:cn>3</m:cn>
                              </m:apply>
                              <m:cs>nth</m:cs>
                            </m:apply>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>forward</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                              <m:apply>
                                <drox:ns>type.slice</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                  <m:cn>4</m:cn>
                                </m:apply>
                              </m:apply>
                              <m:cs>last</m:cs>
                            </m:apply>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>ofType</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>what</m:ci>
                              <m:cs>of-type</m:cs>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>first</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>last</m:ci>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>elem</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">not</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <drox:ns>elem.parentNode</drox:ns>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>elem</m:ci>
                              </m:bvar>
                              <m:bvar>
                                <m:ci>context</m:ci>
                              </m:bvar>
                              <m:bvar>
                                <m:ci>xml</m:ci>
                              </m:bvar>
                              <drox:dl>
                                <m:csymbol cd="prog1">local_var</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>cache</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>outerCache</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>node</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>diff</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>nodeIndex</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>start</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>dir</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                      <m:ci>simple</m:ci>
                                      <m:ci>forward</m:ci>
                                    </m:apply>
                                    <m:cs>nextSibling</m:cs>
                                    <m:cs>previousSibling</m:cs>
                                  </m:apply>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>parent</m:ci>
                                  </drox:dt>
                                  <drox:ns>elem.parentNode</drox:ns>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>name</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:ci>ofType</m:ci>
                                    <m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <drox:ns>elem.nodeName</drox:ns>
                                        <m:ci>toLowerCase</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>useCache</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:ci>xml</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:ci>ofType</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </drox:di>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:ci>parent</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <m:ci>simple</m:ci>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog1">while</m:csymbol>
                                        <m:ci>dir</m:ci>
                                        <m:apply>
                                          <m:csymbol cd="prog1">block</m:csymbol>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">assignment</m:csymbol>
                                            <drox:dt>
                                              <m:ci>node</m:ci>
                                            </drox:dt>
                                            <m:ci>elem</m:ci>
                                          </drox:dl>
                                          <m:apply>
                                            <m:csymbol cd="prog1">while</m:csymbol>
                                            <drox:dl>
                                              <m:csymbol cd="prog1">assignment</m:csymbol>
                                              <drox:dt>
                                                <m:ci>node</m:ci>
                                              </drox:dt>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:ci>node</m:ci>
                                                <m:ci>dir</m:ci>
                                              </m:apply>
                                            </drox:dl>
                                            <m:apply>
                                              <m:csymbol cd="prog1">block</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="prog1">if</m:csymbol>
                                                <m:apply>
                                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                                  <m:ci>ofType</m:ci>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                    <m:apply>
                                                      <m:apply>
                                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                                        <drox:ns>node.nodeName</drox:ns>
                                                        <m:ci>toLowerCase</m:ci>
                                                      </m:apply>
                                                    </m:apply>
                                                    <m:ci>name</m:ci>
                                                  </m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                    <drox:ns>node.nodeType</drox:ns>
                                                    <m:csymbol cd="alg1">one</m:csymbol>
                                                  </m:apply>
                                                </m:apply>
                                                <m:apply>
                                                  <m:csymbol cd="prog1">block</m:csymbol>
                                                  <m:apply>
                                                    <m:csymbol cd="prog1">return</m:csymbol>
                                                    <m:csymbol cd="logic1">false</m:csymbol>
                                                  </m:apply>
                                                </m:apply>
                                              </m:apply>
                                            </m:apply>
                                          </m:apply>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">assignment</m:csymbol>
                                            <drox:dt>
                                              <m:ci>start</m:ci>
                                            </drox:dt>
                                            <drox:dl>
                                              <m:csymbol cd="prog1">assignment</m:csymbol>
                                              <drox:dt>
                                                <m:ci>dir</m:ci>
                                              </drox:dt>
                                              <m:apply>
                                                <m:csymbol cd="logic1">and</m:csymbol>
                                                <m:apply>
                                                  <m:csymbol cd="logic1">and</m:csymbol>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                    <m:ci>type</m:ci>
                                                    <m:cs>only</m:cs>
                                                  </m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="logic1">not</m:csymbol>
                                                    <m:ci>start</m:ci>
                                                  </m:apply>
                                                </m:apply>
                                                <m:cs>nextSibling</m:cs>
                                              </m:apply>
                                            </drox:dl>
                                          </drox:dl>
                                        </m:apply>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog1">return</m:csymbol>
                                        <m:csymbol cd="logic1">true</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>start</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                                        <m:ci>forward</m:ci>
                                        <drox:ns>parent.firstChild</drox:ns>
                                        <drox:ns>parent.lastChild</drox:ns>
                                      </m:apply>
                                    </m:apply>
                                  </drox:dl>
                                  <drox:dl>
                                    <m:csymbol cd="switch2">cond</m:csymbol>
                                    <drox:di>
                                      <drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:ci>forward</m:ci>
                                          <m:ci>useCache</m:ci>
                                        </m:apply>
                                      </drox:dt>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>outerCache</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">or</m:csymbol>
                                        </m:apply>
                                      </drox:dl>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>cache</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">or</m:csymbol>
                                        </m:apply>
                                      </drox:dl>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>nodeIndex</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>cache</m:ci>
                                              <m:csymbol cd="alg1">zero</m:csymbol>
                                            </m:apply>
                                            <m:ci>dirruns</m:ci>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>cache</m:ci>
                                            <m:csymbol cd="alg1">one</m:csymbol>
                                          </m:apply>
                                        </m:apply>
                                      </drox:dl>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>diff</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>cache</m:ci>
                                              <m:csymbol cd="alg1">zero</m:csymbol>
                                            </m:apply>
                                            <m:ci>dirruns</m:ci>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>cache</m:ci>
                                            <m:cn>2</m:cn>
                                          </m:apply>
                                        </m:apply>
                                      </drox:dl>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>node</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:ci>nodeIndex</m:ci>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <drox:ns>parent.childNodes</drox:ns>
                                            <m:ci>nodeIndex</m:ci>
                                          </m:apply>
                                        </m:apply>
                                      </drox:dl>
                                      <m:apply>
                                        <m:csymbol cd="prog1">while</m:csymbol>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:ci>node</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="logic1">or</m:csymbol>
                                          </m:apply>
                                        </drox:dl>
                                        <m:apply>
                                          <m:csymbol cd="prog1">block</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="prog1">if</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="logic1">and</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="logic1">and</m:csymbol>
                                                <m:apply>
                                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                  <drox:ns>node.nodeType</drox:ns>
                                                  <m:csymbol cd="alg1">one</m:csymbol>
                                                </m:apply>
                                                <m:apply>
                                                  <m:csymbol cd="prog2">increment</m:csymbol>
                                                  <m:ci>diff</m:ci>
                                                </m:apply>
                                              </m:apply>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                <m:ci>node</m:ci>
                                                <m:ci>elem</m:ci>
                                              </m:apply>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog1">block</m:csymbol>
                                              <drox:dl>
                                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                                <drox:dt>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                    <m:ci>outerCache</m:ci>
                                                    <m:ci>type</m:ci>
                                                  </m:apply>
                                                </drox:dt>
                                                <m:apply>
                                                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                                                  <m:ci>dirruns</m:ci>
                                                  <m:ci>nodeIndex</m:ci>
                                                  <m:ci>diff</m:ci>
                                                </m:apply>
                                              </drox:dl>
                                              <m:apply>
                                                <m:csymbol cd="prog2">break</m:csymbol>
                                              </m:apply>
                                            </m:apply>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </drox:di>
                                    <drox:di>
                                      <drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">and</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="logic1">and</m:csymbol>
                                            <m:ci>useCache</m:ci>
                                            <drox:dl>
                                              <m:csymbol cd="prog1">assignment</m:csymbol>
                                              <drox:dt>
                                                <m:ci>cache</m:ci>
                                              </drox:dt>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:apply>
                                                  <m:csymbol cd="logic1">or</m:csymbol>
                                                </m:apply>
                                                <m:ci>type</m:ci>
                                              </m:apply>
                                            </drox:dl>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>cache</m:ci>
                                              <m:csymbol cd="alg1">zero</m:csymbol>
                                            </m:apply>
                                            <m:ci>dirruns</m:ci>
                                          </m:apply>
                                        </m:apply>
                                      </drox:dt>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>diff</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>cache</m:ci>
                                          <m:csymbol cd="alg1">one</m:csymbol>
                                        </m:apply>
                                      </drox:dl>
                                    </drox:di>
                                    <m:apply>
                                      <m:csymbol cd="prog1">while</m:csymbol>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>node</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">or</m:csymbol>
                                        </m:apply>
                                      </drox:dl>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="prog1">if</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="logic1">and</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                                              <m:ci>ofType</m:ci>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                <m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                                    <drox:ns>node.nodeName</drox:ns>
                                                    <m:ci>toLowerCase</m:ci>
                                                  </m:apply>
                                                </m:apply>
                                                <m:ci>name</m:ci>
                                              </m:apply>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                <drox:ns>node.nodeType</drox:ns>
                                                <m:csymbol cd="alg1">one</m:csymbol>
                                              </m:apply>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog2">increment</m:csymbol>
                                              <m:ci>diff</m:ci>
                                            </m:apply>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="prog1">block</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="prog1">if</m:csymbol>
                                              <m:ci>useCache</m:ci>
                                              <m:apply>
                                                <m:csymbol cd="prog1">block</m:csymbol>
                                                <drox:dl>
                                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                                  <drox:dt>
                                                    <m:apply>
                                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                      <m:apply>
                                                        <m:csymbol cd="logic1">or</m:csymbol>
                                                      </m:apply>
                                                      <m:ci>type</m:ci>
                                                    </m:apply>
                                                  </drox:dt>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                                                    <m:ci>dirruns</m:ci>
                                                    <m:ci>diff</m:ci>
                                                  </m:apply>
                                                </drox:dl>
                                              </m:apply>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog1">if</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                <m:ci>node</m:ci>
                                                <m:ci>elem</m:ci>
                                              </m:apply>
                                              <m:apply>
                                                <m:csymbol cd="prog1">block</m:csymbol>
                                                <m:apply>
                                                  <m:csymbol cd="prog2">break</m:csymbol>
                                                </m:apply>
                                              </m:apply>
                                            </m:apply>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </drox:dl>
                                  <drox:dl>
                                    <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                                    <drox:dt>
                                      <m:ci>diff</m:ci>
                                    </drox:dt>
                                    <m:csymbol cd="arith1">minus</m:csymbol>
                                    <m:ci>last</m:ci>
                                  </drox:dl>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">or</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>PSEUDO</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>pseudo</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>argument</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>args</m:ci>
                            </drox:dt>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>fn</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>fn</m:ci>
                            <m:ci>expando</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:ci>fn</m:ci>
                                <m:ci>argument</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">gt</m:csymbol>
                            <drox:ns>fn.length</drox:ns>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>args</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">array</m:csymbol>
                                <m:ci>pseudo</m:ci>
                                <m:ci>pseudo</m:ci>
                                <m:cs/>
                                <m:ci>argument</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <drox:ns>Expr.setFilters</drox:ns>
                                    <m:ci>hasOwnProperty</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <drox:ns>pseudo.toLowerCase</drox:ns>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:ci>markFunction</m:ci>
                                  <m:bind>
                                    <m:csymbol cd="fns1">lambda</m:csymbol>
                                    <m:bvar>
                                      <m:ci>seed</m:ci>
                                    </m:bvar>
                                    <m:bvar>
                                      <m:ci>matches</m:ci>
                                    </m:bvar>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">local_var</m:csymbol>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>idx</m:ci>
                                        </drox:dt>
                                      </drox:di>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>matched</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:ci>fn</m:ci>
                                          <m:ci>seed</m:ci>
                                          <m:ci>argument</m:ci>
                                        </m:apply>
                                      </drox:di>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>i</m:ci>
                                        </drox:dt>
                                        <drox:ns>matched.length</drox:ns>
                                      </drox:di>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="prog1">while</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                        <m:ci>i</m:ci>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:ci>idx</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <drox:ns>indexOf.call</drox:ns>
                                            <m:ci>seed</m:ci>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>matched</m:ci>
                                              <m:ci>i</m:ci>
                                            </m:apply>
                                          </m:apply>
                                        </drox:dl>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>seed</m:ci>
                                              <m:ci>idx</m:ci>
                                            </m:apply>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="logic1">not</m:csymbol>
                                            <drox:dl>
                                              <m:csymbol cd="prog1">assignment</m:csymbol>
                                              <drox:dt>
                                                <m:apply>
                                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                  <m:ci>matches</m:ci>
                                                  <m:ci>idx</m:ci>
                                                </m:apply>
                                              </drox:dt>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:ci>matched</m:ci>
                                                <m:ci>i</m:ci>
                                              </m:apply>
                                            </drox:dl>
                                          </m:apply>
                                        </drox:dl>
                                      </m:apply>
                                    </m:apply>
                                  </m:bind>
                                </m:apply>
                                <m:bind>
                                  <m:csymbol cd="fns1">lambda</m:csymbol>
                                  <m:bvar>
                                    <m:ci>elem</m:ci>
                                  </m:bvar>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:apply>
                                      <m:ci>fn</m:ci>
                                      <m:ci>elem</m:ci>
                                      <m:csymbol cd="alg1">zero</m:csymbol>
                                      <m:ci>args</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:bind>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>fn</m:ci>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>pseudos</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>not</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>markFunction</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>selector</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>input</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">array</m:csymbol>
                              </m:apply>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:ci>results</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">array</m:csymbol>
                              </m:apply>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:ci>matcher</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:ci>compile</m:ci>
                                <m:apply>
                                  <drox:ns>selector.replace</drox:ns>
                                  <m:ci>rtrim</m:ci>
                                  <m:cs>$1</m:cs>
                                </m:apply>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>matcher</m:ci>
                                <m:ci>expando</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:ci>markFunction</m:ci>
                                <m:bind>
                                  <m:csymbol cd="fns1">lambda</m:csymbol>
                                  <m:bvar>
                                    <m:ci>seed</m:ci>
                                  </m:bvar>
                                  <m:bvar>
                                    <m:ci>matches</m:ci>
                                  </m:bvar>
                                  <m:bvar>
                                    <m:ci>context</m:ci>
                                  </m:bvar>
                                  <m:bvar>
                                    <m:ci>xml</m:ci>
                                  </m:bvar>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">local_var</m:csymbol>
                                    <drox:di>
                                      <drox:dt>
                                        <m:ci>elem</m:ci>
                                      </drox:dt>
                                    </drox:di>
                                    <drox:di>
                                      <drox:dt>
                                        <m:ci>unmatched</m:ci>
                                      </drox:dt>
                                      <m:apply>
                                        <m:ci>matcher</m:ci>
                                        <m:ci>seed</m:ci>
                                        <m:csymbol cd="prog2">null</m:csymbol>
                                        <m:ci>xml</m:ci>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                                        </m:apply>
                                      </m:apply>
                                    </drox:di>
                                    <drox:di>
                                      <drox:dt>
                                        <m:ci>i</m:ci>
                                      </drox:dt>
                                      <drox:ns>seed.length</drox:ns>
                                    </drox:di>
                                  </drox:dl>
                                  <m:apply>
                                    <m:csymbol cd="prog1">while</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                      <m:ci>i</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog1">if</m:csymbol>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:ci>elem</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>unmatched</m:ci>
                                            <m:ci>i</m:ci>
                                          </m:apply>
                                        </drox:dl>
                                        <m:apply>
                                          <m:csymbol cd="prog1">block</m:csymbol>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">assignment</m:csymbol>
                                            <drox:dt>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:ci>seed</m:ci>
                                                <m:ci>i</m:ci>
                                              </m:apply>
                                            </drox:dt>
                                            <m:apply>
                                              <m:csymbol cd="logic1">not</m:csymbol>
                                              <drox:dl>
                                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                                <drox:dt>
                                                  <m:apply>
                                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                    <m:ci>matches</m:ci>
                                                    <m:ci>i</m:ci>
                                                  </m:apply>
                                                </drox:dt>
                                                <m:ci>elem</m:ci>
                                              </drox:dl>
                                            </m:apply>
                                          </drox:dl>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </m:bind>
                              </m:apply>
                              <m:bind>
                                <m:csymbol cd="fns1">lambda</m:csymbol>
                                <m:bvar>
                                  <m:ci>elem</m:ci>
                                </m:bvar>
                                <m:bvar>
                                  <m:ci>context</m:ci>
                                </m:bvar>
                                <m:bvar>
                                  <m:ci>xml</m:ci>
                                </m:bvar>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>input</m:ci>
                                      <m:csymbol cd="alg1">zero</m:csymbol>
                                    </m:apply>
                                  </drox:dt>
                                  <m:ci>elem</m:ci>
                                </drox:dl>
                                <m:apply>
                                  <m:ci>matcher</m:ci>
                                  <m:ci>input</m:ci>
                                  <m:csymbol cd="prog2">null</m:csymbol>
                                  <m:ci>xml</m:ci>
                                  <m:ci>results</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <m:apply>
                                      <drox:ns>results.pop</drox:ns>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:bind>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>has</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>markFunction</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>selector</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>elem</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">gt</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:ci>Sizzle</m:ci>
                                      <m:ci>selector</m:ci>
                                      <m:ci>elem</m:ci>
                                    </m:apply>
                                    <m:ci>length</m:ci>
                                  </m:apply>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>contains</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>markFunction</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>text</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>elem</m:ci>
                              </m:bvar>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">gt</m:csymbol>
                                  <m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                      <m:ci>indexOf</m:ci>
                                    </m:apply>
                                    <m:ci>text</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                    <m:csymbol cd="alg1">one</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>lang</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>markFunction</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>lang</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:apply>
                                <drox:ns>ridentifier.test</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>Sizzle.error</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>unsupported%20lang:%20</m:cs>
                                  <m:ci>lang</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>lang</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <drox:ns>lang.replace</drox:ns>
                                  <m:ci>runescape</m:ci>
                                  <m:ci>funescape</m:ci>
                                </m:apply>
                                <m:ci>toLowerCase</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>elem</m:ci>
                              </m:bvar>
                              <drox:dl>
                                <m:csymbol cd="prog1">local_var</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>elemLang</m:ci>
                                  </drox:dt>
                                </drox:di>
                              </drox:dl>
                              <m:csymbol cd="prog2">do_while</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>elemLang</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                                      <m:ci>documentIsXML</m:ci>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                      <drox:ns>elem.lang</drox:ns>
                                    </m:apply>
                                  </drox:dl>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:ci>elemLang</m:ci>
                                      </drox:dt>
                                      <m:apply>
                                        <drox:ns>elemLang.toLowerCase</drox:ns>
                                      </m:apply>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="prog1">return</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>elem</m:ci>
                                  </drox:dt>
                                  <drox:ns>elem.parentNode</drox:ns>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <drox:ns>elem.nodeType</drox:ns>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:csymbol cd="logic1">false</m:csymbol>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>target</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>hash</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <drox:ns>window.location</drox:ns>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>window.location</drox:ns>
                                <m:ci>hash</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>hash</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <drox:ns>hash.slice</drox:ns>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <drox:ns>elem.id</drox:ns>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>root</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>elem</m:ci>
                            <m:ci>docElem</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>focus</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>elem</m:ci>
                                <drox:ns>document.activeElement</drox:ns>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>enabled</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.disabled</drox:ns>
                            <m:csymbol cd="logic1">false</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>disabled</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.disabled</drox:ns>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>checked</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>nodeName</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>elem.nodeName</drox:ns>
                                <m:ci>toLowerCase</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>selected</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <drox:ns>elem.parentNode</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>elem.parentNode</drox:ns>
                              <m:ci>selectedIndex</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.selected</drox:ns>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>empty</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">for</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>elem</m:ci>
                            </drox:dt>
                            <drox:ns>elem.firstChild</drox:ns>
                          </drox:dl>
                          <m:ci>elem</m:ci>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>elem</m:ci>
                            </drox:dt>
                            <drox:ns>elem.nextSibling</drox:ns>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:csymbol cd="logic1">false</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>parent</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <drox:ns>Expr.pseudos</drox:ns>
                                <m:cs>empty</m:cs>
                              </m:apply>
                              <m:ci>elem</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>header</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <drox:ns>rheader.test</drox:ns>
                            <drox:ns>elem.nodeName</drox:ns>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>input</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <drox:ns>rinputs.test</drox:ns>
                            <drox:ns>elem.nodeName</drox:ns>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>button</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>name</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>elem.nodeName</drox:ns>
                                <m:ci>toLowerCase</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>text</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>attr</m:ci>
                            </drox:dt>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <drox:ns>elem.nodeName</drox:ns>
                                    <m:ci>toLowerCase</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:cs>input</m:cs>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <drox:ns>elem.type</drox:ns>
                                <m:cs>text</m:cs>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>first</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">array</m:csymbol>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>last</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>matchIndexes</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>length</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">array</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith1">minus</m:csymbol>
                                <m:ci>length</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>eq</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>matchIndexes</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>length</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>argument</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">array</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:ci>argument</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:ci>argument</m:ci>
                                  <m:ci>length</m:ci>
                                </m:apply>
                                <m:ci>argument</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>even</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>matchIndexes</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>length</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>length</m:ci>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cn>2</m:cn>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>matchIndexes.push</drox:ns>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>matchIndexes</m:ci>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>odd</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>matchIndexes</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>length</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>length</m:ci>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cn>2</m:cn>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>matchIndexes.push</drox:ns>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>matchIndexes</m:ci>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>lt</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>matchIndexes</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>length</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>argument</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:ci>argument</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:ci>argument</m:ci>
                                  <m:ci>length</m:ci>
                                </m:apply>
                                <m:ci>argument</m:ci>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">geq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">decrement</m:csymbol>
                                <m:ci>i</m:ci>
                              </m:apply>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>matchIndexes.push</drox:ns>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>matchIndexes</m:ci>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>gt</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>createPositionalPseudo</m:ci>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>matchIndexes</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>length</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>argument</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:ci>argument</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:ci>argument</m:ci>
                                  <m:ci>length</m:ci>
                                </m:apply>
                                <m:ci>argument</m:ci>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">increment</m:csymbol>
                                <m:ci>i</m:ci>
                              </m:apply>
                              <m:ci>length</m:ci>
                            </m:apply>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>matchIndexes.push</drox:ns>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>matchIndexes</m:ci>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                </drox:di>
              </drox:dl>
            </drox:dl>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog2">for_each</m:csymbol>
            <m:ci>i</m:ci>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>radio</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>checkbox</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>file</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>password</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>image</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>Expr.pseudos</drox:ns>
                    <m:ci>i</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <m:ci>createInputPseudo</m:ci>
                  <m:ci>i</m:ci>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">for_each</m:csymbol>
            <m:ci>i</m:ci>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>submit</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>reset</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>Expr.pseudos</drox:ns>
                    <m:ci>i</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <m:ci>createButtonPseudo</m:ci>
                  <m:ci>i</m:ci>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>tokenize</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>selector</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>parseOnly</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>matched</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>match</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>tokens</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>soFar</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>groups</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>preFilters</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>cached</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>tokenCache</m:ci>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:ci>selector</m:ci>
                    <m:cs>%20</m:cs>
                  </m:apply>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>cached</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:ci>parseOnly</m:ci>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                    <m:apply>
                      <drox:ns>cached.slice</drox:ns>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>soFar</m:ci>
              </drox:dt>
              <m:ci>selector</m:ci>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>groups</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>preFilters</m:ci>
              </drox:dt>
              <drox:ns>Expr.preFilter</drox:ns>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">while</m:csymbol>
              <m:ci>soFar</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>match</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>soFar</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <drox:ns>groups.push</drox:ns>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>tokens</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>matched</m:ci>
                  </drox:dt>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>match</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>rcombinators.exec</drox:ns>
                      <m:ci>soFar</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>matched</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>match.shift</drox:ns>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <drox:ns>tokens.push</drox:ns>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dt>
                          <m:ci>matched</m:ci>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:ci>type</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>match</m:ci>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                              </m:apply>
                              <m:ci>replace</m:ci>
                            </m:apply>
                            <m:ci>rtrim</m:ci>
                            <m:cs>%20</m:cs>
                          </m:apply>
                        </drox:di>
                      </drox:dl>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>soFar</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>soFar.slice</drox:ns>
                        <drox:ns>matched.length</drox:ns>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">for_each</m:csymbol>
                  <m:ci>type</m:ci>
                  <drox:ns>Expr.filter</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>match</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>matchExpr</m:ci>
                                <m:ci>type</m:ci>
                              </m:apply>
                              <m:ci>exec</m:ci>
                            </m:apply>
                            <m:ci>soFar</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>matched</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>match.shift</drox:ns>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <drox:ns>tokens.push</drox:ns>
                          <drox:dl>
                            <m:csymbol cd="ecmascript3">object</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>value</m:ci>
                              </drox:dt>
                              <m:ci>matched</m:ci>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:ci>type</m:ci>
                              </drox:dt>
                              <m:ci>type</m:ci>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:ci>matches</m:ci>
                              </drox:dt>
                              <m:ci>match</m:ci>
                            </drox:di>
                          </drox:dl>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>soFar</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>soFar.slice</drox:ns>
                            <drox:ns>matched.length</drox:ns>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>matched</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">break</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:ci>parseOnly</m:ci>
                <drox:ns>soFar.length</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:ci>soFar</m:ci>
                  <m:apply>
                    <drox:ns>Sizzle.error</drox:ns>
                    <m:ci>selector</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:ci>tokenCache</m:ci>
                        <m:ci>selector</m:ci>
                        <m:ci>groups</m:ci>
                      </m:apply>
                      <m:ci>slice</m:ci>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>toSelector</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>tokens</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>len</m:ci>
                </drox:dt>
                <drox:ns>tokens.length</drox:ns>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>selector</m:ci>
                </drox:dt>
                <m:cs/>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:csymbol cd="prog2">empty</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>i</m:ci>
                <m:ci>len</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                  <drox:dt>
                    <m:ci>selector</m:ci>
                  </drox:dt>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>tokens</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:ci>value</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>selector</m:ci>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>addCombinator</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>matcher</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>combinator</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>base</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>dir</m:ci>
                </drox:dt>
                <drox:ns>combinator.dir</drox:ns>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>checkNonElements</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>base</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>dir</m:ci>
                    <m:cs>parentNode</m:cs>
                  </m:apply>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>doneName</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>done</m:ci>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <drox:ns>combinator.first</drox:ns>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>context</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>xml</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elem</m:ci>
                        <m:ci>dir</m:ci>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:ci>matcher</m:ci>
                              <m:ci>elem</m:ci>
                              <m:ci>context</m:ci>
                              <m:ci>xml</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>context</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>xml</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>data</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>cache</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>outerCache</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>dirkey</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>dirruns</m:ci>
                          <m:cs>%20</m:cs>
                        </m:apply>
                        <m:ci>doneName</m:ci>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>xml</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>elem</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>elem</m:ci>
                            <m:ci>dir</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:ci>matcher</m:ci>
                                  <m:ci>elem</m:ci>
                                  <m:ci>context</m:ci>
                                  <m:ci>xml</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:csymbol cd="logic1">true</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">while</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>elem</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elem</m:ci>
                              <m:ci>dir</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>outerCache</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">or</m:csymbol>
                                  </m:apply>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:ci>cache</m:ci>
                                      </drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>outerCache</m:ci>
                                        <m:ci>dir</m:ci>
                                      </m:apply>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>cache</m:ci>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                      </m:apply>
                                      <m:ci>dirkey</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="prog1">if</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="prog1">return</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:ci>data</m:ci>
                                            <m:csymbol cd="logic1">true</m:csymbol>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <drox:else>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>cache</m:ci>
                                        </drox:dt>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>outerCache</m:ci>
                                              <m:ci>dir</m:ci>
                                            </m:apply>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                                            <m:ci>dirkey</m:ci>
                                          </m:apply>
                                        </drox:dl>
                                      </drox:dl>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>cache</m:ci>
                                            <m:csymbol cd="alg1">one</m:csymbol>
                                          </m:apply>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="logic1">or</m:csymbol>
                                        </m:apply>
                                      </drox:dl>
                                      <m:apply>
                                        <m:csymbol cd="prog1">if</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>cache</m:ci>
                                            <m:csymbol cd="alg1">one</m:csymbol>
                                          </m:apply>
                                          <m:csymbol cd="logic1">true</m:csymbol>
                                        </m:apply>
                                        <m:apply>
                                          <m:csymbol cd="prog1">block</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="prog1">return</m:csymbol>
                                            <m:csymbol cd="logic1">true</m:csymbol>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                  </drox:else>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:bind>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>elementMatcher</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>matchers</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">gt</m:csymbol>
                  <drox:ns>matchers.length</drox:ns>
                  <m:csymbol cd="alg1">one</m:csymbol>
                </m:apply>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>context</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>xml</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <drox:ns>matchers.length</drox:ns>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">post_decrement</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>matchers</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:ci>elem</m:ci>
                            <m:ci>context</m:ci>
                            <m:ci>xml</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:csymbol cd="logic1">false</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </m:apply>
                </m:bind>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>matchers</m:ci>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>condense</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>unmatched</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>map</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>filter</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>context</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>xml</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>elem</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>newUnmatched</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>len</m:ci>
                </drox:dt>
                <drox:ns>unmatched.length</drox:ns>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>mapped</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <m:ci>map</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:csymbol cd="prog2">empty</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>i</m:ci>
                <m:ci>len</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>unmatched</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>newUnmatched.push</drox:ns>
                          <m:ci>elem</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>mapped</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>map.push</drox:ns>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>newUnmatched</m:ci>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>setMatcher</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>preFilter</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>selector</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>matcher</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>postFilter</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>postFinder</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>postSelector</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>postFilter</m:ci>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>postFilter</m:ci>
                    <m:ci>expando</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>postFilter</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>setMatcher</m:ci>
                    <m:ci>postFilter</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>postFinder</m:ci>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>postFinder</m:ci>
                    <m:ci>expando</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>postFinder</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>setMatcher</m:ci>
                    <m:ci>postFinder</m:ci>
                    <m:ci>postSelector</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:ci>markFunction</m:ci>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>seed</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>results</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>context</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>xml</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>temp</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>preMap</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>postMap</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>preexisting</m:ci>
                      </drox:dt>
                      <drox:ns>results.length</drox:ns>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>elems</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>matcherIn</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>preFilter</m:ci>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:ci>condense</m:ci>
                          <m:ci>elems</m:ci>
                          <m:ci>preMap</m:ci>
                          <m:ci>preFilter</m:ci>
                          <m:ci>context</m:ci>
                          <m:ci>xml</m:ci>
                        </m:apply>
                        <m:ci>elems</m:ci>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>matcherOut</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>matcher</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                          </m:apply>
                          <m:ci>results</m:ci>
                        </m:apply>
                        <m:ci>matcherIn</m:ci>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>matcher</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:ci>matcher</m:ci>
                        <m:ci>matcherIn</m:ci>
                        <m:ci>matcherOut</m:ci>
                        <m:ci>context</m:ci>
                        <m:ci>xml</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>postFilter</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>temp</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>condense</m:ci>
                          <m:ci>matcherOut</m:ci>
                          <m:ci>postMap</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:ci>postFilter</m:ci>
                        <m:ci>temp</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                        </m:apply>
                        <m:ci>context</m:ci>
                        <m:ci>xml</m:ci>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>i</m:ci>
                        </drox:dt>
                        <drox:ns>temp.length</drox:ns>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">post_decrement</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>temp</m:ci>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>matcherOut</m:ci>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>postMap</m:ci>
                                      <m:ci>i</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="logic1">not</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>matcherIn</m:ci>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>postMap</m:ci>
                                          <m:ci>i</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </drox:dt>
                                    <m:ci>elem</m:ci>
                                  </drox:dl>
                                </m:apply>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>seed</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>postFinder</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>temp</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                                </m:apply>
                              </drox:dl>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>i</m:ci>
                                </drox:dt>
                                <drox:ns>matcherOut.length</drox:ns>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">while</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:ci>elem</m:ci>
                                      </drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>matcherOut</m:ci>
                                        <m:ci>i</m:ci>
                                      </m:apply>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <drox:ns>temp.push</drox:ns>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>matcherIn</m:ci>
                                              <m:ci>i</m:ci>
                                            </m:apply>
                                          </drox:dt>
                                          <m:ci>elem</m:ci>
                                        </drox:dl>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:ci>postFinder</m:ci>
                                <m:csymbol cd="prog2">null</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>matcherOut</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                                  </m:apply>
                                </drox:dl>
                                <m:ci>temp</m:ci>
                                <m:ci>xml</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>i</m:ci>
                            </drox:dt>
                            <drox:ns>matcherOut.length</drox:ns>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">post_decrement</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>elem</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>matcherOut</m:ci>
                                      <m:ci>i</m:ci>
                                    </m:apply>
                                  </drox:dl>
                                  <m:apply>
                                    <m:csymbol cd="relation1">gt</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:ci>temp</m:ci>
                                      </drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                                        <m:ci>postFinder</m:ci>
                                        <m:apply>
                                          <drox:ns>indexOf.call</drox:ns>
                                          <m:ci>seed</m:ci>
                                          <m:ci>elem</m:ci>
                                        </m:apply>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>preMap</m:ci>
                                          <m:ci>i</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                      <m:csymbol cd="alg1">one</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>seed</m:ci>
                                        <m:ci>temp</m:ci>
                                      </m:apply>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>results</m:ci>
                                            <m:ci>temp</m:ci>
                                          </m:apply>
                                        </drox:dt>
                                        <m:ci>elem</m:ci>
                                      </drox:dl>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>matcherOut</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>condense</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>matcherOut</m:ci>
                                <m:ci>results</m:ci>
                              </m:apply>
                              <m:apply>
                                <drox:ns>matcherOut.splice</drox:ns>
                                <m:ci>preexisting</m:ci>
                                <drox:ns>matcherOut.length</drox:ns>
                              </m:apply>
                              <m:ci>matcherOut</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>postFinder</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:ci>postFinder</m:ci>
                              <m:csymbol cd="prog2">null</m:csymbol>
                              <m:ci>results</m:ci>
                              <m:ci>matcherOut</m:ci>
                              <m:ci>xml</m:ci>
                            </m:apply>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>push.apply</drox:ns>
                                <m:ci>results</m:ci>
                                <m:ci>matcherOut</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:bind>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>matcherFromTokens</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>tokens</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>checkContext</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>matcher</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>j</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>len</m:ci>
                </drox:dt>
                <drox:ns>tokens.length</drox:ns>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>leadingRelative</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <drox:ns>Expr.relative</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>tokens</m:ci>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                    <m:ci>type</m:ci>
                  </m:apply>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>implicitRelative</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:ci>leadingRelative</m:ci>
                  <m:csymbol cd="alg1">one</m:csymbol>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>matchContext</m:ci>
                </drox:dt>
                <m:apply>
                  <m:ci>addCombinator</m:ci>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>elem</m:ci>
                        <m:ci>checkContext</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                  <m:ci>implicitRelative</m:ci>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>matchAnyContext</m:ci>
                </drox:dt>
                <m:apply>
                  <m:ci>addCombinator</m:ci>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">gt</m:csymbol>
                        <m:apply>
                          <drox:ns>indexOf.call</drox:ns>
                          <m:ci>checkContext</m:ci>
                          <m:ci>elem</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="arith1">unary_minus</m:csymbol>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                  <m:ci>implicitRelative</m:ci>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>matchers</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>context</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>xml</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:csymbol cd="prog2">empty</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>i</m:ci>
                <m:ci>len</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>matcher</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>Expr.relative</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tokens</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:ci>type</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>matchers</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:apply>
                          <m:ci>addCombinator</m:ci>
                          <m:apply>
                            <m:ci>elementMatcher</m:ci>
                            <m:ci>matchers</m:ci>
                          </m:apply>
                          <m:ci>matcher</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>matcher</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <drox:ns>Expr.filter</drox:ns>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>tokens</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:ci>type</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>apply</m:ci>
                          </m:apply>
                          <m:csymbol cd="prog2">null</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>tokens</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:ci>matches</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>matcher</m:ci>
                          <m:ci>expando</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>j</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog2">increment</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <m:csymbol cd="prog2">empty</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>j</m:ci>
                              <m:ci>len</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>j</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <drox:ns>Expr.relative</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>tokens</m:ci>
                                      <m:ci>j</m:ci>
                                    </m:apply>
                                    <m:ci>type</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">break</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:ci>setMatcher</m:ci>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">gt</m:csymbol>
                                  <m:ci>i</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:ci>elementMatcher</m:ci>
                                  <m:ci>matchers</m:ci>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">gt</m:csymbol>
                                  <m:ci>i</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:apply>
                                      <m:ci>toSelector</m:ci>
                                      <m:apply>
                                        <drox:ns>tokens.slice</drox:ns>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="arith1">minus</m:csymbol>
                                          <m:ci>i</m:ci>
                                          <m:csymbol cd="alg1">one</m:csymbol>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                    <m:ci>replace</m:ci>
                                  </m:apply>
                                  <m:ci>rtrim</m:ci>
                                  <m:cs>$1</m:cs>
                                </m:apply>
                              </m:apply>
                              <m:ci>matcher</m:ci>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:ci>i</m:ci>
                                  <m:ci>j</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:ci>matcherFromTokens</m:ci>
                                  <m:apply>
                                    <drox:ns>tokens.slice</drox:ns>
                                    <m:ci>i</m:ci>
                                    <m:ci>j</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:ci>j</m:ci>
                                  <m:ci>len</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:ci>matcherFromTokens</m:ci>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>tokens</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <drox:ns>tokens.slice</drox:ns>
                                      <m:ci>j</m:ci>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="relation1">lt</m:csymbol>
                                  <m:ci>j</m:ci>
                                  <m:ci>len</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:ci>toSelector</m:ci>
                                  <m:ci>tokens</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <drox:ns>matchers.push</drox:ns>
                        <m:ci>matcher</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:ci>elementMatcher</m:ci>
                <m:ci>matchers</m:ci>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>matcherFromGroupMatchers</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>elementMatchers</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>setMatchers</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>matcherCachedRuns</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>bySet</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="relation1">gt</m:csymbol>
                  <drox:ns>setMatchers.length</drox:ns>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>byElement</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="relation1">gt</m:csymbol>
                  <drox:ns>elementMatchers.length</drox:ns>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>superMatcher</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>seed</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>context</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>xml</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>results</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>expandContext</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>elem</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>j</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>matcher</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>setMatched</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>matchedCount</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <m:cs>0</m:cs>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>unmatched</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:ci>seed</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>outermost</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="relation1">neq</m:csymbol>
                        <m:ci>expandContext</m:ci>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>contextBackup</m:ci>
                      </drox:dt>
                      <m:ci>outermostContext</m:ci>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>elems</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>dirrunsUnique</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                        <drox:dt>
                          <m:ci>dirruns</m:ci>
                        </drox:dt>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">eq</m:csymbol>
                            <m:ci>contextBackup</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                          <m:csymbol cd="alg1">one</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>outermost</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>outermostContext</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:ci>context</m:ci>
                            <m:ci>document</m:ci>
                          </m:apply>
                          <m:ci>context</m:ci>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cachedruns</m:ci>
                        </drox:dt>
                        <m:ci>matcherCachedRuns</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">neq</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>elem</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elems</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>byElement</m:ci>
                          <m:ci>elem</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>j</m:ci>
                            </drox:dt>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>matcher</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>elementMatchers</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                                  <m:ci>j</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:ci>matcher</m:ci>
                                  <m:ci>elem</m:ci>
                                  <m:ci>context</m:ci>
                                  <m:ci>xml</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>results.push</drox:ns>
                                    <m:ci>elem</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">break</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>outermost</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>dirruns</m:ci>
                                </drox:dt>
                                <m:ci>dirrunsUnique</m:ci>
                              </drox:dl>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>cachedruns</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="prog2">increment</m:csymbol>
                                  <m:ci>matcherCachedRuns</m:ci>
                                </m:apply>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>bySet</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">not</m:csymbol>
                                  <m:ci>matcher</m:ci>
                                </m:apply>
                                <m:ci>elem</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                <m:ci>matchedCount</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>seed</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>unmatched.push</drox:ns>
                                <m:ci>elem</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                    <drox:dt>
                      <m:ci>matchedCount</m:ci>
                    </drox:dt>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:ci>i</m:ci>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>bySet</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:ci>i</m:ci>
                        <m:ci>matchedCount</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>j</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>matcher</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>setMatchers</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>j</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:ci>matcher</m:ci>
                            <m:ci>unmatched</m:ci>
                            <m:ci>setMatched</m:ci>
                            <m:ci>context</m:ci>
                            <m:ci>xml</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>seed</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">gt</m:csymbol>
                              <m:ci>matchedCount</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">while</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>setMatched</m:ci>
                                            <m:ci>i</m:ci>
                                          </m:apply>
                                        </drox:dt>
                                        <m:apply>
                                          <drox:ns>pop.call</drox:ns>
                                          <m:ci>results</m:ci>
                                        </m:apply>
                                      </drox:dl>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>setMatched</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:ci>condense</m:ci>
                              <m:ci>setMatched</m:ci>
                            </m:apply>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <drox:ns>push.apply</drox:ns>
                        <m:ci>results</m:ci>
                        <m:ci>setMatched</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:ci>outermost</m:ci>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:ci>seed</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="relation1">gt</m:csymbol>
                              <drox:ns>setMatched.length</drox:ns>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="relation1">gt</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:ci>matchedCount</m:ci>
                              <drox:ns>setMatchers.length</drox:ns>
                            </m:apply>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>Sizzle.uniqueSort</drox:ns>
                            <m:ci>results</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>outermost</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>dirruns</m:ci>
                        </drox:dt>
                        <m:ci>dirrunsUnique</m:ci>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>outermostContext</m:ci>
                        </drox:dt>
                        <m:ci>contextBackup</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>unmatched</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:ci>bySet</m:ci>
                <m:apply>
                  <m:ci>markFunction</m:ci>
                  <m:ci>superMatcher</m:ci>
                </m:apply>
                <m:ci>superMatcher</m:ci>
              </m:apply>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>compile</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>Sizzle.compile</drox:ns>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>selector</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>group</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>i</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>setMatchers</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>elementMatchers</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>cached</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>compilerCache</m:ci>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>selector</m:ci>
                        <m:cs>%20</m:cs>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>cached</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>group</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>group</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>tokenize</m:ci>
                            <m:ci>selector</m:ci>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <drox:ns>group.length</drox:ns>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">while</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">post_decrement</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>cached</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>matcherFromTokens</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>group</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>cached</m:ci>
                            <m:ci>expando</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>setMatchers.push</drox:ns>
                              <m:ci>cached</m:ci>
                            </m:apply>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>elementMatchers.push</drox:ns>
                                <m:ci>cached</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>cached</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>compilerCache</m:ci>
                        <m:ci>selector</m:ci>
                        <m:apply>
                          <m:ci>matcherFromGroupMatchers</m:ci>
                          <m:ci>elementMatchers</m:ci>
                          <m:ci>setMatchers</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>cached</m:ci>
                </m:apply>
              </m:bind>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>multipleContexts</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>selector</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>contexts</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>results</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>len</m:ci>
                </drox:dt>
                <drox:ns>contexts.length</drox:ns>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:csymbol cd="prog2">empty</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>i</m:ci>
                <m:ci>len</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:ci>Sizzle</m:ci>
                  <m:ci>selector</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>contexts</m:ci>
                    <m:ci>i</m:ci>
                  </m:apply>
                  <m:ci>results</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>results</m:ci>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>select</m:ci>
            </drox:dt>
            <m:bvar>
              <m:ci>selector</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>context</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>results</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>seed</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>tokens</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>token</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>find</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>match</m:ci>
                </drox:dt>
                <m:apply>
                  <m:ci>tokenize</m:ci>
                  <m:ci>selector</m:ci>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <m:ci>seed</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>match.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>tokens</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>match</m:ci>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:ci>slice</m:ci>
                          </m:apply>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </drox:dl>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="relation1">gt</m:csymbol>
                                <drox:ns>tokens.length</drox:ns>
                                <m:cn>2</m:cn>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>token</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>tokens</m:ci>
                                      <m:csymbol cd="alg1">zero</m:csymbol>
                                    </m:apply>
                                  </drox:dl>
                                  <m:ci>type</m:ci>
                                </m:apply>
                                <m:cs>ID</m:cs>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <drox:ns>context.nodeType</drox:ns>
                              <m:cn>9</m:cn>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>documentIsXML</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>Expr.relative</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>tokens</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                            <m:ci>type</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>context</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <drox:ns>Expr.find</drox:ns>
                                <m:cs>ID</m:cs>
                              </m:apply>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <drox:ns>token.matches</drox:ns>
                                    <m:csymbol cd="alg1">zero</m:csymbol>
                                  </m:apply>
                                  <m:ci>replace</m:ci>
                                </m:apply>
                                <m:ci>runescape</m:ci>
                                <m:ci>funescape</m:ci>
                              </m:apply>
                              <m:ci>context</m:ci>
                            </m:apply>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>context</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:ci>results</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>selector</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>selector.slice</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <drox:ns>tokens.shift</drox:ns>
                                </m:apply>
                                <m:ci>value</m:ci>
                              </m:apply>
                              <m:ci>length</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>matchExpr</m:ci>
                              <m:cs>needsContext</m:cs>
                            </m:apply>
                            <m:ci>test</m:ci>
                          </m:apply>
                          <m:ci>selector</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                        <drox:ns>tokens.length</drox:ns>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">while</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">post_decrement</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>token</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>tokens</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <drox:ns>Expr.relative</drox:ns>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>type</m:ci>
                              </drox:dt>
                              <drox:ns>token.type</drox:ns>
                            </drox:dl>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">break</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>find</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <drox:ns>Expr.find</drox:ns>
                              <m:ci>type</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>seed</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:ci>find</m:ci>
                                  <m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <drox:ns>token.matches</drox:ns>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                      </m:apply>
                                      <m:ci>replace</m:ci>
                                    </m:apply>
                                    <m:ci>runescape</m:ci>
                                    <m:ci>funescape</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">or</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <drox:ns>tokens.splice</drox:ns>
                                  <m:ci>i</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>selector</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <drox:ns>seed.length</drox:ns>
                                    <m:apply>
                                      <m:ci>toSelector</m:ci>
                                      <m:ci>tokens</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <m:ci>selector</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <drox:ns>push.apply</drox:ns>
                                      <m:ci>results</m:ci>
                                      <m:apply>
                                        <drox:ns>slice.call</drox:ns>
                                        <m:ci>seed</m:ci>
                                        <m:csymbol cd="alg1">zero</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">return</m:csymbol>
                                      <m:ci>results</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">break</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:apply>
                <m:ci>compile</m:ci>
                <m:ci>selector</m:ci>
                <m:ci>match</m:ci>
              </m:apply>
              <m:ci>seed</m:ci>
              <m:ci>context</m:ci>
              <m:ci>documentIsXML</m:ci>
              <m:ci>results</m:ci>
              <m:apply>
                <drox:ns>rsibling.test</drox:ns>
                <m:ci>selector</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>results</m:ci>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>Expr.pseudos</drox:ns>
                <m:cs>nth</m:cs>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <drox:ns>Expr.pseudos</drox:ns>
              <m:cs>eq</m:cs>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="ecmascript3">function</m:csymbol>
            <drox:dt>
              <m:ci>setFilters</m:ci>
            </drox:dt>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Expr.filters</drox:ns>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>setFilters.prototype</drox:ns>
              </drox:dt>
              <drox:ns>Expr.pseudos</drox:ns>
            </drox:dl>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Expr.setFilters</drox:ns>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">new</m:csymbol>
              <m:ci>setFilters</m:ci>
            </m:apply>
          </drox:dl>
          <m:apply>
            <m:ci>setDocument</m:ci>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>Sizzle.attr</drox:ns>
            </drox:dt>
            <drox:ns>jQuery.attr</drox:ns>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>jQuery.find</drox:ns>
            </drox:dt>
            <m:ci>Sizzle</m:ci>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>jQuery.expr</drox:ns>
            </drox:dt>
            <drox:ns>Sizzle.selectors</drox:ns>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.expr</drox:ns>
                <m:cs>:</m:cs>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>jQuery.expr</drox:ns>
              <m:ci>pseudos</m:ci>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>jQuery.unique</drox:ns>
            </drox:dt>
            <drox:ns>Sizzle.uniqueSort</drox:ns>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>jQuery.text</drox:ns>
            </drox:dt>
            <drox:ns>Sizzle.getText</drox:ns>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>jQuery.isXMLDoc</drox:ns>
            </drox:dt>
            <drox:ns>Sizzle.isXML</drox:ns>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>jQuery.contains</drox:ns>
            </drox:dt>
            <drox:ns>Sizzle.contains</drox:ns>
          </drox:dl>
        </m:bind>
        <m:ci>window</m:ci>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>runtil</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/Until$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rparentsprev</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:parents%7Cprev(?:Until%7CAll))/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>isSimple</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E.%5B%5E:#%5C%5B%5C.,%5D*$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rneedsContext</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>jQuery.expr</drox:ns>
              <m:ci>match</m:ci>
            </m:apply>
            <m:ci>needsContext</m:ci>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>guaranteedUnique</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>children</m:ci>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>contents</m:ci>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>next</m:ci>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>prev</m:ci>
              </drox:dt>
              <m:csymbol cd="logic1">true</m:csymbol>
            </drox:di>
          </drox:dl>
        </drox:di>
      </drox:dl>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>find</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>self</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>len</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>selector</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>self</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>pushStack</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:ci>jQuery</m:ci>
                            <m:ci>selector</m:ci>
                          </m:apply>
                          <m:ci>filter</m:ci>
                        </m:apply>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>len</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <drox:ns>jQuery.contains</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>self</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <m:csymbol cd="logic1">true</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>ret</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>i</m:ci>
                  <m:ci>len</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.find</drox:ns>
                    <m:ci>selector</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:ci>ret</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>ret</m:ci>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <m:ci>len</m:ci>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <drox:ns>jQuery.unique</drox:ns>
                      <m:ci>ret</m:ci>
                    </m:apply>
                    <m:ci>ret</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>ret.selector</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>selector</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>selector</m:ci>
                      </m:apply>
                      <m:cs>%20</m:cs>
                    </m:apply>
                    <m:cs/>
                  </m:apply>
                  <m:ci>selector</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>ret</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>has</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>target</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>targets</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>jQuery</m:ci>
                    <m:ci>target</m:ci>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>len</m:ci>
                  </drox:dt>
                  <drox:ns>targets.length</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>filter</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">for</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>i</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="relation1">lt</m:csymbol>
                        <m:ci>i</m:ci>
                        <m:ci>len</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.contains</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>targets</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:csymbol cd="logic1">true</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>not</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:ci>winnow</m:ci>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>selector</m:ci>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>filter</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:ci>winnow</m:ci>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>selector</m:ci>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>is</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>selector</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>selector</m:ci>
                      </m:apply>
                      <m:cs>string</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <drox:ns>rneedsContext.test</drox:ns>
                        <m:ci>selector</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="relation1">geq</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:ci>selector</m:ci>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>context</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>index</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="relation1">gt</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.filter</drox:ns>
                            <m:ci>selector</m:ci>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                          </m:apply>
                          <m:ci>length</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>filter</m:ci>
                          </m:apply>
                          <m:ci>selector</m:ci>
                        </m:apply>
                        <m:ci>length</m:ci>
                      </m:apply>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>closest</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selectors</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>context</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>cur</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>l</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>pos</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:ci>jQuery</m:ci>
                      <m:ci>selectors</m:ci>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>i</m:ci>
                  <m:ci>l</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>cur</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>cur</m:ci>
                          <drox:ns>cur.ownerDocument</drox:ns>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <m:ci>cur</m:ci>
                          <m:ci>context</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <drox:ns>cur.nodeType</drox:ns>
                        <m:cn>11</m:cn>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>pos</m:ci>
                          <m:apply>
                            <m:csymbol cd="relation1">gt</m:csymbol>
                            <m:apply>
                              <drox:ns>pos.index</drox:ns>
                              <m:ci>cur</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="arith1">unary_minus</m:csymbol>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.find</drox:ns>
                              <m:ci>matchesSelector</m:ci>
                            </m:apply>
                            <m:ci>cur</m:ci>
                            <m:ci>selectors</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>ret.push</drox:ns>
                            <m:ci>cur</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">break</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cur</m:ci>
                        </drox:dt>
                        <drox:ns>cur.parentNode</drox:ns>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <drox:ns>ret.length</drox:ns>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <drox:ns>jQuery.unique</drox:ns>
                      <m:ci>ret</m:ci>
                    </m:apply>
                    <m:ci>ret</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>index</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>elem</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                          <m:ci>parentNode</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>first</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>prevAll</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:ci>length</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="arith1">unary_minus</m:csymbol>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>elem</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.inArray</drox:ns>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:ci>jQuery</m:ci>
                        <m:ci>elem</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.inArray</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <drox:ns>elem.jquery</drox:ns>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>elem</m:ci>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                    <m:ci>elem</m:ci>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>add</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>context</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>set</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                        <m:ci>selector</m:ci>
                      </m:apply>
                      <m:cs>string</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:ci>jQuery</m:ci>
                      <m:ci>selector</m:ci>
                      <m:ci>context</m:ci>
                    </m:apply>
                    <m:apply>
                      <drox:ns>jQuery.makeArray</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>selector</m:ci>
                          <drox:ns>selector.nodeType</drox:ns>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                          <m:ci>selector</m:ci>
                        </m:apply>
                        <m:ci>selector</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>all</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.merge</drox:ns>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>get</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>set</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:apply>
                    <drox:ns>jQuery.unique</drox:ns>
                    <m:ci>all</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>addBack</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>add</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>selector</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>prevObject</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>prevObject</m:ci>
                        </m:apply>
                        <m:ci>filter</m:ci>
                      </m:apply>
                      <m:ci>selector</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fn</drox:ns>
            <m:ci>andSelf</m:ci>
          </m:apply>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>addBack</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>sibling</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>cur</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>dir</m:ci>
        </m:bvar>
        <m:csymbol cd="prog2">do_while</m:csymbol>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>cur</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>cur</m:ci>
              <m:ci>dir</m:ci>
            </m:apply>
          </drox:dl>
        </m:apply>
        <m:apply>
          <m:csymbol cd="logic1">and</m:csymbol>
          <m:ci>cur</m:ci>
          <m:apply>
            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
            <drox:ns>cur.nodeType</drox:ns>
            <m:csymbol cd="alg1">one</m:csymbol>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>cur</m:ci>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>parent</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>parent</m:ci>
                  </drox:dt>
                  <drox:ns>elem.parentNode</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>parent</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <drox:ns>parent.nodeType</drox:ns>
                      <m:cn>11</m:cn>
                    </m:apply>
                  </m:apply>
                  <m:ci>parent</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>parents</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.dir</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>parentNode</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>parentsUntil</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>until</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.dir</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>parentNode</m:cs>
                  <m:ci>until</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>next</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>sibling</m:ci>
                  <m:ci>elem</m:ci>
                  <m:cs>nextSibling</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prev</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>sibling</m:ci>
                  <m:ci>elem</m:ci>
                  <m:cs>previousSibling</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>nextAll</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.dir</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>nextSibling</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prevAll</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.dir</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>previousSibling</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>nextUntil</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>until</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.dir</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>nextSibling</m:cs>
                  <m:ci>until</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prevUntil</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>until</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.dir</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>previousSibling</m:cs>
                  <m:ci>until</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>siblings</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.sibling</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>firstChild</m:ci>
                  </m:apply>
                  <m:ci>elem</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>children</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.sibling</drox:ns>
                  <drox:ns>elem.firstChild</drox:ns>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>contents</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.nodeName</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>iframe</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <drox:ns>jQuery.merge</drox:ns>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                    <drox:ns>elem.childNodes</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>fn</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>until</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.map</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>fn</m:ci>
                    <m:ci>until</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <drox:ns>runtil.test</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>selector</m:ci>
                    </drox:dt>
                    <m:ci>until</m:ci>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>selector</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>selector</m:ci>
                    </m:apply>
                    <m:cs>string</m:cs>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>ret</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.filter</drox:ns>
                      <m:ci>selector</m:ci>
                      <m:ci>ret</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>ret</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>length</m:ci>
                      </m:apply>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>guaranteedUnique</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <drox:ns>jQuery.unique</drox:ns>
                    <m:ci>ret</m:ci>
                  </m:apply>
                  <m:ci>ret</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>length</m:ci>
                    </m:apply>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <drox:ns>rparentsprev.test</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>ret</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>ret.reverse</drox:ns>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:ci>ret</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>filter</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>expr</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>elems</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>not</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>not</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>expr</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>:not(</m:cs>
                        <m:ci>expr</m:ci>
                      </m:apply>
                      <m:cs>)</m:cs>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <drox:ns>elems.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.find</drox:ns>
                        <m:ci>matchesSelector</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elems</m:ci>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:ci>expr</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>elems</m:ci>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.find</drox:ns>
                      <m:ci>matches</m:ci>
                    </m:apply>
                    <m:ci>expr</m:ci>
                    <m:ci>elems</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dir</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>dir</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>until</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>matched</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cur</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>elem</m:ci>
                    <m:ci>dir</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>cur</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <drox:ns>cur.nodeType</drox:ns>
                      <m:cn>9</m:cn>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <drox:ns>cur.nodeType</drox:ns>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>matched.push</drox:ns>
                        <m:ci>cur</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>cur</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>cur</m:ci>
                      <m:ci>dir</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>matched</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>sibling</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>n</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>r</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:ci>n</m:ci>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>n</m:ci>
                  </drox:dt>
                  <drox:ns>n.nextSibling</drox:ns>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <drox:ns>n.nodeType</drox:ns>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:ci>n</m:ci>
                        <m:ci>elem</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>r.push</drox:ns>
                        <m:ci>n</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>r</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>winnow</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elements</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>qualifier</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>keep</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>qualifier</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
        </drox:dl>
        <drox:dl>
          <m:csymbol cd="switch2">cond</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:apply>
                <drox:ns>jQuery.isFunction</drox:ns>
                <m:ci>qualifier</m:ci>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.grep</drox:ns>
                <m:ci>elements</m:ci>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>i</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>retVal</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <drox:ns>qualifier.call</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>i</m:ci>
                            <m:ci>elem</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>retVal</m:ci>
                      <m:ci>keep</m:ci>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <drox:ns>qualifier.nodeType</drox:ns>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.grep</drox:ns>
                <m:ci>elements</m:ci>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>elem</m:ci>
                        <m:ci>qualifier</m:ci>
                      </m:apply>
                      <m:ci>keep</m:ci>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <m:ci>qualifier</m:ci>
                </m:apply>
                <m:cs>string</m:cs>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>filtered</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>jQuery.grep</drox:ns>
                  <m:ci>elements</m:ci>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <drox:ns>elem.nodeType</drox:ns>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <drox:ns>isSimple.test</drox:ns>
                <m:ci>qualifier</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.filter</drox:ns>
                    <m:ci>qualifier</m:ci>
                    <m:ci>filtered</m:ci>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>keep</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>qualifier</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.filter</drox:ns>
                      <m:ci>qualifier</m:ci>
                      <m:ci>filtered</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </drox:else>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.grep</drox:ns>
            <m:ci>elements</m:ci>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">geq</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.inArray</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:ci>qualifier</m:ci>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                  <m:ci>keep</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>createSafeFragment</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>document</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>list</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>nodeNames.split</drox:ns>
              <m:cs>%7C</m:cs>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>safeFrag</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>document.createDocumentFragment</drox:ns>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <drox:ns>safeFrag.createElement</drox:ns>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">while</m:csymbol>
              <drox:ns>list.length</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>safeFrag.createElement</drox:ns>
                  <m:apply>
                    <drox:ns>list.pop</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>safeFrag</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>nodeNames</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="arith2">plus</m:csymbol>
            <m:cs>abbr%7Carticle%7Caside%7Caudio%7Cbdi%7Ccanvas%7Cdata%7Cdatalist%7Cdetails%7Cfigcaption%7Cfigure%7Cfooter%7C</m:cs>
            <m:cs>header%7Chgroup%7Cmark%7Cmeter%7Cnav%7Coutput%7Cprogress%7Csection%7Csummary%7Ctime%7Cvideo</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rinlinejQuery</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%20jQuery%5Cd+=%22(?:null%7C%5Cd+)%22/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rnoshimcache</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">new</m:csymbol>
            <m:ci>RegExp</m:ci>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>%3C(?:</m:cs>
                <m:ci>nodeNames</m:ci>
              </m:apply>
              <m:cs>)%5B%5Cs/%3E%5D</m:cs>
            </m:apply>
            <m:cs>i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rleadingWhitespace</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E%5Cs+/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rxhtmlTag</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%3C(?!area%7Cbr%7Ccol%7Cembed%7Chr%7Cimg%7Cinput%7Clink%7Cmeta%7Cparam)((%5B%5Cw:%5D+)%5B%5E%3E%5D*)%5C/%3E/gi</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rtagName</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%3C(%5B%5Cw:%5D+)/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rtbody</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%3Ctbody/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rhtml</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%3C%7C&amp;#?%5Cw+;/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rnoInnerhtml</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%3C(?:script%7Cstyle%7Clink)/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>manipulation_rcheckableType</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:checkbox%7Cradio)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rchecked</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/checked%5Cs*(?:%5B%5E=%5D%7C=%5Cs*.checked.)/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rscriptType</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E$%7C%5C/(?:java%7Cecma)script/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rscriptTypeMasked</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5Etrue%5C/(.*)/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rcleanScript</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E%5Cs*%3C!(?:%5C%5BCDATA%5C%5B%7C--)%7C(?:%5C%5D%5C%5D%7C--)%3E%5Cs*$/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>wrapMap</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>option</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:cs>%3Cselect%20multiple='multiple'%3E</m:cs>
                <m:cs>%3C/select%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>legend</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:cs>%3Cfieldset%3E</m:cs>
                <m:cs>%3C/fieldset%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>area</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:cs>%3Cmap%3E</m:cs>
                <m:cs>%3C/map%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>param</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:cs>%3Cobject%3E</m:cs>
                <m:cs>%3C/object%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>thead</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:cs>%3Ctable%3E</m:cs>
                <m:cs>%3C/table%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>tr</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:cn>2</m:cn>
                <m:cs>%3Ctable%3E%3Ctbody%3E</m:cs>
                <m:cs>%3C/tbody%3E%3C/table%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>col</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:cn>2</m:cn>
                <m:cs>%3Ctable%3E%3Ctbody%3E%3C/tbody%3E%3Ccolgroup%3E</m:cs>
                <m:cs>%3C/colgroup%3E%3C/table%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>td</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:cn>3</m:cn>
                <m:cs>%3Ctable%3E%3Ctbody%3E%3Ctr%3E</m:cs>
                <m:cs>%3C/tr%3E%3C/tbody%3E%3C/table%3E</m:cs>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>_default</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.support</drox:ns>
                  <m:ci>htmlSerialize</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                  <m:cs/>
                  <m:cs/>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                  <m:csymbol cd="alg1">one</m:csymbol>
                  <m:cs>X%3Cdiv%3E</m:cs>
                  <m:cs>%3C/div%3E</m:cs>
                </m:apply>
              </m:apply>
            </drox:di>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>safeFragment</m:ci>
          </drox:dt>
          <m:apply>
            <m:ci>createSafeFragment</m:ci>
            <m:ci>document</m:ci>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>fragmentDiv</m:ci>
          </drox:dt>
          <m:apply>
            <drox:ns>safeFragment.appendChild</drox:ns>
            <m:apply>
              <drox:ns>document.createElement</drox:ns>
              <m:cs>div</m:cs>
            </m:apply>
          </m:apply>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>wrapMap.optgroup</drox:ns>
        </drox:dt>
        <drox:ns>wrapMap.option</drox:ns>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>wrapMap.tbody</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <drox:ns>wrapMap.tfoot</drox:ns>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>wrapMap.colgroup</drox:ns>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>wrapMap.caption</drox:ns>
              </drox:dt>
              <drox:ns>wrapMap.thead</drox:ns>
            </drox:dl>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>wrapMap.th</drox:ns>
        </drox:dt>
        <drox:ns>wrapMap.td</drox:ns>
      </drox:dl>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>text</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>value</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>value</m:ci>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <drox:ns>jQuery.text</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>empty</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>append</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:ci>createTextNode</m:ci>
                            </m:apply>
                            <m:ci>value</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:ci>value</m:ci>
                  <drox:ns>arguments.length</drox:ns>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>wrapAll</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>html</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>html</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>i</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>wrapAll</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>html.call</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>wrap</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:ci>jQuery</m:ci>
                                <m:ci>html</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    <m:csymbol cd="alg1">zero</m:csymbol>
                                  </m:apply>
                                  <m:ci>ownerDocument</m:ci>
                                </m:apply>
                              </m:apply>
                              <m:ci>eq</m:ci>
                            </m:apply>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                          <m:ci>clone</m:ci>
                        </m:apply>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                      <m:ci>parentNode</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>wrap.insertBefore</drox:ns>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <drox:ns>wrap.map</drox:ns>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">while</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <drox:ns>elem.firstChild</drox:ns>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>elem.firstChild</drox:ns>
                                  <m:ci>nodeType</m:ci>
                                </m:apply>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>elem</m:ci>
                                </drox:dt>
                                <drox:ns>elem.firstChild</drox:ns>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:ci>elem</m:ci>
                          </m:apply>
                        </m:bind>
                      </m:apply>
                      <m:ci>append</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>wrapInner</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>html</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>html</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>i</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>wrapInner</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>html.call</drox:ns>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>self</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>jQuery</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>contents</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>self.contents</drox:ns>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <drox:ns>contents.length</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>contents.wrapAll</drox:ns>
                          <m:ci>html</m:ci>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>self.append</drox:ns>
                            <m:ci>html</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>wrap</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>html</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>isFunction</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.isFunction</drox:ns>
                    <m:ci>html</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>i</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:ci>jQuery</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                        <m:ci>wrapAll</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>isFunction</m:ci>
                        <m:apply>
                          <drox:ns>html.call</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:ci>html</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>unwrap</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>parent</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.nodeName</drox:ns>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:cs>body</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:ci>jQuery</m:ci>
                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                </m:apply>
                                <m:ci>replaceWith</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>childNodes</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                    <m:ci>end</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>append</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>domManip</m:ci>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  <m:csymbol cd="logic1">true</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>appendChild</m:ci>
                          </m:apply>
                          <m:ci>elem</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prepend</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>domManip</m:ci>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  <m:csymbol cd="logic1">true</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>insertBefore</m:ci>
                          </m:apply>
                          <m:ci>elem</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>firstChild</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>before</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>domManip</m:ci>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  <m:csymbol cd="logic1">false</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>parentNode</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>parentNode</m:ci>
                            </m:apply>
                            <m:ci>insertBefore</m:ci>
                          </m:apply>
                          <m:ci>elem</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>after</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>domManip</m:ci>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  <m:csymbol cd="logic1">false</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>parentNode</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>parentNode</m:ci>
                            </m:apply>
                            <m:ci>insertBefore</m:ci>
                          </m:apply>
                          <m:ci>elem</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>nextSibling</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>remove</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>keepData</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>keepData</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.nodeType</drox:ns>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.cleanData</drox:ns>
                            <m:apply>
                              <m:ci>getAll</m:ci>
                              <m:ci>elem</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <drox:ns>elem.parentNode</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:ci>keepData</m:ci>
                              <m:apply>
                                <drox:ns>jQuery.contains</drox:ns>
                                <drox:ns>elem.ownerDocument</drox:ns>
                                <m:ci>elem</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:ci>setGlobalEval</m:ci>
                                <m:apply>
                                  <m:ci>getAll</m:ci>
                                  <m:ci>elem</m:ci>
                                  <m:cs>script</m:cs>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>elem.parentNode</drox:ns>
                              <m:ci>removeChild</m:ci>
                            </m:apply>
                            <m:ci>elem</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>empty</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <drox:ns>elem.nodeType</drox:ns>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.cleanData</drox:ns>
                        <m:apply>
                          <m:ci>getAll</m:ci>
                          <m:ci>elem</m:ci>
                          <m:csymbol cd="logic1">false</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">while</m:csymbol>
                    <drox:ns>elem.firstChild</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>elem.removeChild</drox:ns>
                        <drox:ns>elem.firstChild</drox:ns>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <drox:ns>elem.options</drox:ns>
                      <m:apply>
                        <drox:ns>jQuery.nodeName</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:cs>select</m:cs>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>elem.options</drox:ns>
                            <m:ci>length</m:ci>
                          </m:apply>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>clone</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>dataAndEvents</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>deepDataAndEvents</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>dataAndEvents</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">eq</m:csymbol>
                    <m:ci>dataAndEvents</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                  <m:csymbol cd="logic1">false</m:csymbol>
                  <m:ci>dataAndEvents</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>deepDataAndEvents</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">eq</m:csymbol>
                    <m:ci>deepDataAndEvents</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </m:apply>
                  <m:ci>dataAndEvents</m:ci>
                  <m:ci>deepDataAndEvents</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>map</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.clone</drox:ns>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>dataAndEvents</m:ci>
                        <m:ci>deepDataAndEvents</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>html</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>value</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>elem</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>i</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>l</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>length</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>value</m:ci>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <drox:ns>elem.nodeType</drox:ns>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>elem.innerHTML</drox:ns>
                                <m:ci>replace</m:ci>
                              </m:apply>
                              <m:ci>rinlinejQuery</m:ci>
                              <m:cs/>
                            </m:apply>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                  <m:ci>value</m:ci>
                                </m:apply>
                                <m:cs>string</m:cs>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:apply>
                                  <drox:ns>rnoInnerhtml.test</drox:ns>
                                  <m:ci>value</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>wrapMap</m:ci>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">or</m:csymbol>
                                  </m:apply>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:ci>toLowerCase</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>value</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>value.replace</drox:ns>
                            <m:ci>rxhtmlTag</m:ci>
                            <m:cs>%3C$1%3E%3C/$2%3E</m:cs>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog2">try</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">for</m:csymbol>
                              <m:csymbol cd="prog2">empty</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="relation1">lt</m:csymbol>
                                <m:ci>i</m:ci>
                                <m:ci>l</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">post_increment</m:csymbol>
                                <m:ci>i</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>elem</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">or</m:csymbol>
                                  </m:apply>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <drox:ns>elem.nodeType</drox:ns>
                                    <m:csymbol cd="alg1">one</m:csymbol>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <drox:ns>jQuery.cleanData</drox:ns>
                                      <m:apply>
                                        <m:ci>getAll</m:ci>
                                        <m:ci>elem</m:ci>
                                        <m:csymbol cd="logic1">false</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <drox:ns>elem.innerHTML</drox:ns>
                                      </drox:dt>
                                      <m:ci>value</m:ci>
                                    </drox:dl>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </drox:dl>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog2">catch</m:csymbol>
                            <m:bvar>
                              <m:ci>e</m:ci>
                            </m:bvar>
                          </drox:dl>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>elem</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>empty</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>append</m:ci>
                          </m:apply>
                          <m:ci>value</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                  <m:csymbol cd="prog2">null</m:csymbol>
                  <m:ci>value</m:ci>
                  <drox:ns>arguments.length</drox:ns>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>replaceWith</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>isFunc</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.isFunction</drox:ns>
                    <m:ci>value</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>isFunc</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>value</m:ci>
                    </m:apply>
                    <m:cs>string</m:cs>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>value</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:ci>value</m:ci>
                            </m:apply>
                            <m:ci>not</m:ci>
                          </m:apply>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                        <m:ci>detach</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>domManip</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:ci>value</m:ci>
                  </m:apply>
                  <m:csymbol cd="logic1">true</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>next</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>nextSibling</m:ci>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>parent</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>parentNode</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>parent</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>remove</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <drox:ns>parent.insertBefore</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:ci>next</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>detach</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>remove</m:ci>
                  </m:apply>
                  <m:ci>selector</m:ci>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>domManip</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>args</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>table</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>args</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>core_concat.apply</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                  <m:ci>args</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>first</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>node</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hasScripts</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>scripts</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>doc</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fragment</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>l</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>set</m:ci>
                  </drox:dt>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>iNoClone</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith1">minus</m:csymbol>
                    <m:ci>l</m:ci>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>value</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>args</m:ci>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>isFunction</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.isFunction</drox:ns>
                    <m:ci>value</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>each</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>index</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>self</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>set.eq</drox:ns>
                              <m:ci>index</m:ci>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>isFunction</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>args</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>value.call</drox:ns>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>index</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:ci>table</m:ci>
                                  <m:apply>
                                    <drox:ns>self.html</drox:ns>
                                  </m:apply>
                                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <drox:ns>self.domManip</drox:ns>
                          <m:ci>args</m:ci>
                          <m:ci>table</m:ci>
                          <m:ci>callback</m:ci>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>l</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>fragment</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.buildFragment</drox:ns>
                      <m:ci>args</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:ci>ownerDocument</m:ci>
                      </m:apply>
                      <m:csymbol cd="logic1">false</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>first</m:ci>
                    </drox:dt>
                    <drox:ns>fragment.firstChild</drox:ns>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>fragment.childNodes</drox:ns>
                        <m:ci>length</m:ci>
                      </m:apply>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>fragment</m:ci>
                        </drox:dt>
                        <m:ci>first</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>first</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>table</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>table</m:ci>
                          <m:apply>
                            <drox:ns>jQuery.nodeName</drox:ns>
                            <m:ci>first</m:ci>
                            <m:cs>tr</m:cs>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>scripts</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>jQuery.map</drox:ns>
                          <m:apply>
                            <m:ci>getAll</m:ci>
                            <m:ci>fragment</m:ci>
                            <m:cs>script</m:cs>
                          </m:apply>
                          <m:ci>disableScript</m:ci>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>hasScripts</m:ci>
                        </drox:dt>
                        <drox:ns>scripts.length</drox:ns>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">for</m:csymbol>
                        <m:csymbol cd="prog2">empty</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="relation1">lt</m:csymbol>
                          <m:ci>i</m:ci>
                          <m:ci>l</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>node</m:ci>
                            </drox:dt>
                            <m:ci>fragment</m:ci>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>iNoClone</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>node</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <drox:ns>jQuery.clone</drox:ns>
                                  <m:ci>node</m:ci>
                                  <m:csymbol cd="logic1">true</m:csymbol>
                                  <m:csymbol cd="logic1">true</m:csymbol>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:ci>hasScripts</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>jQuery.merge</drox:ns>
                                    <m:ci>scripts</m:ci>
                                    <m:apply>
                                      <m:ci>getAll</m:ci>
                                      <m:ci>node</m:ci>
                                      <m:cs>script</m:cs>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <drox:ns>callback.call</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:ci>table</m:ci>
                                <m:apply>
                                  <drox:ns>jQuery.nodeName</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                  <m:cs>table</m:cs>
                                </m:apply>
                              </m:apply>
                              <m:apply>
                                <m:ci>findOrAppend</m:ci>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:cs>tbody</m:cs>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:ci>node</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>hasScripts</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>doc</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>scripts</m:ci>
                                <m:apply>
                                  <m:csymbol cd="arith1">minus</m:csymbol>
                                  <drox:ns>scripts.length</drox:ns>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                              </m:apply>
                              <m:ci>ownerDocument</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:apply>
                            <drox:ns>jQuery.map</drox:ns>
                            <m:ci>scripts</m:ci>
                            <m:ci>restoreScript</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">for</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>hasScripts</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>i</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>node</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>scripts</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <drox:ns>rscriptType.test</drox:ns>
                                      <m:apply>
                                        <m:csymbol cd="logic1">or</m:csymbol>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:apply>
                                        <drox:ns>jQuery._data</drox:ns>
                                        <m:ci>node</m:ci>
                                        <m:cs>globalEval</m:cs>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <drox:ns>jQuery.contains</drox:ns>
                                    <m:ci>doc</m:ci>
                                    <m:ci>node</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <drox:ns>node.src</drox:ns>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <drox:ns>jQuery.ajax</drox:ns>
                                        <drox:dl>
                                          <m:csymbol cd="ecmascript3">object</m:csymbol>
                                          <drox:di>
                                            <drox:dt>
                                              <m:ci>url</m:ci>
                                            </drox:dt>
                                            <drox:ns>node.src</drox:ns>
                                          </drox:di>
                                          <drox:di>
                                            <drox:dt>
                                              <m:ci>type</m:ci>
                                            </drox:dt>
                                            <m:cs>GET</m:cs>
                                          </drox:di>
                                          <drox:di>
                                            <drox:dt>
                                              <m:ci>dataType</m:ci>
                                            </drox:dt>
                                            <m:cs>script</m:cs>
                                          </drox:di>
                                          <drox:di>
                                            <drox:dt>
                                              <m:ci>async</m:ci>
                                            </drox:dt>
                                            <m:csymbol cd="logic1">false</m:csymbol>
                                          </drox:di>
                                          <drox:di>
                                            <drox:dt>
                                              <m:ci>global</m:ci>
                                            </drox:dt>
                                            <m:csymbol cd="logic1">false</m:csymbol>
                                          </drox:di>
                                          <drox:di>
                                            <drox:dt>
                                              <m:ci>throws</m:ci>
                                            </drox:dt>
                                            <m:csymbol cd="logic1">true</m:csymbol>
                                          </drox:di>
                                        </drox:dl>
                                      </m:apply>
                                    </m:apply>
                                    <drox:else>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <drox:ns>jQuery.globalEval</drox:ns>
                                          <m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="logic1">or</m:csymbol>
                                              </m:apply>
                                              <m:ci>replace</m:ci>
                                            </m:apply>
                                            <m:ci>rcleanScript</m:ci>
                                            <m:cs/>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </drox:else>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>fragment</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>first</m:ci>
                          </drox:dt>
                          <m:csymbol cd="prog2">null</m:csymbol>
                        </drox:dl>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>findOrAppend</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>tag</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>disableScript</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>attr</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>elem.getAttributeNode</drox:ns>
              <m:cs>type</m:cs>
            </m:apply>
          </drox:di>
        </drox:dl>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <drox:ns>elem.type</drox:ns>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="arith2">plus</m:csymbol>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>attr</m:ci>
                <drox:ns>attr.specified</drox:ns>
              </m:apply>
              <m:cs>/</m:cs>
            </m:apply>
            <drox:ns>elem.type</drox:ns>
          </m:apply>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>elem</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>restoreScript</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>match</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>rscriptTypeMasked.exec</drox:ns>
              <drox:ns>elem.type</drox:ns>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>match</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>elem.type</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>match</m:ci>
                <m:csymbol cd="alg1">one</m:csymbol>
              </m:apply>
            </drox:dl>
          </m:apply>
          <drox:else>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <drox:ns>elem.removeAttribute</drox:ns>
                <m:cs>type</m:cs>
              </m:apply>
            </m:apply>
          </drox:else>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>elem</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>setGlobalEval</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elems</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>refElements</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>elem</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <m:apply>
            <m:csymbol cd="relation1">neq</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>elem</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>elems</m:ci>
                <m:ci>i</m:ci>
              </m:apply>
            </drox:dl>
            <m:csymbol cd="prog2">null</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">post_increment</m:csymbol>
            <m:ci>i</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <drox:ns>jQuery._data</drox:ns>
              <m:ci>elem</m:ci>
              <m:cs>globalEval</m:cs>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>cloneCopyEvent</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>src</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>dest</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>type</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>l</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>oldData</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery._data</drox:ns>
              <m:ci>src</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>curData</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery._data</drox:ns>
              <m:ci>dest</m:ci>
              <m:ci>oldData</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>events</m:ci>
            </drox:dt>
            <drox:ns>oldData.events</drox:ns>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>events</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">delete</m:csymbol>
              <drox:ns>curData.handle</drox:ns>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>curData.events</drox:ns>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
              </drox:dl>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:ci>type</m:ci>
              <m:ci>events</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">for</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">begin</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>l</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>events</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                        <m:ci>length</m:ci>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="relation1">lt</m:csymbol>
                    <m:ci>i</m:ci>
                    <m:ci>l</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">post_increment</m:csymbol>
                    <m:ci>i</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.event</drox:ns>
                        <m:ci>add</m:ci>
                      </m:apply>
                      <m:ci>dest</m:ci>
                      <m:ci>type</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>events</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <drox:ns>curData.data</drox:ns>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>curData.data</drox:ns>
              </drox:dt>
              <m:apply>
                <drox:ns>jQuery.extend</drox:ns>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                </drox:dl>
                <drox:ns>curData.data</drox:ns>
              </m:apply>
            </drox:dl>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>fixCloneNodeIssues</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>src</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>dest</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>nodeName</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>e</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>data</m:ci>
            </drox:dt>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
            <drox:ns>dest.nodeType</drox:ns>
            <m:csymbol cd="alg1">one</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>nodeName</m:ci>
          </drox:dt>
          <m:apply>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>dest.nodeName</drox:ns>
              <m:ci>toLowerCase</m:ci>
            </m:apply>
          </m:apply>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.support</drox:ns>
                <m:ci>noCloneEvent</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>dest</m:ci>
              <drox:ns>jQuery.expando</drox:ns>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>data</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>jQuery._data</drox:ns>
                <m:ci>dest</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:ci>e</m:ci>
              <drox:ns>data.events</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.removeEvent</drox:ns>
                  <m:ci>dest</m:ci>
                  <m:ci>e</m:ci>
                  <drox:ns>data.handle</drox:ns>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <drox:ns>dest.removeAttribute</drox:ns>
              <drox:ns>jQuery.expando</drox:ns>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="switch2">cond</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>nodeName</m:ci>
                  <m:cs>script</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <drox:ns>dest.text</drox:ns>
                  <drox:ns>src.text</drox:ns>
                </m:apply>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:ci>disableScript</m:ci>
                    <m:ci>dest</m:ci>
                  </m:apply>
                  <m:ci>text</m:ci>
                </m:apply>
              </drox:dt>
              <drox:ns>src.text</drox:ns>
            </drox:dl>
            <m:apply>
              <m:ci>restoreScript</m:ci>
              <m:ci>dest</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>nodeName</m:ci>
                <m:cs>object</m:cs>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <drox:ns>dest.parentNode</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>dest.outerHTML</drox:ns>
                  </drox:dt>
                  <drox:ns>src.outerHTML</drox:ns>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.support</drox:ns>
                  <m:ci>html5Clone</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:ns>src.innerHTML</drox:ns>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.trim</drox:ns>
                      <drox:ns>dest.innerHTML</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>dest.innerHTML</drox:ns>
                  </drox:dt>
                  <drox:ns>src.innerHTML</drox:ns>
                </drox:dl>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>nodeName</m:ci>
                  <m:cs>input</m:cs>
                </m:apply>
                <m:apply>
                  <drox:ns>manipulation_rcheckableType.test</drox:ns>
                  <drox:ns>src.type</drox:ns>
                </m:apply>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>dest.defaultChecked</drox:ns>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>dest.checked</drox:ns>
                </drox:dt>
                <drox:ns>src.checked</drox:ns>
              </drox:dl>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <drox:ns>dest.value</drox:ns>
                <drox:ns>src.value</drox:ns>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>dest.value</drox:ns>
                  </drox:dt>
                  <drox:ns>src.value</drox:ns>
                </drox:dl>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>nodeName</m:ci>
                <m:cs>option</m:cs>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>dest.defaultSelected</drox:ns>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>dest.selected</drox:ns>
                </drox:dt>
                <drox:ns>src.defaultSelected</drox:ns>
              </drox:dl>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>dest.defaultValue</drox:ns>
              </drox:dt>
              <drox:ns>src.defaultValue</drox:ns>
            </drox:dl>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>appendTo</m:ci>
            </drox:dt>
            <m:cs>append</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prependTo</m:ci>
            </drox:dt>
            <m:cs>prepend</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>insertBefore</m:ci>
            </drox:dt>
            <m:cs>before</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>insertAfter</m:ci>
            </drox:dt>
            <m:cs>after</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>replaceAll</m:ci>
            </drox:dt>
            <m:cs>replaceWith</m:cs>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>original</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>selector</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elems</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>insert</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>jQuery</m:ci>
                    <m:ci>selector</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>last</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith1">minus</m:csymbol>
                    <drox:ns>insert.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">leq</m:csymbol>
                  <m:ci>i</m:ci>
                  <m:ci>last</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elems</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>i</m:ci>
                        <m:ci>last</m:ci>
                      </m:apply>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>clone</m:ci>
                        </m:apply>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:apply>
                        <m:ci>jQuery</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>insert</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:ci>original</m:ci>
                    </m:apply>
                    <m:ci>elems</m:ci>
                  </m:apply>
                  <m:apply>
                    <drox:ns>core_push.apply</drox:ns>
                    <m:ci>ret</m:ci>
                    <m:apply>
                      <drox:ns>elems.get</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>pushStack</m:ci>
                  </m:apply>
                  <m:ci>ret</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>getAll</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>context</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>tag</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>elems</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>elem</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>found</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <drox:ns>context.getElementsByTagName</drox:ns>
                </m:apply>
                <m:ci>core_strundefined</m:ci>
              </m:apply>
              <m:apply>
                <drox:ns>context.getElementsByTagName</drox:ns>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <drox:ns>context.querySelectorAll</drox:ns>
                  </m:apply>
                  <m:ci>core_strundefined</m:ci>
                </m:apply>
                <m:apply>
                  <drox:ns>context.querySelectorAll</drox:ns>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
              </m:apply>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:ci>found</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">begin</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>found</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>elems</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
              </m:apply>
              <m:apply>
                <m:csymbol cd="relation1">neq</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>elems</m:ci>
                    <m:ci>i</m:ci>
                  </m:apply>
                </drox:dl>
                <m:csymbol cd="prog2">null</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>found.push</drox:ns>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.merge</drox:ns>
                        <m:ci>found</m:ci>
                        <m:apply>
                          <m:ci>getAll</m:ci>
                          <m:ci>elem</m:ci>
                          <m:ci>tag</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">if_exp</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
            <m:apply>
              <drox:ns>jQuery.merge</drox:ns>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:ci>context</m:ci>
              </m:apply>
              <m:ci>found</m:ci>
            </m:apply>
            <m:ci>found</m:ci>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>fixDefaultChecked</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <drox:ns>manipulation_rcheckableType.test</drox:ns>
            <drox:ns>elem.type</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>elem.defaultChecked</drox:ns>
              </drox:dt>
              <drox:ns>elem.checked</drox:ns>
            </drox:dl>
          </m:apply>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>clone</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>dataAndEvents</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>deepDataAndEvents</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>destElements</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>node</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>clone</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>srcElements</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>inPage</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.contains</drox:ns>
                    <drox:ns>elem.ownerDocument</drox:ns>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>clone</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>elem.cloneNode</drox:ns>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>fragmentDiv.innerHTML</drox:ns>
                      </drox:dt>
                      <drox:ns>elem.outerHTML</drox:ns>
                    </drox:dl>
                    <m:apply>
                      <drox:ns>fragmentDiv.removeChild</drox:ns>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>clone</m:ci>
                        </drox:dt>
                        <drox:ns>fragmentDiv.firstChild</drox:ns>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.isXMLDoc</drox:ns>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>destElements</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:ci>getAll</m:ci>
                      <m:ci>clone</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>srcElements</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:ci>getAll</m:ci>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="relation1">neq</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>node</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>srcElements</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>destElements</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:ci>fixCloneNodeIssues</m:ci>
                            <m:ci>node</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>destElements</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>dataAndEvents</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>deepDataAndEvents</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>srcElements</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>destElements</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">for</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>i</m:ci>
                          </drox:dt>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="relation1">neq</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>node</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>srcElements</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:csymbol cd="prog2">null</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">post_increment</m:csymbol>
                          <m:ci>i</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:ci>cloneCopyEvent</m:ci>
                            <m:ci>node</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>destElements</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:else>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:ci>cloneCopyEvent</m:ci>
                          <m:ci>elem</m:ci>
                          <m:ci>clone</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:else>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>destElements</m:ci>
                </drox:dt>
                <m:apply>
                  <m:ci>getAll</m:ci>
                  <m:ci>clone</m:ci>
                  <m:cs>script</m:cs>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">gt</m:csymbol>
                  <drox:ns>destElements.length</drox:ns>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:ci>setGlobalEval</m:ci>
                    <m:ci>destElements</m:ci>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>inPage</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:ci>getAll</m:ci>
                        <m:ci>elem</m:ci>
                        <m:cs>script</m:cs>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>destElements</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>srcElements</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>node</m:ci>
                    </drox:dt>
                    <m:csymbol cd="prog2">null</m:csymbol>
                  </drox:dl>
                </drox:dl>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>clone</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>buildFragment</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elems</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>context</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>scripts</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>selection</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>j</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>contains</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tmp</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tag</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tbody</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>wrap</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>l</m:ci>
                  </drox:dt>
                  <drox:ns>elems.length</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>safe</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>createSafeFragment</m:ci>
                    <m:ci>context</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>nodes</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>i</m:ci>
                  <m:ci>l</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>elems</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="switch2">cond</m:csymbol>
                        <drox:di>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.type</drox:ns>
                                <m:ci>elem</m:ci>
                              </m:apply>
                              <m:cs>object</m:cs>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>jQuery.merge</drox:ns>
                            <m:ci>nodes</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <drox:ns>elem.nodeType</drox:ns>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">array</m:csymbol>
                                <m:ci>elem</m:ci>
                              </m:apply>
                              <m:ci>elem</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                        <drox:di>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:apply>
                                <drox:ns>rhtml.test</drox:ns>
                                <m:ci>elem</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>nodes.push</drox:ns>
                            <m:apply>
                              <drox:ns>context.createTextNode</drox:ns>
                              <m:ci>elem</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:di>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>tmp</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>tag</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:ci>toLowerCase</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>wrap</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>tmp.innerHTML</drox:ns>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>wrap</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <drox:ns>elem.replace</drox:ns>
                                <m:ci>rxhtmlTag</m:ci>
                                <m:cs>%3C$1%3E%3C/$2%3E</m:cs>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>wrap</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>j</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>wrap</m:ci>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">while</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">post_decrement</m:csymbol>
                            <m:ci>j</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>tmp</m:ci>
                              </drox:dt>
                              <drox:ns>tmp.lastChild</drox:ns>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <drox:ns>jQuery.support</drox:ns>
                                <m:ci>leadingWhitespace</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <drox:ns>rleadingWhitespace.test</drox:ns>
                              <m:ci>elem</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>nodes.push</drox:ns>
                              <m:apply>
                                <drox:ns>context.createTextNode</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:apply>
                                    <drox:ns>rleadingWhitespace.exec</drox:ns>
                                    <m:ci>elem</m:ci>
                                  </m:apply>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.support</drox:ns>
                              <m:ci>tbody</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>elem</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">if_exp</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                    <m:ci>tag</m:ci>
                                    <m:cs>table</m:cs>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <m:apply>
                                      <drox:ns>rtbody.test</drox:ns>
                                      <m:ci>elem</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <drox:ns>tmp.firstChild</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>wrap</m:ci>
                                        <m:csymbol cd="alg1">one</m:csymbol>
                                      </m:apply>
                                      <m:cs>%3Ctable%3E</m:cs>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:apply>
                                        <drox:ns>rtbody.test</drox:ns>
                                        <m:ci>elem</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <m:ci>tmp</m:ci>
                                  <m:csymbol cd="alg1">zero</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>j</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:ci>elem</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>elem.childNodes</drox:ns>
                                  <m:ci>length</m:ci>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">while</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                <m:ci>j</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <drox:ns>jQuery.nodeName</drox:ns>
                                      <drox:dl>
                                        <m:csymbol cd="prog1">assignment</m:csymbol>
                                        <drox:dt>
                                          <m:ci>tbody</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <drox:ns>elem.childNodes</drox:ns>
                                          <m:ci>j</m:ci>
                                        </m:apply>
                                      </drox:dl>
                                      <m:cs>tbody</m:cs>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <drox:ns>tbody.childNodes</drox:ns>
                                        <m:ci>length</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <drox:ns>elem.removeChild</drox:ns>
                                      <m:ci>tbody</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <drox:ns>jQuery.merge</drox:ns>
                          <m:ci>nodes</m:ci>
                          <drox:ns>tmp.childNodes</drox:ns>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>tmp.textContent</drox:ns>
                          </drox:dt>
                          <m:cs/>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">while</m:csymbol>
                          <drox:ns>tmp.firstChild</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>tmp.removeChild</drox:ns>
                              <drox:ns>tmp.firstChild</drox:ns>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>tmp</m:ci>
                          </drox:dt>
                          <drox:ns>safe.lastChild</drox:ns>
                        </drox:dl>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>tmp</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>safe.removeChild</drox:ns>
                    <m:ci>tmp</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.support</drox:ns>
                    <m:ci>appendChecked</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.grep</drox:ns>
                    <m:apply>
                      <m:ci>getAll</m:ci>
                      <m:ci>nodes</m:ci>
                      <m:cs>input</m:cs>
                    </m:apply>
                    <m:ci>fixDefaultChecked</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">while</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>nodes</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>selection</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.inArray</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:ci>selection</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="arith1">unary_minus</m:csymbol>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">continue</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>contains</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.contains</drox:ns>
                      <drox:ns>elem.ownerDocument</drox:ns>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>tmp</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:ci>getAll</m:ci>
                      <m:apply>
                        <drox:ns>safe.appendChild</drox:ns>
                        <m:ci>elem</m:ci>
                      </m:apply>
                      <m:cs>script</m:cs>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>contains</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:ci>setGlobalEval</m:ci>
                        <m:ci>tmp</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>scripts</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>j</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">while</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>elem</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>tmp</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>j</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <drox:ns>rscriptType.test</drox:ns>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>scripts.push</drox:ns>
                                <m:ci>elem</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>tmp</m:ci>
                </drox:dt>
                <m:csymbol cd="prog2">null</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>safe</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>cleanData</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elems</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>acceptData</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>id</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>data</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>internalKey</m:ci>
                  </drox:dt>
                  <drox:ns>jQuery.expando</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cache</m:ci>
                  </drox:dt>
                  <drox:ns>jQuery.cache</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>deleteExpando</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.support</drox:ns>
                    <m:ci>deleteExpando</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>special</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.event</drox:ns>
                    <m:ci>special</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>elem</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>elems</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>id</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>elem</m:ci>
                          <m:ci>internalKey</m:ci>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>id</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>cache</m:ci>
                            <m:ci>id</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>data</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:ns>data.events</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">for_each</m:csymbol>
                                <m:ci>type</m:ci>
                                <drox:ns>data.events</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>special</m:ci>
                                      <m:ci>type</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <m:apply>
                                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                          <drox:ns>jQuery.event</drox:ns>
                                          <m:ci>remove</m:ci>
                                        </m:apply>
                                        <m:ci>elem</m:ci>
                                        <m:ci>type</m:ci>
                                      </m:apply>
                                    </m:apply>
                                    <drox:else>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <drox:ns>jQuery.removeEvent</drox:ns>
                                          <m:ci>elem</m:ci>
                                          <m:ci>type</m:ci>
                                          <drox:ns>data.handle</drox:ns>
                                        </m:apply>
                                      </m:apply>
                                    </drox:else>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>cache</m:ci>
                              <m:ci>id</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">delete</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>cache</m:ci>
                                  <m:ci>id</m:ci>
                                </m:apply>
                              </m:apply>
                              <drox:dl>
                                <m:csymbol cd="switch2">cond</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>deleteExpando</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="prog2">delete</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>elem</m:ci>
                                      <m:ci>internalKey</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                        <drox:ns>elem.removeAttribute</drox:ns>
                                      </m:apply>
                                      <m:ci>core_strundefined</m:ci>
                                    </m:apply>
                                  </drox:dt>
                                  <m:apply>
                                    <drox:ns>elem.removeAttribute</drox:ns>
                                    <m:ci>internalKey</m:ci>
                                  </m:apply>
                                </drox:di>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>elem</m:ci>
                                      <m:ci>internalKey</m:ci>
                                    </m:apply>
                                  </drox:dt>
                                  <m:csymbol cd="prog2">null</m:csymbol>
                                </drox:dl>
                              </drox:dl>
                              <m:apply>
                                <drox:ns>core_deletedIds.push</drox:ns>
                                <m:ci>id</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>iframe</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>getStyles</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>curCSS</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>ralpha</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/alpha%5C(%5B%5E)%5D*%5C)/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>ropacity</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/opacity%5Cs*=%5Cs*(%5B%5E)%5D*)/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rposition</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(top%7Cright%7Cbottom%7Cleft)$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rdisplayswap</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(none%7Ctable(?!-c%5Bea%5D).+)/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rmargin</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5Emargin/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rnumsplit</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">new</m:csymbol>
            <m:ci>RegExp</m:ci>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>%5E(</m:cs>
                <m:ci>core_pnum</m:ci>
              </m:apply>
              <m:cs>)(.*)$</m:cs>
            </m:apply>
            <m:cs>i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rnumnonpx</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">new</m:csymbol>
            <m:ci>RegExp</m:ci>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>%5E(</m:cs>
                <m:ci>core_pnum</m:ci>
              </m:apply>
              <m:cs>)(?!px)%5Ba-z%25%5D+$</m:cs>
            </m:apply>
            <m:cs>i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rrelNum</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">new</m:csymbol>
            <m:ci>RegExp</m:ci>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>%5E(%5B+-%5D)=(</m:cs>
                <m:ci>core_pnum</m:ci>
              </m:apply>
              <m:cs>)</m:cs>
            </m:apply>
            <m:cs>i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>elemdisplay</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>BODY</m:ci>
              </drox:dt>
              <m:cs>block</m:cs>
            </drox:di>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>cssShow</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>position</m:ci>
              </drox:dt>
              <m:cs>absolute</m:cs>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>visibility</m:ci>
              </drox:dt>
              <m:cs>hidden</m:cs>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>display</m:ci>
              </drox:dt>
              <m:cs>block</m:cs>
            </drox:di>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>cssNormalTransform</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>letterSpacing</m:ci>
              </drox:dt>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>fontWeight</m:ci>
              </drox:dt>
              <m:cn>400</m:cn>
            </drox:di>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>cssExpand</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">array</m:csymbol>
            <m:cs>Top</m:cs>
            <m:cs>Right</m:cs>
            <m:cs>Bottom</m:cs>
            <m:cs>Left</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>cssPrefixes</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">array</m:csymbol>
            <m:cs>Webkit</m:cs>
            <m:cs>O</m:cs>
            <m:cs>Moz</m:cs>
            <m:cs>ms</m:cs>
          </m:apply>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>vendorPropName</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>style</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>name</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="ecmascript3">in</m:csymbol>
            <m:ci>name</m:ci>
            <m:ci>style</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:ci>name</m:ci>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>capName</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <drox:ns>name.charAt</drox:ns>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                  <m:ci>toUpperCase</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <drox:ns>name.slice</drox:ns>
                <m:csymbol cd="alg1">one</m:csymbol>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>origName</m:ci>
            </drox:dt>
            <m:ci>name</m:ci>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <drox:ns>cssPrefixes.length</drox:ns>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">while</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">post_decrement</m:csymbol>
            <m:ci>i</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>name</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>cssPrefixes</m:ci>
                  <m:ci>i</m:ci>
                </m:apply>
                <m:ci>capName</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">in</m:csymbol>
                <m:ci>name</m:ci>
                <m:ci>style</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>name</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>origName</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>isHidden</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>el</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>elem</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>showHide</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elements</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>show</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>display</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>elem</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hidden</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>values</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>index</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>length</m:ci>
            </drox:dt>
            <drox:ns>elements.length</drox:ns>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <m:apply>
            <m:csymbol cd="relation1">lt</m:csymbol>
            <m:ci>index</m:ci>
            <m:ci>length</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">post_increment</m:csymbol>
            <m:ci>index</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>elem</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>elements</m:ci>
                <m:ci>index</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <drox:ns>elem.style</drox:ns>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">continue</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>values</m:ci>
                  <m:ci>index</m:ci>
                </m:apply>
              </drox:dt>
              <m:apply>
                <drox:ns>jQuery._data</drox:ns>
                <m:ci>elem</m:ci>
                <m:cs>olddisplay</m:cs>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>display</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>elem.style</drox:ns>
                <m:ci>display</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>show</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>values</m:ci>
                        <m:ci>index</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:ci>display</m:ci>
                      <m:cs>none</m:cs>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>elem.style</drox:ns>
                          <m:ci>display</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:cs/>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>elem.style</drox:ns>
                        <m:ci>display</m:ci>
                      </m:apply>
                      <m:cs/>
                    </m:apply>
                    <m:apply>
                      <m:ci>isHidden</m:ci>
                      <m:ci>elem</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>values</m:ci>
                          <m:ci>index</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>jQuery._data</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:cs>olddisplay</m:cs>
                        <m:apply>
                          <m:ci>css_defaultDisplay</m:ci>
                          <drox:ns>elem.nodeName</drox:ns>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>values</m:ci>
                        <m:ci>index</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>hidden</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>isHidden</m:ci>
                          <m:ci>elem</m:ci>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery._data</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:cs>olddisplay</m:cs>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:ci>hidden</m:ci>
                              <m:ci>display</m:ci>
                              <m:apply>
                                <drox:ns>jQuery.css</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:cs>display</m:cs>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>index</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="relation1">lt</m:csymbol>
            <m:ci>index</m:ci>
            <m:ci>length</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">post_increment</m:csymbol>
            <m:ci>index</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>elem</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>elements</m:ci>
                <m:ci>index</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <drox:ns>elem.style</drox:ns>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">continue</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>elem.style</drox:ns>
                      <m:ci>display</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:ci>show</m:ci>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:cs>none</m:cs>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>elements</m:ci>
        </m:apply>
      </drox:dl>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>css</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>name</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>value</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>len</m:ci>
                        </drox:dt>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>styles</m:ci>
                        </drox:dt>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>map</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="ecmascript3">object</m:csymbol>
                        </drox:dl>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>i</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.isArray</drox:ns>
                        <m:ci>name</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>styles</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>getStyles</m:ci>
                            <m:ci>elem</m:ci>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>len</m:ci>
                          </drox:dt>
                          <drox:ns>name.length</drox:ns>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">for</m:csymbol>
                          <m:csymbol cd="prog2">empty</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">lt</m:csymbol>
                            <m:ci>i</m:ci>
                            <m:ci>len</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">post_increment</m:csymbol>
                            <m:ci>i</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>map</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>name</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>jQuery.css</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>name</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                                <m:csymbol cd="logic1">false</m:csymbol>
                                <m:ci>styles</m:ci>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>map</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <m:ci>value</m:ci>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <drox:ns>jQuery.style</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:ci>name</m:ci>
                          <m:ci>value</m:ci>
                        </m:apply>
                        <m:apply>
                          <drox:ns>jQuery.css</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:ci>name</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                  <m:ci>name</m:ci>
                  <m:ci>value</m:ci>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <drox:ns>arguments.length</drox:ns>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>show</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>showHide</m:ci>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:csymbol cd="logic1">true</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hide</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:ci>showHide</m:ci>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>toggle</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>state</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>bool</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>state</m:ci>
                    </m:apply>
                    <m:cs>boolean</m:cs>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>bool</m:ci>
                        <m:ci>state</m:ci>
                        <m:apply>
                          <m:ci>isHidden</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:ci>jQuery</m:ci>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:ci>show</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:ci>jQuery</m:ci>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                              </m:apply>
                              <m:ci>hide</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>cssHooks</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>opacity</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>computed</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>computed</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>ret</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:ci>curCSS</m:ci>
                                <m:ci>elem</m:ci>
                                <m:cs>opacity</m:cs>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:ci>ret</m:ci>
                                <m:cs/>
                              </m:apply>
                              <m:cs>1</m:cs>
                              <m:ci>ret</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>cssNumber</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>columnCount</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>fillOpacity</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>fontWeight</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>lineHeight</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>opacity</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>orphans</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>widows</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>zIndex</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>zoom</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>cssProps</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>float</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.support</drox:ns>
                    <m:ci>cssFloat</m:ci>
                  </m:apply>
                  <m:cs>cssFloat</m:cs>
                  <m:cs>styleFloat</m:cs>
                </m:apply>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>style</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>value</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>extra</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>origName</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.camelCase</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>style</m:ci>
                  </drox:dt>
                  <drox:ns>elem.style</drox:ns>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>name</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>hooks</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:ci>value</m:ci>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>value</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>type</m:ci>
                        <m:cs>string</m:cs>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>rrelNum.exec</drox:ns>
                          <m:ci>value</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>value</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith1">times</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>ret</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>ret</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">parseFloat</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.css</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>type</m:ci>
                        </drox:dt>
                        <m:cs>number</m:cs>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>type</m:ci>
                        <m:cs>number</m:cs>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>jQuery.cssNumber</drox:ns>
                          <m:ci>origName</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                        <drox:dt>
                          <m:ci>value</m:ci>
                        </drox:dt>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>px</m:cs>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>jQuery.support</drox:ns>
                            <m:ci>clearCloneStyle</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>value</m:ci>
                          <m:cs/>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <drox:ns>name.indexOf</drox:ns>
                          <m:cs>background</m:cs>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>style</m:ci>
                            <m:ci>name</m:ci>
                          </m:apply>
                        </drox:dt>
                        <m:cs>inherit</m:cs>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog2">try</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>style</m:ci>
                              <m:ci>name</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:ci>value</m:ci>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog2">catch</m:csymbol>
                          <m:bvar>
                            <m:ci>e</m:ci>
                          </m:bvar>
                        </drox:dl>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>hooks</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">in</m:csymbol>
                            <m:cs>get</m:cs>
                            <m:ci>hooks</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>ret</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>hooks.get</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:csymbol cd="logic1">false</m:csymbol>
                              <m:ci>extra</m:ci>
                            </m:apply>
                          </drox:dl>
                          <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:ci>ret</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>style</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>css</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>extra</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>styles</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>num</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>val</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>origName</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.camelCase</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>name</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>hooks</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>hooks</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">in</m:csymbol>
                    <m:cs>get</m:cs>
                    <m:ci>hooks</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>val</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>hooks.get</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:csymbol cd="logic1">true</m:csymbol>
                      <m:ci>extra</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>val</m:ci>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>val</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:ci>curCSS</m:ci>
                      <m:ci>elem</m:ci>
                      <m:ci>name</m:ci>
                      <m:ci>styles</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>val</m:ci>
                    <m:cs>normal</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">in</m:csymbol>
                    <m:ci>name</m:ci>
                    <m:ci>cssNormalTransform</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>val</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>cssNormalTransform</m:ci>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>num</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">parseFloat</m:csymbol>
                      <m:ci>val</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:ci>val</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>val</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>swap</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>options</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>args</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>name</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>old</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>name</m:ci>
                <m:ci>options</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>old</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>elem.style</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>elem.style</drox:ns>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>options</m:ci>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>ret</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>callback.apply</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>name</m:ci>
                <m:ci>options</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>elem.style</drox:ns>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>old</m:ci>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>ret</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="switch2">cond</m:csymbol>
        <drox:di>
          <drox:dt>
            <drox:ns>window.getComputedStyle</drox:ns>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>getStyles</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>window.getComputedStyle</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>curCSS</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>_computed</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>width</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>minWidth</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>maxWidth</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>computed</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:ci>computed</m:ci>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>style</m:ci>
                  </drox:dt>
                  <drox:ns>elem.style</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>computed</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>ret</m:ci>
                        <m:cs/>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.contains</drox:ns>
                          <drox:ns>elem.ownerDocument</drox:ns>
                          <m:ci>elem</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>jQuery.style</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:ci>name</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <drox:ns>rnumnonpx.test</drox:ns>
                        <m:ci>ret</m:ci>
                      </m:apply>
                      <m:apply>
                        <drox:ns>rmargin.test</drox:ns>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>width</m:ci>
                        </drox:dt>
                        <drox:ns>style.width</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>minWidth</m:ci>
                        </drox:dt>
                        <drox:ns>style.minWidth</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>maxWidth</m:ci>
                        </drox:dt>
                        <drox:ns>style.maxWidth</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>style.minWidth</drox:ns>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>style.maxWidth</drox:ns>
                          </drox:dt>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>style.width</drox:ns>
                            </drox:dt>
                            <m:ci>ret</m:ci>
                          </drox:dl>
                        </drox:dl>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>ret</m:ci>
                        </drox:dt>
                        <drox:ns>computed.width</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>style.width</drox:ns>
                        </drox:dt>
                        <m:ci>width</m:ci>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>style.minWidth</drox:ns>
                        </drox:dt>
                        <m:ci>minWidth</m:ci>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>style.maxWidth</drox:ns>
                        </drox:dt>
                        <m:ci>maxWidth</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>ret</m:ci>
              </m:apply>
            </m:bind>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>document.documentElement</drox:ns>
              <m:ci>currentStyle</m:ci>
            </m:apply>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>getStyles</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <drox:ns>elem.currentStyle</drox:ns>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>curCSS</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>name</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>_computed</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>left</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>rs</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>rsLeft</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>computed</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>ret</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:ci>computed</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>computed</m:ci>
                      <m:ci>name</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>style</m:ci>
                  </drox:dt>
                  <drox:ns>elem.style</drox:ns>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">eq</m:csymbol>
                      <m:ci>ret</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                    <m:ci>style</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>style</m:ci>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>ret</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>style</m:ci>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <drox:ns>rnumnonpx.test</drox:ns>
                    <m:ci>ret</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <drox:ns>rposition.test</drox:ns>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>left</m:ci>
                    </drox:dt>
                    <drox:ns>style.left</drox:ns>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>rs</m:ci>
                    </drox:dt>
                    <drox:ns>elem.runtimeStyle</drox:ns>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>rsLeft</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>rs</m:ci>
                      <drox:ns>rs.left</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>rsLeft</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>rs.left</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>elem.currentStyle</drox:ns>
                          <m:ci>left</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>style.left</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>name</m:ci>
                        <m:cs>fontSize</m:cs>
                      </m:apply>
                      <m:cs>1em</m:cs>
                      <m:ci>ret</m:ci>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>ret</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <drox:ns>style.pixelLeft</drox:ns>
                      <m:cs>px</m:cs>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>style.left</drox:ns>
                    </drox:dt>
                    <m:ci>left</m:ci>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>rsLeft</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>rs.left</drox:ns>
                        </drox:dt>
                        <m:ci>rsLeft</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>ret</m:ci>
                    <m:cs/>
                  </m:apply>
                  <m:cs>auto</m:cs>
                  <m:ci>ret</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>setPositiveNumber</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>value</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>subtract</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>matches</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>rnumsplit.exec</drox:ns>
              <m:ci>value</m:ci>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">if_exp</m:csymbol>
            <m:ci>matches</m:ci>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="minmax1">max</m:csymbol>
                <m:csymbol cd="alg1">zero</m:csymbol>
                <m:apply>
                  <m:csymbol cd="arith1">minus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>matches</m:ci>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </m:apply>
            <m:ci>value</m:ci>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>augmentWidthOrHeight</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>name</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>extra</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>isBorderBox</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>styles</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>extra</m:ci>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:ci>isBorderBox</m:ci>
                  <m:cs>border</m:cs>
                  <m:cs>content</m:cs>
                </m:apply>
              </m:apply>
              <m:cn>4</m:cn>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>name</m:ci>
                  <m:cs>width</m:cs>
                </m:apply>
                <m:csymbol cd="alg1">one</m:csymbol>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>val</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <m:apply>
            <m:csymbol cd="relation1">lt</m:csymbol>
            <m:ci>i</m:ci>
            <m:cn>4</m:cn>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog2">assignment_operator</m:csymbol>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:csymbol cd="arith2">plus</m:csymbol>
            <m:cn>2</m:cn>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>extra</m:ci>
                <m:cs>margin</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                  <drox:dt>
                    <m:ci>val</m:ci>
                  </drox:dt>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:ci>extra</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>cssExpand</m:ci>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:csymbol cd="logic1">true</m:csymbol>
                    <m:ci>styles</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>isBorderBox</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>extra</m:ci>
                    <m:cs>content</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                      <drox:dt>
                        <m:ci>val</m:ci>
                      </drox:dt>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.css</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:cs>padding</m:cs>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>cssExpand</m:ci>
                            <m:ci>i</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:csymbol cd="logic1">true</m:csymbol>
                        <m:ci>styles</m:ci>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:ci>extra</m:ci>
                    <m:cs>margin</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                      <drox:dt>
                        <m:ci>val</m:ci>
                      </drox:dt>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.css</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:cs>border</m:cs>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>cssExpand</m:ci>
                              <m:ci>i</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:cs>Width</m:cs>
                        </m:apply>
                        <m:csymbol cd="logic1">true</m:csymbol>
                        <m:ci>styles</m:ci>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                    <drox:dt>
                      <m:ci>val</m:ci>
                    </drox:dt>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.css</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>padding</m:cs>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>cssExpand</m:ci>
                          <m:ci>i</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:csymbol cd="logic1">true</m:csymbol>
                      <m:ci>styles</m:ci>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>extra</m:ci>
                      <m:cs>padding</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                        <drox:dt>
                          <m:ci>val</m:ci>
                        </drox:dt>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.css</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cs>border</m:cs>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>cssExpand</m:ci>
                                <m:ci>i</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:cs>Width</m:cs>
                          </m:apply>
                          <m:csymbol cd="logic1">true</m:csymbol>
                          <m:ci>styles</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>val</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>getWidthOrHeight</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>name</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>extra</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>valueIsBorderBox</m:ci>
            </drox:dt>
            <m:csymbol cd="logic1">true</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>val</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>name</m:ci>
                <m:cs>width</m:cs>
              </m:apply>
              <drox:ns>elem.offsetWidth</drox:ns>
              <drox:ns>elem.offsetHeight</drox:ns>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>styles</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>getStyles</m:ci>
              <m:ci>elem</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>isBorderBox</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.support</drox:ns>
                <m:ci>boxSizing</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.css</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>boxSizing</m:cs>
                  <m:csymbol cd="logic1">false</m:csymbol>
                  <m:ci>styles</m:ci>
                </m:apply>
                <m:cs>border-box</m:cs>
              </m:apply>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>val</m:ci>
              </drox:dt>
              <m:apply>
                <m:ci>curCSS</m:ci>
                <m:ci>elem</m:ci>
                <m:ci>name</m:ci>
                <m:ci>styles</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>val</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>elem.style</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <drox:ns>rnumnonpx.test</drox:ns>
                <m:ci>val</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>val</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>valueIsBorderBox</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>isBorderBox</m:ci>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>val</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="arith2">plus</m:csymbol>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:ci>val</m:ci>
              <m:apply>
                <m:ci>augmentWidthOrHeight</m:ci>
                <m:ci>elem</m:ci>
                <m:ci>name</m:ci>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:ci>valueIsBorderBox</m:ci>
                <m:ci>styles</m:ci>
              </m:apply>
            </m:apply>
            <m:cs>px</m:cs>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>css_defaultDisplay</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>nodeName</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>doc</m:ci>
            </drox:dt>
            <m:ci>document</m:ci>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>display</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>elemdisplay</m:ci>
              <m:ci>nodeName</m:ci>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:ci>display</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>display</m:ci>
              </drox:dt>
              <m:apply>
                <m:ci>actualDisplay</m:ci>
                <m:ci>nodeName</m:ci>
                <m:ci>doc</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>iframe</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:ci>appendTo</m:ci>
                    </m:apply>
                    <drox:ns>doc.documentElement</drox:ns>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>doc</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>document</m:ci>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <drox:ns>doc.write</drox:ns>
                  <m:cs>%3C!doctype%20html%3E%3Chtml%3E%3Cbody%3E</m:cs>
                </m:apply>
                <m:apply>
                  <drox:ns>doc.close</drox:ns>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>display</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>actualDisplay</m:ci>
                    <m:ci>nodeName</m:ci>
                    <m:ci>doc</m:ci>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <drox:ns>iframe.detach</drox:ns>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>elemdisplay</m:ci>
                  <m:ci>nodeName</m:ci>
                </m:apply>
              </drox:dt>
              <m:ci>display</m:ci>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>display</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>actualDisplay</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>name</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>doc</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>elem</m:ci>
            </drox:dt>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:ci>jQuery</m:ci>
                  <m:apply>
                    <drox:ns>doc.createElement</drox:ns>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
                <m:ci>appendTo</m:ci>
              </m:apply>
              <drox:ns>doc.body</drox:ns>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>display</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.css</drox:ns>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>elem</m:ci>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
              <m:cs>display</m:cs>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <drox:ns>elem.remove</drox:ns>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>display</m:ci>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:csymbol cd="ecmascript3">array</m:csymbol>
          <m:cs>height</m:cs>
          <m:cs>width</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>i</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.cssHooks</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>get</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>computed</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>extra</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>computed</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <drox:ns>elem.offsetWidth</drox:ns>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <drox:ns>rdisplayswap.test</drox:ns>
                              <m:apply>
                                <drox:ns>jQuery.css</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:cs>display</m:cs>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <drox:ns>jQuery.swap</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:ci>cssShow</m:ci>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:ci>getWidthOrHeight</m:ci>
                                  <m:ci>elem</m:ci>
                                  <m:ci>name</m:ci>
                                  <m:ci>extra</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </m:apply>
                          <m:apply>
                            <m:ci>getWidthOrHeight</m:ci>
                            <m:ci>elem</m:ci>
                            <m:ci>name</m:ci>
                            <m:ci>extra</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>set</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>extra</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>styles</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:ci>extra</m:ci>
                        <m:apply>
                          <m:ci>getStyles</m:ci>
                          <m:ci>elem</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:ci>setPositiveNumber</m:ci>
                      <m:ci>elem</m:ci>
                      <m:ci>value</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>extra</m:ci>
                        <m:apply>
                          <m:ci>augmentWidthOrHeight</m:ci>
                          <m:ci>elem</m:ci>
                          <m:ci>name</m:ci>
                          <m:ci>extra</m:ci>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>jQuery.support</drox:ns>
                              <m:ci>boxSizing</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.css</drox:ns>
                                <m:ci>elem</m:ci>
                                <m:cs>boxSizing</m:cs>
                                <m:csymbol cd="logic1">false</m:csymbol>
                                <m:ci>styles</m:ci>
                              </m:apply>
                              <m:cs>border-box</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:ci>styles</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:bind>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">not</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>opacity</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.cssHooks</drox:ns>
                <m:ci>opacity</m:ci>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>get</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>computed</m:ci>
                  </m:bvar>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <drox:ns>ropacity.test</drox:ns>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith1">times</m:csymbol>
                          <m:cn>0.01</m:cn>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">parseFloat</m:csymbol>
                            <drox:ns>RegExp.$1</drox:ns>
                          </m:apply>
                        </m:apply>
                        <m:cs/>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>computed</m:ci>
                        <m:cs>1</m:cs>
                        <m:cs/>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>set</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>elem</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>style</m:ci>
                      </drox:dt>
                      <drox:ns>elem.style</drox:ns>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>currentStyle</m:ci>
                      </drox:dt>
                      <drox:ns>elem.currentStyle</drox:ns>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>opacity</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.isNumeric</drox:ns>
                          <m:ci>value</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:cs>alpha(opacity=</m:cs>
                            <m:apply>
                              <m:csymbol cd="arith1">times</m:csymbol>
                              <m:ci>value</m:ci>
                              <m:cn>100</m:cn>
                            </m:apply>
                          </m:apply>
                          <m:cs>)</m:cs>
                        </m:apply>
                        <m:cs/>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>filter</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>style.zoom</drox:ns>
                    </drox:dt>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.trim</drox:ns>
                            <m:apply>
                              <drox:ns>filter.replace</drox:ns>
                              <m:ci>ralpha</m:ci>
                              <m:cs/>
                            </m:apply>
                          </m:apply>
                          <m:cs/>
                        </m:apply>
                      </m:apply>
                      <drox:ns>style.removeAttribute</drox:ns>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>style.removeAttribute</drox:ns>
                        <m:cs>filter</m:cs>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>style.filter</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <drox:ns>ralpha.test</drox:ns>
                        <m:ci>filter</m:ci>
                      </m:apply>
                      <m:apply>
                        <drox:ns>filter.replace</drox:ns>
                        <m:ci>ralpha</m:ci>
                        <m:ci>opacity</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>filter</m:ci>
                          <m:cs>%20</m:cs>
                        </m:apply>
                        <m:ci>opacity</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <m:ci>jQuery</m:ci>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.support</drox:ns>
                <m:ci>reliableMarginRight</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.cssHooks</drox:ns>
                    <m:ci>marginRight</m:ci>
                  </m:apply>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>get</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>elem</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>computed</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>computed</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">return</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.swap</drox:ns>
                              <m:ci>elem</m:ci>
                              <drox:dl>
                                <m:csymbol cd="ecmascript3">object</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>display</m:ci>
                                  </drox:dt>
                                  <m:cs>inline-block</m:cs>
                                </drox:di>
                              </drox:dl>
                              <m:ci>curCSS</m:ci>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">array</m:csymbol>
                                <m:ci>elem</m:ci>
                                <m:cs>marginRight</m:cs>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </drox:dl>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.support</drox:ns>
                  <m:ci>pixelPosition</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>position</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.each</drox:ns>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                  <m:cs>top</m:cs>
                  <m:cs>left</m:cs>
                </m:apply>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>i</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>prop</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>jQuery.cssHooks</drox:ns>
                        <m:ci>prop</m:ci>
                      </m:apply>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>get</m:ci>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>elem</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>computed</m:ci>
                          </m:bvar>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>computed</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>computed</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:ci>curCSS</m:ci>
                                  <m:ci>elem</m:ci>
                                  <m:ci>prop</m:ci>
                                </m:apply>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">return</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <drox:ns>rnumnonpx.test</drox:ns>
                                    <m:ci>computed</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:apply>
                                        <m:apply>
                                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                          <m:apply>
                                            <m:ci>jQuery</m:ci>
                                            <m:ci>elem</m:ci>
                                          </m:apply>
                                          <m:ci>position</m:ci>
                                        </m:apply>
                                      </m:apply>
                                      <m:ci>prop</m:ci>
                                    </m:apply>
                                    <m:cs>px</m:cs>
                                  </m:apply>
                                  <m:ci>computed</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </drox:di>
                    </drox:dl>
                  </drox:dl>
                </m:bind>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:bind>
      </m:apply>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">and</m:csymbol>
          <drox:ns>jQuery.expr</drox:ns>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.expr</drox:ns>
            <m:ci>filters</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.expr</drox:ns>
                  <m:ci>filters</m:ci>
                </m:apply>
                <m:ci>hidden</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.expr</drox:ns>
                  <m:ci>filters</m:ci>
                </m:apply>
                <m:ci>visible</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>jQuery.expr</drox:ns>
                        <m:ci>filters</m:ci>
                      </m:apply>
                      <m:ci>hidden</m:ci>
                    </m:apply>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:apply>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>margin</m:ci>
            </drox:dt>
            <m:cs/>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>padding</m:ci>
            </drox:dt>
            <m:cs/>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>border</m:ci>
            </drox:dt>
            <m:cs>Width</m:cs>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>prefix</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>suffix</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.cssHooks</drox:ns>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:ci>prefix</m:ci>
                  <m:ci>suffix</m:ci>
                </m:apply>
              </m:apply>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>expand</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>i</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>expanded</m:ci>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                      </drox:dl>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>parts</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                            <m:ci>value</m:ci>
                          </m:apply>
                          <m:cs>string</m:cs>
                        </m:apply>
                        <m:apply>
                          <drox:ns>value.split</drox:ns>
                          <m:cs>%20</m:cs>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                          <m:ci>value</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">for</m:csymbol>
                    <m:csymbol cd="prog2">empty</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">lt</m:csymbol>
                      <m:ci>i</m:ci>
                      <m:cn>4</m:cn>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>expanded</m:ci>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:ci>prefix</m:ci>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>cssExpand</m:ci>
                                  <m:ci>i</m:ci>
                                </m:apply>
                              </m:apply>
                              <m:ci>suffix</m:ci>
                            </m:apply>
                          </m:apply>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>expanded</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:apply>
                <drox:ns>rmargin.test</drox:ns>
                <m:ci>prefix</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>jQuery.cssHooks</drox:ns>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>prefix</m:ci>
                        <m:ci>suffix</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>set</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>setPositiveNumber</m:ci>
              </drox:dl>
            </m:apply>
          </m:apply>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>r20</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%2520/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rbracket</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5C%5B%5C%5D$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rCRLF</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5Cr?%5Cn/g</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rsubmitterTypes</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:submit%7Cbutton%7Cimage%7Creset%7Cfile)$/i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rsubmittable</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:input%7Cselect%7Ctextarea%7Ckeygen)/i</m:cs>
          </m:apply>
        </drox:di>
      </drox:dl>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>serialize</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.param</drox:ns>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>serializeArray</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>serializeArray</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:csymbol cd="ecmascript3">this</m:csymbol>
                                <m:ci>map</m:ci>
                              </m:apply>
                              <m:bind>
                                <m:csymbol cd="fns1">lambda</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">local_var</m:csymbol>
                                  <drox:di>
                                    <drox:dt>
                                      <m:ci>elements</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <drox:ns>jQuery.prop</drox:ns>
                                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                                      <m:cs>elements</m:cs>
                                    </m:apply>
                                  </drox:di>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">return</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                                    <m:ci>elements</m:ci>
                                    <m:apply>
                                      <drox:ns>jQuery.makeArray</drox:ns>
                                      <m:ci>elements</m:ci>
                                    </m:apply>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                  </m:apply>
                                </m:apply>
                              </m:bind>
                            </m:apply>
                            <m:ci>filter</m:ci>
                          </m:apply>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">local_var</m:csymbol>
                              <drox:di>
                                <drox:dt>
                                  <m:ci>type</m:ci>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                  <m:ci>type</m:ci>
                                </m:apply>
                              </drox:di>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">and</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">and</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:ci>name</m:ci>
                                      </m:apply>
                                      <m:apply>
                                        <m:csymbol cd="logic1">not</m:csymbol>
                                        <m:apply>
                                          <m:apply>
                                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                            <m:apply>
                                              <m:ci>jQuery</m:ci>
                                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                                            </m:apply>
                                            <m:ci>is</m:ci>
                                          </m:apply>
                                          <m:cs>:disabled</m:cs>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <drox:ns>rsubmittable.test</drox:ns>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                                        <m:ci>nodeName</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <m:apply>
                                      <drox:ns>rsubmitterTypes.test</drox:ns>
                                      <m:ci>type</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:bind>
                        </m:apply>
                        <m:ci>map</m:ci>
                      </m:apply>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>i</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>val</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:ci>jQuery</m:ci>
                                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                                </m:apply>
                                <m:ci>val</m:ci>
                              </m:apply>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">eq</m:csymbol>
                              <m:ci>val</m:ci>
                              <m:csymbol cd="prog2">null</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="prog2">null</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <drox:ns>jQuery.isArray</drox:ns>
                                <m:ci>val</m:ci>
                              </m:apply>
                              <m:apply>
                                <drox:ns>jQuery.map</drox:ns>
                                <m:ci>val</m:ci>
                                <m:bind>
                                  <m:csymbol cd="fns1">lambda</m:csymbol>
                                  <m:bvar>
                                    <m:ci>val</m:ci>
                                  </m:bvar>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>name</m:ci>
                                        </drox:dt>
                                        <drox:ns>elem.name</drox:ns>
                                      </drox:di>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>value</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <drox:ns>val.replace</drox:ns>
                                          <m:ci>rCRLF</m:ci>
                                          <m:cs>%0D%0A</m:cs>
                                        </m:apply>
                                      </drox:di>
                                    </drox:dl>
                                  </m:apply>
                                </m:bind>
                              </m:apply>
                              <drox:dl>
                                <m:csymbol cd="ecmascript3">object</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>name</m:ci>
                                  </drox:dt>
                                  <drox:ns>elem.name</drox:ns>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>value</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <drox:ns>val.replace</drox:ns>
                                    <m:ci>rCRLF</m:ci>
                                    <m:cs>%0D%0A</m:cs>
                                  </m:apply>
                                </drox:di>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </m:apply>
                    <m:ci>get</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.param</drox:ns>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>a</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>traditional</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>prefix</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>s</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>add</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>key</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>value</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>value</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.isFunction</drox:ns>
                      <m:ci>value</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:ci>value</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">eq</m:csymbol>
                        <m:ci>value</m:ci>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                      <m:cs/>
                      <m:ci>value</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>s</m:ci>
                      <drox:ns>s.length</drox:ns>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">encodeURIComponent</m:csymbol>
                        <m:ci>key</m:ci>
                      </m:apply>
                      <m:cs>=</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">encodeURIComponent</m:csymbol>
                      <m:ci>value</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:dl>
              </m:bind>
            </drox:di>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <m:ci>traditional</m:ci>
              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>traditional</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:ns>jQuery.ajaxSettings</drox:ns>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.ajaxSettings</drox:ns>
                    <m:ci>traditional</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.each</drox:ns>
                <m:ci>a</m:ci>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:ci>add</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>name</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>value</m:ci>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </m:apply>
            </m:apply>
            <drox:else>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">for_each</m:csymbol>
                  <m:ci>prefix</m:ci>
                  <m:ci>a</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:ci>buildParams</m:ci>
                      <m:ci>prefix</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>a</m:ci>
                        <m:ci>prefix</m:ci>
                      </m:apply>
                      <m:ci>traditional</m:ci>
                      <m:ci>add</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </drox:else>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <drox:ns>s.join</drox:ns>
                  <m:cs>&amp;</m:cs>
                </m:apply>
                <m:ci>replace</m:ci>
              </m:apply>
              <m:ci>r20</m:ci>
              <m:cs>+</m:cs>
            </m:apply>
          </m:apply>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>buildParams</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>prefix</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>obj</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>traditional</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>add</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>name</m:ci>
            </drox:dt>
          </drox:di>
        </drox:dl>
        <drox:dl>
          <m:csymbol cd="switch2">cond</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:apply>
                <drox:ns>jQuery.isArray</drox:ns>
                <m:ci>obj</m:ci>
              </m:apply>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.each</drox:ns>
              <m:ci>obj</m:ci>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>i</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>v</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:ci>add</m:ci>
                      <m:ci>prefix</m:ci>
                      <m:ci>v</m:ci>
                    </m:apply>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:ci>buildParams</m:ci>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:ci>prefix</m:ci>
                              <m:cs>%5B</m:cs>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                  <m:ci>v</m:ci>
                                </m:apply>
                                <m:cs>object</m:cs>
                              </m:apply>
                              <m:ci>i</m:ci>
                              <m:cs/>
                            </m:apply>
                          </m:apply>
                          <m:cs>%5D</m:cs>
                        </m:apply>
                        <m:ci>v</m:ci>
                        <m:ci>traditional</m:ci>
                        <m:ci>add</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
              </m:bind>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>traditional</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.type</drox:ns>
                    <m:ci>obj</m:ci>
                  </m:apply>
                  <m:cs>object</m:cs>
                </m:apply>
              </m:apply>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:ci>name</m:ci>
              <m:ci>obj</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:ci>buildParams</m:ci>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:ci>prefix</m:ci>
                        <m:cs>%5B</m:cs>
                      </m:apply>
                      <m:ci>name</m:ci>
                    </m:apply>
                    <m:cs>%5D</m:cs>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>obj</m:ci>
                    <m:ci>name</m:ci>
                  </m:apply>
                  <m:ci>traditional</m:ci>
                  <m:ci>add</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </drox:di>
          <m:apply>
            <m:ci>add</m:ci>
            <m:ci>prefix</m:ci>
            <m:ci>obj</m:ci>
          </m:apply>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>blur%20focus%20focusin%20focusout%20load%20resize%20scroll%20unload%20click%20dblclick%20</m:cs>
                <m:cs>mousedown%20mouseup%20mousemove%20mouseover%20mouseout%20mouseenter%20mouseleave%20</m:cs>
              </m:apply>
              <m:cs>change%20select%20submit%20keydown%20keypress%20keyup%20error%20contextmenu</m:cs>
            </m:apply>
            <m:ci>split</m:ci>
          </m:apply>
          <m:cs>%20</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>i</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">gt</m:csymbol>
                    <drox:ns>arguments.length</drox:ns>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>on</m:ci>
                    </m:apply>
                    <m:ci>name</m:ci>
                    <m:csymbol cd="prog2">null</m:csymbol>
                    <m:ci>data</m:ci>
                    <m:ci>fn</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>trigger</m:ci>
                    </m:apply>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fn</drox:ns>
            <m:ci>hover</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>fnOver</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>fnOut</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>mouseenter</m:ci>
                  </m:apply>
                  <m:ci>fnOver</m:ci>
                </m:apply>
                <m:ci>mouseleave</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>ajaxLocParts</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>ajaxLocation</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>ajax_nonce</m:ci>
          </drox:dt>
          <m:apply>
            <drox:ns>jQuery.now</drox:ns>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>ajax_rquery</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5C?/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rhash</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/#.*$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rts</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/(%5B?&amp;%5D)_=%5B%5E&amp;%5D*/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rheaders</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(.*?):%5B%20%5Ct%5D*(%5B%5E%5Cr%5Cn%5D*)%5Cr?$/mg</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rlocalProtocol</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:about%7Capp%7Capp-storage%7C.+-extension%7Cfile%7Cres%7Cwidget):$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rnoContent</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:GET%7CHEAD)$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rprotocol</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E%5C/%5C//</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rurl</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(%5B%5Cw.+-%5D+:)(?:%5C/%5C/(%5B%5E%5C/?#:%5D*)(?::(%5Cd+)%7C)%7C)/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>_load</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fn</drox:ns>
            <m:ci>load</m:ci>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>prefilters</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>transports</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
          </drox:dl>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>allTypes</m:ci>
          </drox:dt>
          <m:apply>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <m:cs>*/</m:cs>
              <m:ci>concat</m:ci>
            </m:apply>
            <m:cs>*</m:cs>
          </m:apply>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog2">try</m:csymbol>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>ajaxLocation</m:ci>
          </drox:dt>
          <drox:ns>location.href</drox:ns>
        </drox:dl>
        <drox:dl>
          <m:csymbol cd="prog2">catch</m:csymbol>
          <m:bvar>
            <m:ci>e</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>ajaxLocation</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>document.createElement</drox:ns>
              <m:cs>a</m:cs>
            </m:apply>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>ajaxLocation.href</drox:ns>
            </drox:dt>
            <m:cs/>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>ajaxLocation</m:ci>
            </drox:dt>
            <drox:ns>ajaxLocation.href</drox:ns>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:ci>ajaxLocParts</m:ci>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="logic1">or</m:csymbol>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>addToPrefiltersOrTransports</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>structure</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>dataTypeExpression</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>func</m:ci>
            </m:bvar>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <m:ci>dataTypeExpression</m:ci>
                </m:apply>
                <m:cs>string</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>func</m:ci>
                  </drox:dt>
                  <m:ci>dataTypeExpression</m:ci>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>dataTypeExpression</m:ci>
                  </drox:dt>
                  <m:cs>*</m:cs>
                </drox:dl>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>dataType</m:ci>
                </drox:dt>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>i</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>dataTypes</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.isFunction</drox:ns>
                <m:ci>func</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">while</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>dataType</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>dataTypes</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>dataType</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:cs>+</m:cs>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>dataType</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>structure</m:ci>
                                  <m:ci>dataType</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </drox:dl>
                            <m:ci>unshift</m:ci>
                          </m:apply>
                          <m:ci>func</m:ci>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>structure</m:ci>
                                    <m:ci>dataType</m:ci>
                                  </m:apply>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </drox:dl>
                              <m:ci>push</m:ci>
                            </m:apply>
                            <m:ci>func</m:ci>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:bind>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>inspectPrefiltersOrTransports</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>structure</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>options</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>originalOptions</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>jqXHR</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>inspected</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>seekingTransport</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <m:ci>structure</m:ci>
              <m:ci>transports</m:ci>
            </m:apply>
          </drox:di>
        </drox:dl>
        <drox:dl>
          <m:csymbol cd="ecmascript3">function</m:csymbol>
          <drox:dt>
            <m:ci>inspect</m:ci>
          </drox:dt>
          <m:bvar>
            <m:ci>dataType</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>selected</m:ci>
              </drox:dt>
            </drox:di>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>inspected</m:ci>
                <m:ci>dataType</m:ci>
              </m:apply>
            </drox:dt>
            <m:csymbol cd="logic1">true</m:csymbol>
          </drox:dl>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>_</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>prefilterOrFactory</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>dataTypeOrTransport</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>prefilterOrFactory</m:ci>
                    <m:ci>options</m:ci>
                    <m:ci>originalOptions</m:ci>
                    <m:ci>jqXHR</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                            <m:ci>dataTypeOrTransport</m:ci>
                          </m:apply>
                          <m:cs>string</m:cs>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:ci>seekingTransport</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>inspected</m:ci>
                          <m:ci>dataTypeOrTransport</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>options.dataTypes</drox:ns>
                      <m:ci>unshift</m:ci>
                    </m:apply>
                    <m:ci>dataTypeOrTransport</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:ci>inspect</m:ci>
                    <m:ci>dataTypeOrTransport</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>seekingTransport</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>selected</m:ci>
                        </drox:dt>
                        <m:ci>dataTypeOrTransport</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
            </m:bind>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:ci>selected</m:ci>
          </m:apply>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">or</m:csymbol>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>ajaxExtend</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>target</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>src</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>deep</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>key</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>flatOptions</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog2">for_each</m:csymbol>
          <m:ci>key</m:ci>
          <m:ci>src</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>src</m:ci>
                  <m:ci>key</m:ci>
                </m:apply>
                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>flatOptions</m:ci>
                          <m:ci>key</m:ci>
                        </m:apply>
                        <m:ci>target</m:ci>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:ci>key</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>src</m:ci>
                    <m:ci>key</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>deep</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <drox:ns>jQuery.extend</drox:ns>
              <m:csymbol cd="logic1">true</m:csymbol>
              <m:ci>target</m:ci>
              <m:ci>deep</m:ci>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>target</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fn</drox:ns>
            <m:ci>load</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>url</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>params</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>callback</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                  <m:ci>url</m:ci>
                </m:apply>
                <m:cs>string</m:cs>
              </m:apply>
              <m:ci>_load</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>_load.apply</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>selector</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>response</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>type</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>self</m:ci>
              </drox:dt>
              <m:csymbol cd="ecmascript3">this</m:csymbol>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>off</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>url.indexOf</drox:ns>
                <m:cs>%20</m:cs>
              </m:apply>
            </drox:di>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">geq</m:csymbol>
              <m:ci>off</m:ci>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>selector</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>url.slice</drox:ns>
                  <m:ci>off</m:ci>
                  <drox:ns>url.length</drox:ns>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>url</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>url.slice</drox:ns>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                  <m:ci>off</m:ci>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="switch2">cond</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>params</m:ci>
                </m:apply>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>callback</m:ci>
                </drox:dt>
                <m:ci>params</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>params</m:ci>
                </drox:dt>
                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
              </drox:dl>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>params</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>params</m:ci>
                    </m:apply>
                    <m:cs>object</m:cs>
                  </m:apply>
                </m:apply>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
                <m:cs>POST</m:cs>
              </drox:dl>
            </drox:di>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">gt</m:csymbol>
              <drox:ns>self.length</drox:ns>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.ajax</drox:ns>
                        <drox:dl>
                          <m:csymbol cd="ecmascript3">object</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>url</m:ci>
                            </drox:dt>
                            <m:ci>url</m:ci>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>type</m:ci>
                            </drox:dt>
                            <m:ci>type</m:ci>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>dataType</m:ci>
                            </drox:dt>
                            <m:cs>html</m:cs>
                          </drox:di>
                          <drox:di>
                            <drox:dt>
                              <m:ci>data</m:ci>
                            </drox:dt>
                            <m:ci>params</m:ci>
                          </drox:di>
                        </drox:dl>
                      </m:apply>
                      <m:ci>done</m:ci>
                    </m:apply>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>responseText</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>response</m:ci>
                        </drox:dt>
                        <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>self.html</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>selector</m:ci>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:ci>jQuery</m:ci>
                                    <m:cs>%3Cdiv%3E</m:cs>
                                  </m:apply>
                                  <m:ci>append</m:ci>
                                </m:apply>
                                <m:apply>
                                  <drox:ns>jQuery.parseHTML</drox:ns>
                                  <m:ci>responseText</m:ci>
                                </m:apply>
                              </m:apply>
                              <m:ci>find</m:ci>
                            </m:apply>
                            <m:ci>selector</m:ci>
                          </m:apply>
                          <m:ci>responseText</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                  <m:ci>complete</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>callback</m:ci>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>jqXHR</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>status</m:ci>
                    </m:bvar>
                    <m:apply>
                      <drox:ns>self.each</drox:ns>
                      <m:ci>callback</m:ci>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:csymbol cd="ecmascript3">this</m:csymbol>
          </m:apply>
        </m:bind>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:csymbol cd="ecmascript3">array</m:csymbol>
          <m:cs>ajaxStart</m:cs>
          <m:cs>ajaxStop</m:cs>
          <m:cs>ajaxComplete</m:cs>
          <m:cs>ajaxError</m:cs>
          <m:cs>ajaxSuccess</m:cs>
          <m:cs>ajaxSend</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>i</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>type</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>type</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>fn</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>on</m:ci>
                  </m:apply>
                  <m:ci>type</m:ci>
                  <m:ci>fn</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:csymbol cd="ecmascript3">array</m:csymbol>
          <m:cs>get</m:cs>
          <m:cs>post</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>i</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>method</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>jQuery</m:ci>
                <m:ci>method</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>url</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>data</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>callback</m:ci>
                    </drox:dt>
                    <m:ci>data</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>data</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.ajax</drox:ns>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>url</m:ci>
                      </drox:dt>
                      <m:ci>url</m:ci>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>type</m:ci>
                      </drox:dt>
                      <m:ci>method</m:ci>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>dataType</m:ci>
                      </drox:dt>
                      <m:ci>type</m:ci>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>data</m:ci>
                      </drox:dt>
                      <m:ci>data</m:ci>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>success</m:ci>
                      </drox:dt>
                      <m:ci>callback</m:ci>
                    </drox:di>
                  </drox:dl>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.extend</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>active</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>lastModified</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>etag</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ajaxSettings</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>url</m:ci>
                </drox:dt>
                <m:ci>ajaxLocation</m:ci>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>type</m:ci>
                </drox:dt>
                <m:cs>GET</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>isLocal</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>rlocalProtocol.test</drox:ns>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>ajaxLocParts</m:ci>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>global</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>processData</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>async</m:ci>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>contentType</m:ci>
                </drox:dt>
                <m:cs>application/x-www-form-urlencoded;%20charset=UTF-8</m:cs>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>accepts</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>*</m:ci>
                    </drox:dt>
                    <m:ci>allTypes</m:ci>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>text</m:ci>
                    </drox:dt>
                    <m:cs>text/plain</m:cs>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>html</m:ci>
                    </drox:dt>
                    <m:cs>text/html</m:cs>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>xml</m:ci>
                    </drox:dt>
                    <m:cs>application/xml,%20text/xml</m:cs>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>json</m:ci>
                    </drox:dt>
                    <m:cs>application/json,%20text/javascript</m:cs>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>contents</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>xml</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                      <m:cs>/xml/</m:cs>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>html</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                      <m:cs>/html/</m:cs>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>json</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                      <m:cs>/json/</m:cs>
                    </m:apply>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>responseFields</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>xml</m:ci>
                    </drox:dt>
                    <m:cs>responseXML</m:cs>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>text</m:ci>
                    </drox:dt>
                    <m:cs>responseText</m:cs>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>converters</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>* text</m:ci>
                    </drox:dt>
                    <drox:ns>window.String</drox:ns>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>text html</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>text json</m:ci>
                    </drox:dt>
                    <drox:ns>jQuery.parseJSON</drox:ns>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>text xml</m:ci>
                    </drox:dt>
                    <drox:ns>jQuery.parseXML</drox:ns>
                  </drox:di>
                </drox:dl>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>flatOptions</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>url</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>context</m:ci>
                    </drox:dt>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </drox:di>
                </drox:dl>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ajaxSetup</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>target</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>settings</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:ci>settings</m:ci>
                  <m:apply>
                    <m:ci>ajaxExtend</m:ci>
                    <m:apply>
                      <m:ci>ajaxExtend</m:ci>
                      <m:ci>target</m:ci>
                      <drox:ns>jQuery.ajaxSettings</drox:ns>
                    </m:apply>
                    <m:ci>settings</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:ci>ajaxExtend</m:ci>
                    <drox:ns>jQuery.ajaxSettings</drox:ns>
                    <m:ci>target</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ajaxPrefilter</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>addToPrefiltersOrTransports</m:ci>
              <m:ci>prefilters</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ajaxTransport</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>addToPrefiltersOrTransports</m:ci>
              <m:ci>transports</m:ci>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ajax</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>url</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>options</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>url</m:ci>
                  </m:apply>
                  <m:cs>object</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>options</m:ci>
                    </drox:dt>
                    <m:ci>url</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>url</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>options</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>parts</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>i</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>cacheURL</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>responseHeadersString</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>timeoutTimer</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>fireGlobals</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>transport</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>responseHeaders</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>s</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.ajaxSetup</drox:ns>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                    </drox:dl>
                    <m:ci>options</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>callbackContext</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>globalEventContext</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <drox:ns>s.context</drox:ns>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:ci>jQuery</m:ci>
                      <m:ci>callbackContext</m:ci>
                    </m:apply>
                    <drox:ns>jQuery.event</drox:ns>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>deferred</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.Deferred</drox:ns>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>completeDeferred</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.Callbacks</drox:ns>
                    <m:cs>once%20memory</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>statusCode</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>requestHeaders</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>requestHeadersNames</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>state</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>strAbort</m:ci>
                  </drox:dt>
                  <m:cs>canceled</m:cs>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>jqXHR</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>readyState</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>getResponseHeader</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>key</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>match</m:ci>
                            </drox:dt>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>state</m:ci>
                            <m:cn>2</m:cn>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:ci>responseHeaders</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>responseHeaders</m:ci>
                                  </drox:dt>
                                  <drox:dl>
                                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                                  </drox:dl>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">while</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:ci>match</m:ci>
                                    </drox:dt>
                                    <m:apply>
                                      <drox:ns>rheaders.exec</drox:ns>
                                      <m:ci>responseHeadersString</m:ci>
                                    </m:apply>
                                  </drox:dl>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>responseHeaders</m:ci>
                                          <m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:ci>match</m:ci>
                                                <m:csymbol cd="alg1">one</m:csymbol>
                                              </m:apply>
                                              <m:ci>toLowerCase</m:ci>
                                            </m:apply>
                                          </m:apply>
                                        </m:apply>
                                      </drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>match</m:ci>
                                        <m:cn>2</m:cn>
                                      </m:apply>
                                    </drox:dl>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>match</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>responseHeaders</m:ci>
                                <m:apply>
                                  <drox:ns>key.toLowerCase</drox:ns>
                                </m:apply>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">eq</m:csymbol>
                              <m:ci>match</m:ci>
                              <m:csymbol cd="prog2">null</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="prog2">null</m:csymbol>
                            <m:ci>match</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>getAllResponseHeaders</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>state</m:ci>
                              <m:cn>2</m:cn>
                            </m:apply>
                            <m:ci>responseHeadersString</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>setRequestHeader</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>name</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>value</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>lname</m:ci>
                            </drox:dt>
                            <m:apply>
                              <drox:ns>name.toLowerCase</drox:ns>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>state</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>name</m:ci>
                              </drox:dt>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>requestHeadersNames</m:ci>
                                    <m:ci>lname</m:ci>
                                  </m:apply>
                                </drox:dt>
                                <m:apply>
                                  <m:csymbol cd="logic1">or</m:csymbol>
                                </m:apply>
                              </drox:dl>
                            </drox:dl>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>requestHeaders</m:ci>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:ci>value</m:ci>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>overrideMimeType</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>type</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:ci>state</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <drox:ns>s.mimeType</drox:ns>
                              </drox:dt>
                              <m:ci>type</m:ci>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>statusCode</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>map</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>code</m:ci>
                            </drox:dt>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>map</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="relation1">lt</m:csymbol>
                                <m:ci>state</m:ci>
                                <m:cn>2</m:cn>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">for_each</m:csymbol>
                                  <m:ci>code</m:ci>
                                  <m:ci>map</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>statusCode</m:ci>
                                          <m:ci>code</m:ci>
                                        </m:apply>
                                      </drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>statusCode</m:ci>
                                          <m:ci>code</m:ci>
                                        </m:apply>
                                        <m:apply>
                                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                          <m:ci>map</m:ci>
                                          <m:ci>code</m:ci>
                                        </m:apply>
                                      </m:apply>
                                    </drox:dl>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                              <drox:else>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <drox:ns>jqXHR.always</drox:ns>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>map</m:ci>
                                      <drox:ns>jqXHR.status</drox:ns>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </drox:else>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>abort</m:ci>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>statusText</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>finalText</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>transport</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <drox:ns>transport.abort</drox:ns>
                              <m:ci>finalText</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:ci>done</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                          <m:ci>finalText</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:di>
                  </drox:dl>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <drox:ns>deferred.promise</drox:ns>
                      <m:ci>jqXHR</m:ci>
                    </m:apply>
                    <m:ci>complete</m:ci>
                  </m:apply>
                </drox:dt>
                <drox:ns>completeDeferred.add</drox:ns>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>jqXHR.success</drox:ns>
                </drox:dt>
                <drox:ns>jqXHR.done</drox:ns>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>jqXHR.error</drox:ns>
                </drox:dt>
                <drox:ns>jqXHR.fail</drox:ns>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.url</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                          <m:cs/>
                        </m:apply>
                        <m:ci>replace</m:ci>
                      </m:apply>
                      <m:ci>rhash</m:ci>
                      <m:cs/>
                    </m:apply>
                    <m:ci>replace</m:ci>
                  </m:apply>
                  <m:ci>rprotocol</m:ci>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>ajaxLocParts</m:ci>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:cs>//</m:cs>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.type</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.dataTypes</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">eq</m:csymbol>
                  <drox:ns>s.crossDomain</drox:ns>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>parts</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>rurl.exec</drox:ns>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>s.url</drox:ns>
                          <m:ci>toLowerCase</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>s.crossDomain</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>parts</m:ci>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <drox:ns>s.data</drox:ns>
                    <drox:ns>s.processData</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <drox:ns>s.data</drox:ns>
                    </m:apply>
                    <m:cs>string</m:cs>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>s.data</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.param</drox:ns>
                      <drox:ns>s.data</drox:ns>
                      <drox:ns>s.traditional</drox:ns>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:ci>inspectPrefiltersOrTransports</m:ci>
                <m:ci>prefilters</m:ci>
                <m:ci>s</m:ci>
                <m:ci>options</m:ci>
                <m:ci>jqXHR</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>state</m:ci>
                  <m:cn>2</m:cn>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>jqXHR</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>fireGlobals</m:ci>
                </drox:dt>
                <drox:ns>s.global</drox:ns>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>fireGlobals</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">post_increment</m:csymbol>
                      <drox:ns>jQuery.active</drox:ns>
                    </m:apply>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.event</drox:ns>
                      <m:ci>trigger</m:ci>
                    </m:apply>
                    <m:cs>ajaxStart</m:cs>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.type</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>s.type</drox:ns>
                    <m:ci>toUpperCase</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.hasContent</drox:ns>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <drox:ns>rnoContent.test</drox:ns>
                    <drox:ns>s.type</drox:ns>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>cacheURL</m:ci>
                </drox:dt>
                <drox:ns>s.url</drox:ns>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <drox:ns>s.hasContent</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <drox:ns>s.data</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>cacheURL</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                          <drox:dt>
                            <drox:ns>s.url</drox:ns>
                          </drox:dt>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <drox:ns>ajax_rquery.test</drox:ns>
                                <m:ci>cacheURL</m:ci>
                              </m:apply>
                              <m:cs>&amp;</m:cs>
                              <m:cs>?</m:cs>
                            </m:apply>
                            <drox:ns>s.data</drox:ns>
                          </m:apply>
                        </drox:dl>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog2">delete</m:csymbol>
                        <drox:ns>s.data</drox:ns>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                      <drox:ns>s.cache</drox:ns>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>s.url</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <drox:ns>rts.test</drox:ns>
                            <m:ci>cacheURL</m:ci>
                          </m:apply>
                          <m:apply>
                            <drox:ns>cacheURL.replace</drox:ns>
                            <m:ci>rts</m:ci>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:cs>$1_=</m:cs>
                              <m:apply>
                                <m:csymbol cd="prog2">post_increment</m:csymbol>
                                <m:ci>ajax_nonce</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="arith2">plus</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:ci>cacheURL</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                  <m:apply>
                                    <drox:ns>ajax_rquery.test</drox:ns>
                                    <m:ci>cacheURL</m:ci>
                                  </m:apply>
                                  <m:cs>&amp;</m:cs>
                                  <m:cs>?</m:cs>
                                </m:apply>
                              </m:apply>
                              <m:cs>_=</m:cs>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">post_increment</m:csymbol>
                              <m:ci>ajax_nonce</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:ns>s.ifModified</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>jQuery.lastModified</drox:ns>
                      <m:ci>cacheURL</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jqXHR.setRequestHeader</drox:ns>
                        <m:cs>If-Modified-Since</m:cs>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>jQuery.lastModified</drox:ns>
                          <m:ci>cacheURL</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>jQuery.etag</drox:ns>
                      <m:ci>cacheURL</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jqXHR.setRequestHeader</drox:ns>
                        <m:cs>If-None-Match</m:cs>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>jQuery.etag</drox:ns>
                          <m:ci>cacheURL</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>jqXHR.setRequestHeader</drox:ns>
                    <m:cs>Content-Type</m:cs>
                    <drox:ns>s.contentType</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <drox:ns>jqXHR.setRequestHeader</drox:ns>
                <m:cs>Accept</m:cs>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>s.dataTypes</drox:ns>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>s.accepts</drox:ns>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>s.dataTypes</drox:ns>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>s.accepts</drox:ns>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>s.dataTypes</drox:ns>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>s.dataTypes</drox:ns>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:cs>*</m:cs>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:cs>,%20</m:cs>
                          <m:ci>allTypes</m:ci>
                        </m:apply>
                        <m:cs>;%20q=0.01</m:cs>
                      </m:apply>
                      <m:cs/>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>s.accepts</drox:ns>
                    <m:cs>*</m:cs>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>i</m:ci>
                <drox:ns>s.headers</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>jqXHR.setRequestHeader</drox:ns>
                    <m:ci>i</m:ci>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <drox:ns>s.headers</drox:ns>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <drox:ns>s.beforeSend</drox:ns>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>jqXHR.abort</drox:ns>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>strAbort</m:ci>
                </drox:dt>
                <m:cs>abort</m:cs>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>i</m:ci>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>success</m:ci>
                    </drox:dt>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>error</m:ci>
                    </drox:dt>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>complete</m:ci>
                    </drox:dt>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>jqXHR</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>s</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>transport</m:ci>
                </drox:dt>
                <m:apply>
                  <m:ci>inspectPrefiltersOrTransports</m:ci>
                  <m:ci>transports</m:ci>
                  <m:ci>s</m:ci>
                  <m:ci>options</m:ci>
                  <m:ci>jqXHR</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:ci>transport</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:ci>done</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith1">unary_minus</m:csymbol>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </m:apply>
                    <m:cs>No%20Transport</m:cs>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>jqXHR.readyState</drox:ns>
                      </drox:dt>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>fireGlobals</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>globalEventContext.trigger</drox:ns>
                          <m:cs>ajaxSend</m:cs>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>jqXHR</m:ci>
                            <m:ci>s</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <drox:ns>s.async</drox:ns>
                        <m:apply>
                          <m:csymbol cd="relation1">gt</m:csymbol>
                          <drox:ns>s.timeout</drox:ns>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>timeoutTimer</m:ci>
                          </drox:dt>
                          <m:apply>
                            <m:ci>setTimeout</m:ci>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:apply>
                                <drox:ns>jqXHR.abort</drox:ns>
                                <m:cs>timeout</m:cs>
                              </m:apply>
                            </m:bind>
                            <drox:ns>s.timeout</drox:ns>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog2">try</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>state</m:ci>
                          </drox:dt>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </drox:dl>
                        <m:apply>
                          <drox:ns>transport.send</drox:ns>
                          <m:ci>requestHeaders</m:ci>
                          <m:ci>done</m:ci>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog2">catch</m:csymbol>
                        <m:bvar>
                          <m:ci>e</m:ci>
                        </m:bvar>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">lt</m:csymbol>
                            <m:ci>state</m:ci>
                            <m:cn>2</m:cn>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:ci>done</m:ci>
                              <m:apply>
                                <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:ci>e</m:ci>
                            </m:apply>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">throw</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </drox:dl>
                    </drox:dl>
                  </m:apply>
                </drox:else>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="ecmascript3">function</m:csymbol>
                <drox:dt>
                  <m:ci>done</m:ci>
                </drox:dt>
                <m:bvar>
                  <m:ci>status</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>nativeStatusText</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>responses</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>headers</m:ci>
                </m:bvar>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>isSuccess</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>success</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>error</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>response</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>modified</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>statusText</m:ci>
                    </drox:dt>
                    <m:ci>nativeStatusText</m:ci>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>state</m:ci>
                    <m:cn>2</m:cn>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>state</m:ci>
                  </drox:dt>
                  <m:cn>2</m:cn>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>timeoutTimer</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:ci>clearTimeout</m:ci>
                      <m:ci>timeoutTimer</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>transport</m:ci>
                  </drox:dt>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>responseHeadersString</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>jqXHR.readyState</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <m:ci>status</m:ci>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                    <m:cn>4</m:cn>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>responses</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>response</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:ci>ajaxHandleResponses</m:ci>
                        <m:ci>s</m:ci>
                        <m:ci>jqXHR</m:ci>
                        <m:ci>responses</m:ci>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <drox:ns>s.ifModified</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>modified</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>jqXHR.getResponseHeader</drox:ns>
                            <m:cs>Last-Modified</m:cs>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>modified</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <drox:ns>jQuery.lastModified</drox:ns>
                                  <m:ci>cacheURL</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:ci>modified</m:ci>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>modified</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>jqXHR.getResponseHeader</drox:ns>
                            <m:cs>etag</m:cs>
                          </m:apply>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:ci>modified</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <drox:ns>jQuery.etag</drox:ns>
                                  <m:ci>cacheURL</m:ci>
                                </m:apply>
                              </drox:dt>
                              <m:ci>modified</m:ci>
                            </drox:dl>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="switch2">cond</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>status</m:ci>
                            <m:cn>204</m:cn>
                          </m:apply>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>isSuccess</m:ci>
                          </drox:dt>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>statusText</m:ci>
                          </drox:dt>
                          <m:cs>nocontent</m:cs>
                        </drox:dl>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:ci>status</m:ci>
                            <m:cn>304</m:cn>
                          </m:apply>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>isSuccess</m:ci>
                          </drox:dt>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>statusText</m:ci>
                          </drox:dt>
                          <m:cs>notmodified</m:cs>
                        </drox:dl>
                      </drox:di>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>isSuccess</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>ajaxConvert</m:ci>
                          <m:ci>s</m:ci>
                          <m:ci>response</m:ci>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>statusText</m:ci>
                        </drox:dt>
                        <drox:ns>isSuccess.state</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>success</m:ci>
                        </drox:dt>
                        <drox:ns>isSuccess.data</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>error</m:ci>
                        </drox:dt>
                        <drox:ns>isSuccess.error</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>isSuccess</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:ci>error</m:ci>
                        </m:apply>
                      </drox:dl>
                    </drox:dl>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>error</m:ci>
                        </drox:dt>
                        <m:ci>statusText</m:ci>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>statusText</m:ci>
                            </drox:dt>
                            <m:cs>error</m:cs>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="relation1">lt</m:csymbol>
                              <m:ci>status</m:ci>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:ci>status</m:ci>
                                </drox:dt>
                                <m:csymbol cd="alg1">zero</m:csymbol>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>jqXHR.status</drox:ns>
                  </drox:dt>
                  <m:ci>status</m:ci>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>jqXHR.statusText</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:cs/>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>isSuccess</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>deferred.resolveWith</drox:ns>
                      <m:ci>callbackContext</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:ci>success</m:ci>
                        <m:ci>statusText</m:ci>
                        <m:ci>jqXHR</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>deferred.rejectWith</drox:ns>
                        <m:ci>callbackContext</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                          <m:ci>jqXHR</m:ci>
                          <m:ci>statusText</m:ci>
                          <m:ci>error</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
                <m:apply>
                  <drox:ns>jqXHR.statusCode</drox:ns>
                  <m:ci>statusCode</m:ci>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>statusCode</m:ci>
                  </drox:dt>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>fireGlobals</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>globalEventContext.trigger</drox:ns>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>isSuccess</m:ci>
                        <m:cs>ajaxSuccess</m:cs>
                        <m:cs>ajaxError</m:cs>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:ci>jqXHR</m:ci>
                        <m:ci>s</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>isSuccess</m:ci>
                          <m:ci>success</m:ci>
                          <m:ci>error</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <drox:ns>completeDeferred.fireWith</drox:ns>
                  <m:ci>callbackContext</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                    <m:ci>jqXHR</m:ci>
                    <m:ci>statusText</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>fireGlobals</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>globalEventContext.trigger</drox:ns>
                      <m:cs>ajaxComplete</m:cs>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:ci>jqXHR</m:ci>
                        <m:ci>s</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">decrement</m:csymbol>
                          <drox:ns>jQuery.active</drox:ns>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>jQuery.event</drox:ns>
                            <m:ci>trigger</m:ci>
                          </m:apply>
                          <m:cs>ajaxStop</m:cs>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>jqXHR</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>getScript</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>url</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.get</drox:ns>
                  <m:ci>url</m:ci>
                  <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  <m:ci>callback</m:ci>
                  <m:cs>script</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>getJSON</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>url</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>data</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.get</drox:ns>
                  <m:ci>url</m:ci>
                  <m:ci>data</m:ci>
                  <m:ci>callback</m:ci>
                  <m:cs>json</m:cs>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>ajaxHandleResponses</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>s</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>jqXHR</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>responses</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>firstDataType</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>ct</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>finalDataType</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>type</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>contents</m:ci>
            </drox:dt>
            <drox:ns>s.contents</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dataTypes</m:ci>
            </drox:dt>
            <drox:ns>s.dataTypes</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>responseFields</m:ci>
            </drox:dt>
            <drox:ns>s.responseFields</drox:ns>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog2">for_each</m:csymbol>
          <m:ci>type</m:ci>
          <m:ci>responseFields</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">in</m:csymbol>
                <m:ci>type</m:ci>
                <m:ci>responses</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>jqXHR</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>responseFields</m:ci>
                        <m:ci>type</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>responses</m:ci>
                    <m:ci>type</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">while</m:csymbol>
          <m:apply>
            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>dataTypes</m:ci>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
            <m:cs>*</m:cs>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <drox:ns>dataTypes.shift</drox:ns>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <m:ci>ct</m:ci>
                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>ct</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>ct</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:ci>type</m:ci>
              <m:ci>contents</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>contents</m:ci>
                      <m:ci>type</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>contents</m:ci>
                          <m:ci>type</m:ci>
                        </m:apply>
                        <m:ci>test</m:ci>
                      </m:apply>
                      <m:ci>ct</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>dataTypes.unshift</drox:ns>
                      <m:ci>type</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">break</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="ecmascript3">in</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>dataTypes</m:ci>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
            <m:ci>responses</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>finalDataType</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>dataTypes</m:ci>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
            </drox:dl>
          </m:apply>
          <drox:else>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>type</m:ci>
                <m:ci>responses</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>finalDataType</m:ci>
                        </drox:dt>
                        <m:ci>type</m:ci>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog2">break</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>firstDataType</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>firstDataType</m:ci>
                        </drox:dt>
                        <m:ci>type</m:ci>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>finalDataType</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
            </m:apply>
          </drox:else>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>finalDataType</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:ci>finalDataType</m:ci>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>dataTypes</m:ci>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>dataTypes.unshift</drox:ns>
                  <m:ci>finalDataType</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>responses</m:ci>
                <m:ci>finalDataType</m:ci>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>ajaxConvert</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>s</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>response</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>conv2</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>current</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>conv</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>tmp</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>converters</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dataTypes</m:ci>
            </drox:dt>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>s.dataTypes</drox:ns>
                <m:ci>slice</m:ci>
              </m:apply>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>prev</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>dataTypes</m:ci>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <drox:ns>s.dataFilter</drox:ns>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>response</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>s.dataFilter</drox:ns>
                <m:ci>response</m:ci>
                <drox:ns>s.dataType</drox:ns>
              </m:apply>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="ecmascript3">selector</m:csymbol>
            <m:ci>dataTypes</m:ci>
            <m:csymbol cd="alg1">one</m:csymbol>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">for_each</m:csymbol>
              <m:ci>conv</m:ci>
              <drox:ns>s.converters</drox:ns>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>converters</m:ci>
                      <m:apply>
                        <drox:ns>conv.toLowerCase</drox:ns>
                      </m:apply>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>s.converters</drox:ns>
                    <m:ci>conv</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>current</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">selector</m:csymbol>
              <m:ci>dataTypes</m:ci>
              <m:apply>
                <m:csymbol cd="prog2">increment</m:csymbol>
                <m:ci>i</m:ci>
              </m:apply>
            </m:apply>
          </drox:dl>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:ci>current</m:ci>
                <m:cs>*</m:cs>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>prev</m:ci>
                      <m:cs>*</m:cs>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <m:ci>prev</m:ci>
                      <m:ci>current</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>conv</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:ci>conv</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">for_each</m:csymbol>
                          <m:ci>conv2</m:ci>
                          <m:ci>converters</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>tmp</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>conv2.split</drox:ns>
                                <m:cs>%20</m:cs>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>tmp</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:ci>current</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>conv</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="logic1">or</m:csymbol>
                                  </m:apply>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:ci>conv</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="switch2">cond</m:csymbol>
                                      <drox:di>
                                        <drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                            <m:ci>conv</m:ci>
                                            <m:csymbol cd="logic1">true</m:csymbol>
                                          </m:apply>
                                        </drox:dt>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:ci>conv</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>converters</m:ci>
                                            <m:ci>conv2</m:ci>
                                          </m:apply>
                                        </drox:dl>
                                      </drox:di>
                                      <drox:di>
                                        <drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                              <m:ci>converters</m:ci>
                                              <m:ci>conv2</m:ci>
                                            </m:apply>
                                            <m:csymbol cd="logic1">true</m:csymbol>
                                          </m:apply>
                                        </drox:dt>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <m:ci>current</m:ci>
                                          </drox:dt>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                            <m:ci>tmp</m:ci>
                                            <m:csymbol cd="alg1">zero</m:csymbol>
                                          </m:apply>
                                        </drox:dl>
                                        <m:apply>
                                          <drox:ns>dataTypes.splice</drox:ns>
                                          <m:apply>
                                            <m:csymbol cd="prog2">post_decrement</m:csymbol>
                                            <m:ci>i</m:ci>
                                          </m:apply>
                                          <m:csymbol cd="alg1">zero</m:csymbol>
                                          <m:ci>current</m:ci>
                                        </m:apply>
                                      </drox:di>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="prog2">break</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                        <m:ci>conv</m:ci>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:ci>conv</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>s</m:ci>
                              <m:cs>throws</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>response</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:ci>conv</m:ci>
                                <m:ci>response</m:ci>
                              </m:apply>
                            </drox:dl>
                          </m:apply>
                          <drox:else>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog2">try</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>response</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:ci>conv</m:ci>
                                    <m:ci>response</m:ci>
                                  </m:apply>
                                </drox:dl>
                                <drox:dl>
                                  <m:csymbol cd="prog2">catch</m:csymbol>
                                  <m:bvar>
                                    <m:ci>e</m:ci>
                                  </m:bvar>
                                  <m:apply>
                                    <m:csymbol cd="prog1">return</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>state</m:ci>
                                        </drox:dt>
                                        <m:cs>parsererror</m:cs>
                                      </drox:di>
                                      <drox:di>
                                        <drox:dt>
                                          <m:ci>error</m:ci>
                                        </drox:dt>
                                        <m:apply>
                                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                                          <m:ci>conv</m:ci>
                                          <m:ci>e</m:ci>
                                          <m:apply>
                                            <m:csymbol cd="arith2">plus</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="arith2">plus</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="arith2">plus</m:csymbol>
                                                <m:cs>No%20conversion%20from%20</m:cs>
                                                <m:ci>prev</m:ci>
                                              </m:apply>
                                              <m:cs>%20to%20</m:cs>
                                            </m:apply>
                                            <m:ci>current</m:ci>
                                          </m:apply>
                                        </m:apply>
                                      </drox:di>
                                    </drox:dl>
                                  </m:apply>
                                </drox:dl>
                              </drox:dl>
                            </m:apply>
                          </drox:else>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>prev</m:ci>
                  </drox:dt>
                  <m:ci>current</m:ci>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>state</m:ci>
              </drox:dt>
              <m:cs>success</m:cs>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>data</m:ci>
              </drox:dt>
              <m:ci>response</m:ci>
            </drox:di>
          </drox:dl>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.ajaxSetup</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>accepts</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>script</m:ci>
                </drox:dt>
                <m:cs>text/javascript,%20application/javascript,%20application/ecmascript,%20application/x-ecmascript</m:cs>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>contents</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>script</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                  <m:cs>/(?:java%7Cecma)script/</m:cs>
                </m:apply>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>converters</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>text script</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>text</m:ci>
                  </m:bvar>
                  <m:apply>
                    <drox:ns>jQuery.globalEval</drox:ns>
                    <m:ci>text</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>text</m:ci>
                  </m:apply>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.ajaxPrefilter</drox:ns>
        <m:cs>script</m:cs>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>s</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <drox:ns>s.cache</drox:ns>
              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.cache</drox:ns>
                </drox:dt>
                <m:csymbol cd="logic1">false</m:csymbol>
              </drox:dl>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <drox:ns>s.crossDomain</drox:ns>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.type</drox:ns>
                </drox:dt>
                <m:cs>GET</m:cs>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>s.global</drox:ns>
                </drox:dt>
                <m:csymbol cd="logic1">false</m:csymbol>
              </drox:dl>
            </m:apply>
          </m:apply>
        </m:bind>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.ajaxTransport</drox:ns>
        <m:cs>script</m:cs>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>s</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <drox:ns>s.crossDomain</drox:ns>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>script</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>head</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>send</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>_</m:ci>
                      </m:bvar>
                      <m:bvar>
                        <m:ci>callback</m:ci>
                      </m:bvar>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>script</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>document.createElement</drox:ns>
                          <m:cs>script</m:cs>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>script.async</drox:ns>
                        </drox:dt>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <drox:ns>s.scriptCharset</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <drox:ns>script.charset</drox:ns>
                            </drox:dt>
                            <drox:ns>s.scriptCharset</drox:ns>
                          </drox:dl>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>script.src</drox:ns>
                        </drox:dt>
                        <drox:ns>s.url</drox:ns>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>script.onload</drox:ns>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>script.onreadystatechange</drox:ns>
                          </drox:dt>
                          <m:bind>
                            <m:csymbol cd="fns1">lambda</m:csymbol>
                            <m:bvar>
                              <m:ci>_</m:ci>
                            </m:bvar>
                            <m:bvar>
                              <m:ci>isAbort</m:ci>
                            </m:bvar>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <drox:ns>script.onload</drox:ns>
                                  </drox:dt>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <drox:ns>script.onreadystatechange</drox:ns>
                                    </drox:dt>
                                    <m:csymbol cd="prog2">null</m:csymbol>
                                  </drox:dl>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <drox:ns>script.parentNode</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <drox:ns>script.parentNode</drox:ns>
                                        <m:ci>removeChild</m:ci>
                                      </m:apply>
                                      <m:ci>script</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>script</m:ci>
                                  </drox:dt>
                                  <m:csymbol cd="prog2">null</m:csymbol>
                                </drox:dl>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <m:ci>isAbort</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <m:apply>
                                      <m:ci>callback</m:ci>
                                      <m:cn>200</m:cn>
                                      <m:cs>success</m:cs>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:bind>
                        </drox:dl>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>head.insertBefore</drox:ns>
                        <m:ci>script</m:ci>
                        <drox:ns>head.firstChild</drox:ns>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>abort</m:ci>
                    </drox:dt>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:ci>script</m:ci>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>script.onload</drox:ns>
                            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                            <m:csymbol cd="logic1">true</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </drox:di>
                </drox:dl>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>oldCallbacks</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">array</m:csymbol>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rjsonp</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/(=)%5C?(?=&amp;%7C$)%7C%5C?%5C?/</m:cs>
          </m:apply>
        </drox:di>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.ajaxSetup</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>jsonp</m:ci>
            </drox:dt>
            <m:cs>callback</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>jsonpCallback</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>callback</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>callback</m:ci>
                  </m:apply>
                </drox:dt>
                <m:csymbol cd="logic1">true</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>callback</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.ajaxPrefilter</drox:ns>
        <m:cs>json%20jsonp</m:cs>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>s</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>originalSettings</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>jqXHR</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>callbackName</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>overwritten</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>responseContainer</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>jsonProp</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <drox:ns>s.jsonp</drox:ns>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <drox:ns>rjsonp.test</drox:ns>
                    <drox:ns>s.url</drox:ns>
                  </m:apply>
                  <m:cs>url</m:cs>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                            <drox:ns>s.data</drox:ns>
                          </m:apply>
                          <m:cs>string</m:cs>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="logic1">not</m:csymbol>
                          <m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                              <m:ci>indexOf</m:ci>
                            </m:apply>
                            <m:cs>application/x-www-form-urlencoded</m:cs>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <drox:ns>rjsonp.test</drox:ns>
                        <drox:ns>s.data</drox:ns>
                      </m:apply>
                    </m:apply>
                    <m:cs>data</m:cs>
                  </m:apply>
                </m:apply>
              </m:apply>
            </drox:di>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>callbackName</m:ci>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>s.jsonpCallback</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">if_exp</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.isFunction</drox:ns>
                      <drox:ns>s.jsonpCallback</drox:ns>
                    </m:apply>
                    <m:apply>
                      <drox:ns>s.jsonpCallback</drox:ns>
                    </m:apply>
                    <drox:ns>s.jsonpCallback</drox:ns>
                  </m:apply>
                </drox:dl>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="switch2">cond</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>jsonProp</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>s</m:ci>
                        <m:ci>jsonProp</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>s</m:ci>
                          <m:ci>jsonProp</m:ci>
                        </m:apply>
                        <m:ci>replace</m:ci>
                      </m:apply>
                      <m:ci>rjsonp</m:ci>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:cs>$1</m:cs>
                        <m:ci>callbackName</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                      <drox:ns>s.jsonp</drox:ns>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                    <drox:dt>
                      <drox:ns>s.url</drox:ns>
                    </drox:dt>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <drox:ns>ajax_rquery.test</drox:ns>
                              <drox:ns>s.url</drox:ns>
                            </m:apply>
                            <m:cs>&amp;</m:cs>
                            <m:cs>?</m:cs>
                          </m:apply>
                          <drox:ns>s.jsonp</drox:ns>
                        </m:apply>
                        <m:cs>=</m:cs>
                      </m:apply>
                      <m:ci>callbackName</m:ci>
                    </m:apply>
                  </drox:dl>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>s.converters</drox:ns>
                    <m:cs>script%20json</m:cs>
                  </m:apply>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">not</m:csymbol>
                      <m:ci>responseContainer</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.error</drox:ns>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <m:ci>callbackName</m:ci>
                          <m:cs>%20was%20not%20called</m:cs>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>responseContainer</m:ci>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>s.dataTypes</drox:ns>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:dt>
                <m:cs>json</m:cs>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>overwritten</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>window</m:ci>
                  <m:ci>callbackName</m:ci>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>window</m:ci>
                    <m:ci>callbackName</m:ci>
                  </m:apply>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>responseContainer</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  </drox:dl>
                </m:bind>
              </drox:dl>
              <m:apply>
                <drox:ns>jqXHR.always</drox:ns>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>window</m:ci>
                        <m:ci>callbackName</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:ci>overwritten</m:ci>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>s</m:ci>
                      <m:ci>callbackName</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>s.jsonpCallback</drox:ns>
                        </drox:dt>
                        <drox:ns>originalSettings.jsonpCallback</drox:ns>
                      </drox:dl>
                      <m:apply>
                        <drox:ns>oldCallbacks.push</drox:ns>
                        <m:ci>callbackName</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:ci>responseContainer</m:ci>
                      <m:apply>
                        <drox:ns>jQuery.isFunction</drox:ns>
                        <m:ci>overwritten</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:ci>overwritten</m:ci>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>responseContainer</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>responseContainer</m:ci>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>overwritten</m:ci>
                      </drox:dt>
                      <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    </drox:dl>
                  </drox:dl>
                </m:bind>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:cs>script</m:cs>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>xhrCallbacks</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>xhrSupported</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>xhrId</m:ci>
          </drox:dt>
          <m:csymbol cd="alg1">zero</m:csymbol>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>xhrOnUnloadAbort</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <drox:ns>window.ActiveXObject</drox:ns>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>key</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog2">for_each</m:csymbol>
                <m:ci>key</m:ci>
                <m:ci>xhrCallbacks</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>xhrCallbacks</m:ci>
                      <m:ci>key</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                    <m:csymbol cd="logic1">true</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </m:apply>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>createStandardXHR</m:ci>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog2">try</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">new</m:csymbol>
              <drox:ns>window.XMLHttpRequest</drox:ns>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog2">catch</m:csymbol>
            <m:bvar>
              <m:ci>e</m:ci>
            </m:bvar>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>createActiveXHR</m:ci>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog2">try</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">new</m:csymbol>
              <drox:ns>window.ActiveXObject</drox:ns>
              <m:cs>Microsoft.XMLHTTP</m:cs>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog2">catch</m:csymbol>
            <m:bvar>
              <m:ci>e</m:ci>
            </m:bvar>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.ajaxSettings</drox:ns>
            <m:ci>xhr</m:ci>
          </m:apply>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="prog2">if_exp</m:csymbol>
          <drox:ns>window.ActiveXObject</drox:ns>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog1">return</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </m:apply>
          </m:bind>
          <m:ci>createStandardXHR</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:ci>xhrSupported</m:ci>
        </drox:dt>
        <m:apply>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.ajaxSettings</drox:ns>
            <m:ci>xhr</m:ci>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.support</drox:ns>
            <m:ci>cors</m:ci>
          </m:apply>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="logic1">and</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:ci>xhrSupported</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="ecmascript3">in</m:csymbol>
            <m:cs>withCredentials</m:cs>
            <m:ci>xhrSupported</m:ci>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:ci>xhrSupported</m:ci>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>jQuery.support</drox:ns>
              <m:ci>ajax</m:ci>
            </m:apply>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:ci>xhrSupported</m:ci>
            </m:apply>
          </m:apply>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:ci>xhrSupported</m:ci>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.ajaxTransport</drox:ns>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>s</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>callback</m:ci>
                      </drox:dt>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>send</m:ci>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:bvar>
                            <m:ci>headers</m:ci>
                          </m:bvar>
                          <m:bvar>
                            <m:ci>complete</m:ci>
                          </m:bvar>
                          <drox:dl>
                            <m:csymbol cd="prog1">local_var</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:ci>handle</m:ci>
                              </drox:dt>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:ci>i</m:ci>
                              </drox:dt>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:ci>xhr</m:ci>
                              </drox:dt>
                              <m:apply>
                                <drox:ns>s.xhr</drox:ns>
                              </m:apply>
                            </drox:di>
                          </drox:dl>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:ns>s.username</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>xhr.open</drox:ns>
                                <drox:ns>s.type</drox:ns>
                                <drox:ns>s.url</drox:ns>
                                <drox:ns>s.async</drox:ns>
                                <drox:ns>s.username</drox:ns>
                                <drox:ns>s.password</drox:ns>
                              </m:apply>
                            </m:apply>
                            <drox:else>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <drox:ns>xhr.open</drox:ns>
                                  <drox:ns>s.type</drox:ns>
                                  <drox:ns>s.url</drox:ns>
                                  <drox:ns>s.async</drox:ns>
                                </m:apply>
                              </m:apply>
                            </drox:else>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <drox:ns>s.xhrFields</drox:ns>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">for_each</m:csymbol>
                                <m:ci>i</m:ci>
                                <drox:ns>s.xhrFields</drox:ns>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <drox:dl>
                                    <m:csymbol cd="prog1">assignment</m:csymbol>
                                    <drox:dt>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>xhr</m:ci>
                                        <m:ci>i</m:ci>
                                      </m:apply>
                                    </drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <drox:ns>s.xhrFields</drox:ns>
                                      <m:ci>i</m:ci>
                                    </m:apply>
                                  </drox:dl>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <drox:ns>s.mimeType</drox:ns>
                              <drox:ns>xhr.overrideMimeType</drox:ns>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <drox:ns>xhr.overrideMimeType</drox:ns>
                                <drox:ns>s.mimeType</drox:ns>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <drox:ns>s.crossDomain</drox:ns>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="logic1">not</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>headers</m:ci>
                                  <m:cs>X-Requested-With</m:cs>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <drox:dl>
                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                <drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>headers</m:ci>
                                    <m:cs>X-Requested-With</m:cs>
                                  </m:apply>
                                </drox:dt>
                                <m:cs>XMLHttpRequest</m:cs>
                              </drox:dl>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog2">try</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">for_each</m:csymbol>
                              <m:ci>i</m:ci>
                              <m:ci>headers</m:ci>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <drox:ns>xhr.setRequestHeader</drox:ns>
                                  <m:ci>i</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>headers</m:ci>
                                    <m:ci>i</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog2">catch</m:csymbol>
                              <m:bvar>
                                <m:ci>err</m:ci>
                              </m:bvar>
                            </drox:dl>
                          </drox:dl>
                          <m:apply>
                            <drox:ns>xhr.send</drox:ns>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>callback</m:ci>
                            </drox:dt>
                            <m:bind>
                              <m:csymbol cd="fns1">lambda</m:csymbol>
                              <m:bvar>
                                <m:ci>_</m:ci>
                              </m:bvar>
                              <m:bvar>
                                <m:ci>isAbort</m:ci>
                              </m:bvar>
                              <drox:dl>
                                <m:csymbol cd="prog1">local_var</m:csymbol>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>status</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>responseHeaders</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>statusText</m:ci>
                                  </drox:dt>
                                </drox:di>
                                <drox:di>
                                  <drox:dt>
                                    <m:ci>responses</m:ci>
                                  </drox:dt>
                                </drox:di>
                              </drox:dl>
                              <drox:dl>
                                <m:csymbol cd="prog2">try</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:ci>callback</m:ci>
                                    <m:apply>
                                      <m:csymbol cd="logic1">or</m:csymbol>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:ci>callback</m:ci>
                                      </drox:dt>
                                      <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                                    </drox:dl>
                                    <m:apply>
                                      <m:csymbol cd="prog1">if</m:csymbol>
                                      <m:ci>handle</m:ci>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <drox:dl>
                                          <m:csymbol cd="prog1">assignment</m:csymbol>
                                          <drox:dt>
                                            <drox:ns>xhr.onreadystatechange</drox:ns>
                                          </drox:dt>
                                          <drox:ns>jQuery.noop</drox:ns>
                                        </drox:dl>
                                        <m:apply>
                                          <m:csymbol cd="prog1">if</m:csymbol>
                                          <m:ci>xhrOnUnloadAbort</m:ci>
                                          <m:apply>
                                            <m:csymbol cd="prog1">block</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="prog2">delete</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                                <m:ci>xhrCallbacks</m:ci>
                                                <m:ci>handle</m:ci>
                                              </m:apply>
                                            </m:apply>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">if</m:csymbol>
                                      <m:ci>isAbort</m:ci>
                                      <m:apply>
                                        <m:csymbol cd="prog1">block</m:csymbol>
                                        <m:apply>
                                          <m:csymbol cd="prog1">if</m:csymbol>
                                          <m:apply>
                                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                            <drox:ns>xhr.readyState</drox:ns>
                                            <m:cn>4</m:cn>
                                          </m:apply>
                                          <m:apply>
                                            <m:csymbol cd="prog1">block</m:csymbol>
                                            <m:apply>
                                              <drox:ns>xhr.abort</drox:ns>
                                            </m:apply>
                                          </m:apply>
                                        </m:apply>
                                      </m:apply>
                                      <drox:else>
                                        <m:apply>
                                          <m:csymbol cd="prog1">block</m:csymbol>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">assignment</m:csymbol>
                                            <drox:dt>
                                              <m:ci>responses</m:ci>
                                            </drox:dt>
                                            <drox:dl>
                                              <m:csymbol cd="ecmascript3">object</m:csymbol>
                                            </drox:dl>
                                          </drox:dl>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">assignment</m:csymbol>
                                            <drox:dt>
                                              <m:ci>status</m:ci>
                                            </drox:dt>
                                            <drox:ns>xhr.status</drox:ns>
                                          </drox:dl>
                                          <drox:dl>
                                            <m:csymbol cd="prog1">assignment</m:csymbol>
                                            <drox:dt>
                                              <m:ci>responseHeaders</m:ci>
                                            </drox:dt>
                                            <m:apply>
                                              <drox:ns>xhr.getAllResponseHeaders</drox:ns>
                                            </m:apply>
                                          </drox:dl>
                                          <m:apply>
                                            <m:csymbol cd="prog1">if</m:csymbol>
                                            <m:apply>
                                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                              <m:apply>
                                                <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                                                <drox:ns>xhr.responseText</drox:ns>
                                              </m:apply>
                                              <m:cs>string</m:cs>
                                            </m:apply>
                                            <m:apply>
                                              <m:csymbol cd="prog1">block</m:csymbol>
                                              <drox:dl>
                                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                                <drox:dt>
                                                  <drox:ns>responses.text</drox:ns>
                                                </drox:dt>
                                                <drox:ns>xhr.responseText</drox:ns>
                                              </drox:dl>
                                            </m:apply>
                                          </m:apply>
                                          <drox:dl>
                                            <m:csymbol cd="prog2">try</m:csymbol>
                                            <drox:dl>
                                              <m:csymbol cd="prog1">assignment</m:csymbol>
                                              <drox:dt>
                                                <m:ci>statusText</m:ci>
                                              </drox:dt>
                                              <drox:ns>xhr.statusText</drox:ns>
                                            </drox:dl>
                                            <drox:dl>
                                              <m:csymbol cd="prog2">catch</m:csymbol>
                                              <m:bvar>
                                                <m:ci>e</m:ci>
                                              </m:bvar>
                                              <drox:dl>
                                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                                <drox:dt>
                                                  <m:ci>statusText</m:ci>
                                                </drox:dt>
                                                <m:cs/>
                                              </drox:dl>
                                            </drox:dl>
                                          </drox:dl>
                                          <drox:dl>
                                            <m:csymbol cd="switch2">cond</m:csymbol>
                                            <drox:di>
                                              <drox:dt>
                                                <m:apply>
                                                  <m:csymbol cd="logic1">and</m:csymbol>
                                                  <m:apply>
                                                    <m:csymbol cd="logic1">and</m:csymbol>
                                                    <m:apply>
                                                      <m:csymbol cd="logic1">not</m:csymbol>
                                                      <m:ci>status</m:ci>
                                                    </m:apply>
                                                    <drox:ns>s.isLocal</drox:ns>
                                                  </m:apply>
                                                  <m:apply>
                                                    <m:csymbol cd="logic1">not</m:csymbol>
                                                    <drox:ns>s.crossDomain</drox:ns>
                                                  </m:apply>
                                                </m:apply>
                                              </drox:dt>
                                              <drox:dl>
                                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                                <drox:dt>
                                                  <m:ci>status</m:ci>
                                                </drox:dt>
                                                <m:apply>
                                                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                                                  <drox:ns>responses.text</drox:ns>
                                                  <m:cn>200</m:cn>
                                                  <m:cn>404</m:cn>
                                                </m:apply>
                                              </drox:dl>
                                            </drox:di>
                                            <drox:di>
                                              <drox:dt>
                                                <m:apply>
                                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                                  <m:ci>status</m:ci>
                                                  <m:cn>1223</m:cn>
                                                </m:apply>
                                              </drox:dt>
                                              <drox:dl>
                                                <m:csymbol cd="prog1">assignment</m:csymbol>
                                                <drox:dt>
                                                  <m:ci>status</m:ci>
                                                </drox:dt>
                                                <m:cn>204</m:cn>
                                              </drox:dl>
                                            </drox:di>
                                          </drox:dl>
                                        </m:apply>
                                      </drox:else>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <drox:dl>
                                  <m:csymbol cd="prog2">catch</m:csymbol>
                                  <m:bvar>
                                    <m:ci>firefoxAccessException</m:ci>
                                  </m:bvar>
                                  <m:apply>
                                    <m:csymbol cd="prog1">if</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="logic1">not</m:csymbol>
                                      <m:ci>isAbort</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog1">block</m:csymbol>
                                      <m:apply>
                                        <m:ci>complete</m:ci>
                                        <m:apply>
                                          <m:csymbol cd="arith1">unary_minus</m:csymbol>
                                          <m:csymbol cd="alg1">one</m:csymbol>
                                        </m:apply>
                                        <m:ci>firefoxAccessException</m:ci>
                                      </m:apply>
                                    </m:apply>
                                  </m:apply>
                                </drox:dl>
                              </drox:dl>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:ci>responses</m:ci>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:ci>complete</m:ci>
                                    <m:ci>status</m:ci>
                                    <m:ci>statusText</m:ci>
                                    <m:ci>responses</m:ci>
                                    <m:ci>responseHeaders</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:bind>
                          </drox:dl>
                          <drox:dl>
                            <m:csymbol cd="switch2">cond</m:csymbol>
                            <drox:di>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="logic1">not</m:csymbol>
                                  <drox:ns>s.async</drox:ns>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:ci>callback</m:ci>
                              </m:apply>
                            </drox:di>
                            <drox:di>
                              <drox:dt>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                                  <drox:ns>xhr.readyState</drox:ns>
                                  <m:cn>4</m:cn>
                                </m:apply>
                              </drox:dt>
                              <m:apply>
                                <m:ci>setTimeout</m:ci>
                                <m:ci>callback</m:ci>
                              </m:apply>
                            </drox:di>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>handle</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="prog2">increment</m:csymbol>
                                <m:ci>xhrId</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">if</m:csymbol>
                              <m:ci>xhrOnUnloadAbort</m:ci>
                              <m:apply>
                                <m:csymbol cd="prog1">block</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog1">if</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">not</m:csymbol>
                                    <m:ci>xhrCallbacks</m:ci>
                                  </m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog1">block</m:csymbol>
                                    <drox:dl>
                                      <m:csymbol cd="prog1">assignment</m:csymbol>
                                      <drox:dt>
                                        <m:ci>xhrCallbacks</m:ci>
                                      </drox:dt>
                                      <drox:dl>
                                        <m:csymbol cd="ecmascript3">object</m:csymbol>
                                      </drox:dl>
                                    </drox:dl>
                                    <m:apply>
                                      <m:apply>
                                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                        <m:apply>
                                          <m:ci>jQuery</m:ci>
                                          <m:ci>window</m:ci>
                                        </m:apply>
                                        <m:ci>unload</m:ci>
                                      </m:apply>
                                      <m:ci>xhrOnUnloadAbort</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>xhrCallbacks</m:ci>
                                      <m:ci>handle</m:ci>
                                    </m:apply>
                                  </drox:dt>
                                  <m:ci>callback</m:ci>
                                </drox:dl>
                              </m:apply>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <drox:ns>xhr.onreadystatechange</drox:ns>
                              </drox:dt>
                              <m:ci>callback</m:ci>
                            </drox:dl>
                          </drox:dl>
                        </m:bind>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>abort</m:ci>
                        </drox:dt>
                        <m:bind>
                          <m:csymbol cd="fns1">lambda</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">if</m:csymbol>
                            <m:ci>callback</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:ci>callback</m:ci>
                                <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                                <m:csymbol cd="logic1">true</m:csymbol>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:bind>
                      </drox:di>
                    </drox:dl>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </m:apply>
        </m:apply>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">local_var</m:csymbol>
        <drox:di>
          <drox:dt>
            <m:ci>fxNow</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>timerId</m:ci>
          </drox:dt>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rfxtypes</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/%5E(?:toggle%7Cshow%7Chide)$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rfxnum</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">new</m:csymbol>
            <m:ci>RegExp</m:ci>
            <m:apply>
              <m:csymbol cd="arith2">plus</m:csymbol>
              <m:apply>
                <m:csymbol cd="arith2">plus</m:csymbol>
                <m:cs>%5E(?:(%5B+-%5D)=%7C)(</m:cs>
                <m:ci>core_pnum</m:ci>
              </m:apply>
              <m:cs>)(%5Ba-z%25%5D*)$</m:cs>
            </m:apply>
            <m:cs>i</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>rrun</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">regexp</m:csymbol>
            <m:cs>/queueHooks$/</m:cs>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>animationPrefilters</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="ecmascript3">array</m:csymbol>
            <m:ci>defaultPrefilter</m:ci>
          </m:apply>
        </drox:di>
        <drox:di>
          <drox:dt>
            <m:ci>tweeners</m:ci>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>*</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>prop</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>end</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>unit</m:ci>
                      </drox:dt>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>tween</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>createTween</m:ci>
                        </m:apply>
                        <m:ci>prop</m:ci>
                        <m:ci>value</m:ci>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>parts</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>rfxnum.exec</drox:ns>
                        <m:ci>value</m:ci>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>target</m:ci>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>tween.cur</drox:ns>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>start</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>scale</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">one</m:csymbol>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>maxIterations</m:ci>
                      </drox:dt>
                      <m:cn>20</m:cn>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:ci>parts</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>end</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="arith2">unary_plus</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>parts</m:ci>
                            <m:cn>2</m:cn>
                          </m:apply>
                        </m:apply>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>unit</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog1">if</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                            <m:ci>unit</m:ci>
                            <m:cs>px</m:cs>
                          </m:apply>
                          <m:ci>start</m:ci>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:ci>start</m:ci>
                            </drox:dt>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </drox:dl>
                          <m:csymbol cd="prog2">do_while</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>scale</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="logic1">or</m:csymbol>
                              </m:apply>
                            </drox:dl>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>start</m:ci>
                              </drox:dt>
                              <m:apply>
                                <m:csymbol cd="arith1">divide</m:csymbol>
                                <m:ci>start</m:ci>
                                <m:ci>scale</m:ci>
                              </m:apply>
                            </drox:dl>
                            <m:apply>
                              <drox:ns>jQuery.style</drox:ns>
                              <drox:ns>tween.elem</drox:ns>
                              <m:ci>prop</m:ci>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:ci>start</m:ci>
                                <m:ci>unit</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">and</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                <m:ci>scale</m:ci>
                                <drox:dl>
                                  <m:csymbol cd="prog1">assignment</m:csymbol>
                                  <drox:dt>
                                    <m:ci>scale</m:ci>
                                  </drox:dt>
                                  <m:apply>
                                    <m:csymbol cd="arith1">divide</m:csymbol>
                                    <m:apply>
                                      <drox:ns>tween.cur</drox:ns>
                                    </m:apply>
                                    <m:ci>target</m:ci>
                                  </m:apply>
                                </drox:dl>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                                <m:ci>scale</m:ci>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">decrement</m:csymbol>
                              <m:ci>maxIterations</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>tween.unit</drox:ns>
                        </drox:dt>
                        <m:ci>unit</m:ci>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>tween.start</drox:ns>
                        </drox:dt>
                        <m:ci>start</m:ci>
                      </drox:dl>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>tween.end</drox:ns>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>parts</m:ci>
                            <m:csymbol cd="alg1">one</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:ci>start</m:ci>
                            <m:apply>
                              <m:csymbol cd="arith1">times</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="arith2">plus</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>parts</m:ci>
                                  <m:csymbol cd="alg1">one</m:csymbol>
                                </m:apply>
                                <m:csymbol cd="alg1">one</m:csymbol>
                              </m:apply>
                              <m:ci>end</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:ci>end</m:ci>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>tween</m:ci>
                  </m:apply>
                </m:bind>
              </m:apply>
            </drox:di>
          </drox:dl>
        </drox:di>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>createFxNow</m:ci>
        </drox:dt>
        <m:apply>
          <m:ci>setTimeout</m:ci>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>fxNow</m:ci>
              </drox:dt>
              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
            </drox:dl>
          </m:bind>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>fxNow</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.now</drox:ns>
            </m:apply>
          </drox:dl>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>createTweens</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>animation</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>props</m:ci>
        </m:bvar>
        <m:apply>
          <drox:ns>jQuery.each</drox:ns>
          <m:ci>props</m:ci>
          <m:bind>
            <m:csymbol cd="fns1">lambda</m:csymbol>
            <m:bvar>
              <m:ci>prop</m:ci>
            </m:bvar>
            <m:bvar>
              <m:ci>value</m:ci>
            </m:bvar>
            <drox:dl>
              <m:csymbol cd="prog1">local_var</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>collection</m:ci>
                </drox:dt>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:ci>concat</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>tweeners</m:ci>
                    <m:cs>*</m:cs>
                  </m:apply>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>index</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>length</m:ci>
                </drox:dt>
                <drox:ns>collection.length</drox:ns>
              </drox:di>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <m:csymbol cd="prog2">empty</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>index</m:ci>
                <m:ci>length</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>index</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>collection</m:ci>
                        <m:ci>index</m:ci>
                      </m:apply>
                      <m:ci>call</m:ci>
                    </m:apply>
                    <m:ci>animation</m:ci>
                    <m:ci>prop</m:ci>
                    <m:ci>value</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:bind>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>Animation</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>properties</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>options</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>result</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>stopped</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>index</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>length</m:ci>
            </drox:dt>
            <drox:ns>animationPrefilters.length</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>deferred</m:ci>
            </drox:dt>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.Deferred</drox:ns>
                </m:apply>
                <m:ci>always</m:ci>
              </m:apply>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">delete</m:csymbol>
                  <drox:ns>tick.elem</drox:ns>
                </m:apply>
              </m:bind>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>tick</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>stopped</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>currentTime</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>remaining</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="minmax1">max</m:csymbol>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith2">plus</m:csymbol>
                        <drox:ns>animation.startTime</drox:ns>
                        <drox:ns>animation.duration</drox:ns>
                      </m:apply>
                      <m:ci>currentTime</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>temp</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>percent</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="arith1">minus</m:csymbol>
                    <m:csymbol cd="alg1">one</m:csymbol>
                    <m:ci>temp</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>index</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>length</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>animation.tweens</drox:ns>
                    <m:ci>length</m:ci>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">for</m:csymbol>
                <m:csymbol cd="prog2">empty</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">lt</m:csymbol>
                  <m:ci>index</m:ci>
                  <m:ci>length</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">post_increment</m:csymbol>
                  <m:ci>index</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>animation.tweens</drox:ns>
                        <m:ci>index</m:ci>
                      </m:apply>
                      <m:ci>run</m:ci>
                    </m:apply>
                    <m:ci>percent</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <drox:ns>deferred.notifyWith</drox:ns>
                <m:ci>elem</m:ci>
                <m:apply>
                  <m:csymbol cd="ecmascript3">array</m:csymbol>
                  <m:ci>animation</m:ci>
                  <m:ci>percent</m:ci>
                  <m:ci>remaining</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">lt</m:csymbol>
                    <m:ci>percent</m:ci>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                  <m:ci>length</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:ci>remaining</m:ci>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>deferred.resolveWith</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:ci>animation</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="logic1">false</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>animation</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>deferred.promise</drox:ns>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:ci>elem</m:ci>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>props</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.extend</drox:ns>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                    </drox:dl>
                    <m:ci>properties</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>opts</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.extend</drox:ns>
                    <m:csymbol cd="logic1">true</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="ecmascript3">object</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>specialEasing</m:ci>
                        </drox:dt>
                        <drox:dl>
                          <m:csymbol cd="ecmascript3">object</m:csymbol>
                        </drox:dl>
                      </drox:di>
                    </drox:dl>
                    <m:ci>options</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>originalProperties</m:ci>
                  </drox:dt>
                  <m:ci>properties</m:ci>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>originalOptions</m:ci>
                  </drox:dt>
                  <m:ci>options</m:ci>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>startTime</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>duration</m:ci>
                  </drox:dt>
                  <drox:ns>options.duration</drox:ns>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>tweens</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">array</m:csymbol>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>createTween</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>prop</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>end</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>tween</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>jQuery.Tween</drox:ns>
                          <m:ci>elem</m:ci>
                          <drox:ns>animation.opts</drox:ns>
                          <m:ci>prop</m:ci>
                          <m:ci>end</m:ci>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>animation.tweens</drox:ns>
                        <m:ci>push</m:ci>
                      </m:apply>
                      <m:ci>tween</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:ci>tween</m:ci>
                    </m:apply>
                  </m:bind>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>stop</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>gotoEnd</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>index</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>length</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>gotoEnd</m:ci>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>animation.tweens</drox:ns>
                            <m:ci>length</m:ci>
                          </m:apply>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>stopped</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>stopped</m:ci>
                      </drox:dt>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">for</m:csymbol>
                      <m:csymbol cd="prog2">empty</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">lt</m:csymbol>
                        <m:ci>index</m:ci>
                        <m:ci>length</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>index</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <drox:ns>animation.tweens</drox:ns>
                              <m:ci>index</m:ci>
                            </m:apply>
                            <m:ci>run</m:ci>
                          </m:apply>
                          <m:csymbol cd="alg1">one</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>gotoEnd</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>deferred.resolveWith</drox:ns>
                          <m:ci>elem</m:ci>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">array</m:csymbol>
                            <m:ci>animation</m:ci>
                            <m:ci>gotoEnd</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <drox:ns>deferred.rejectWith</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">array</m:csymbol>
                              <m:ci>animation</m:ci>
                              <m:ci>gotoEnd</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>props</m:ci>
            </drox:dt>
            <drox:ns>animation.props</drox:ns>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:ci>propFilter</m:ci>
          <m:ci>props</m:ci>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>animation.opts</drox:ns>
            <m:ci>specialEasing</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <m:apply>
            <m:csymbol cd="relation1">lt</m:csymbol>
            <m:ci>index</m:ci>
            <m:ci>length</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">post_increment</m:csymbol>
            <m:ci>index</m:ci>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>result</m:ci>
              </drox:dt>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>animationPrefilters</m:ci>
                    <m:ci>index</m:ci>
                  </m:apply>
                  <m:ci>call</m:ci>
                </m:apply>
                <m:ci>animation</m:ci>
                <m:ci>elem</m:ci>
                <m:ci>props</m:ci>
                <drox:ns>animation.opts</drox:ns>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>result</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">return</m:csymbol>
                  <m:ci>result</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:ci>createTweens</m:ci>
          <m:ci>animation</m:ci>
          <m:ci>props</m:ci>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <drox:ns>jQuery.isFunction</drox:ns>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>animation.opts</drox:ns>
              <m:ci>start</m:ci>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <m:apply>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>animation.opts</drox:ns>
                  <m:ci>start</m:ci>
                </m:apply>
                <m:ci>call</m:ci>
              </m:apply>
              <m:ci>elem</m:ci>
              <m:ci>animation</m:ci>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>timer</m:ci>
          </m:apply>
          <m:apply>
            <drox:ns>jQuery.extend</drox:ns>
            <m:ci>tick</m:ci>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>elem</m:ci>
                </drox:dt>
                <m:ci>elem</m:ci>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>anim</m:ci>
                </drox:dt>
                <m:ci>animation</m:ci>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>queue</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>animation.opts</drox:ns>
                  <m:ci>queue</m:ci>
                </m:apply>
              </drox:di>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <drox:ns>animation.progress</drox:ns>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>animation.opts</drox:ns>
                          <m:ci>progress</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:ci>done</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>animation.opts</drox:ns>
                      <m:ci>done</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>animation.opts</drox:ns>
                      <m:ci>complete</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:ci>fail</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>animation.opts</drox:ns>
                  <m:ci>fail</m:ci>
                </m:apply>
              </m:apply>
              <m:ci>always</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>animation.opts</drox:ns>
              <m:ci>always</m:ci>
            </m:apply>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>propFilter</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>props</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>specialEasing</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>value</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>name</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>index</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>easing</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hooks</m:ci>
            </drox:dt>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog2">for_each</m:csymbol>
          <m:ci>index</m:ci>
          <m:ci>props</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>name</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>jQuery.camelCase</drox:ns>
                <m:ci>index</m:ci>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>easing</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>specialEasing</m:ci>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>value</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>props</m:ci>
                <m:ci>index</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.isArray</drox:ns>
                <m:ci>value</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>easing</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>value</m:ci>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>value</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>props</m:ci>
                        <m:ci>index</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>value</m:ci>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                <m:ci>index</m:ci>
                <m:ci>name</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>props</m:ci>
                      <m:ci>name</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:ci>value</m:ci>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog2">delete</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>props</m:ci>
                    <m:ci>index</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>hooks</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.cssHooks</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>hooks</m:ci>
                <m:apply>
                  <m:csymbol cd="ecmascript3">in</m:csymbol>
                  <m:cs>expand</m:cs>
                  <m:ci>hooks</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>value</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>hooks.expand</drox:ns>
                    <m:ci>value</m:ci>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog2">delete</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>props</m:ci>
                    <m:ci>name</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">for_each</m:csymbol>
                  <m:ci>index</m:ci>
                  <m:ci>value</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">in</m:csymbol>
                          <m:ci>index</m:ci>
                          <m:ci>props</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>props</m:ci>
                              <m:ci>index</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>value</m:ci>
                            <m:ci>index</m:ci>
                          </m:apply>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>specialEasing</m:ci>
                              <m:ci>index</m:ci>
                            </m:apply>
                          </drox:dt>
                          <m:ci>easing</m:ci>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>specialEasing</m:ci>
                        <m:ci>name</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:ci>easing</m:ci>
                  </drox:dl>
                </m:apply>
              </drox:else>
            </m:apply>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.Animation</drox:ns>
        </drox:dt>
        <m:apply>
          <drox:ns>jQuery.extend</drox:ns>
          <m:ci>Animation</m:ci>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>tweener</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>props</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>callback</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.isFunction</drox:ns>
                    <m:ci>props</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>callback</m:ci>
                      </drox:dt>
                      <m:ci>props</m:ci>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>props</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                        <m:cs>*</m:cs>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>props</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>props.split</drox:ns>
                          <m:cs>%20</m:cs>
                        </m:apply>
                      </drox:dl>
                    </m:apply>
                  </drox:else>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>prop</m:ci>
                    </drox:dt>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>index</m:ci>
                    </drox:dt>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>length</m:ci>
                    </drox:dt>
                    <drox:ns>props.length</drox:ns>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">for</m:csymbol>
                  <m:csymbol cd="prog2">empty</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="relation1">lt</m:csymbol>
                    <m:ci>index</m:ci>
                    <m:ci>length</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">post_increment</m:csymbol>
                    <m:ci>index</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>prop</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>props</m:ci>
                        <m:ci>index</m:ci>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tweeners</m:ci>
                          <m:ci>prop</m:ci>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>tweeners</m:ci>
                          <m:ci>prop</m:ci>
                        </m:apply>
                        <m:ci>unshift</m:ci>
                      </m:apply>
                      <m:ci>callback</m:ci>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>prefilter</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>callback</m:ci>
                </m:bvar>
                <m:bvar>
                  <m:ci>prepend</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:ci>prepend</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>animationPrefilters.unshift</drox:ns>
                      <m:ci>callback</m:ci>
                    </m:apply>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <drox:ns>animationPrefilters.push</drox:ns>
                        <m:ci>callback</m:ci>
                      </m:apply>
                    </m:apply>
                  </drox:else>
                </m:apply>
              </m:bind>
            </drox:di>
          </drox:dl>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>defaultPrefilter</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>props</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>opts</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>prop</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>index</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>length</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>value</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>dataShow</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>toggle</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>tween</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hooks</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>oldfire</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>anim</m:ci>
            </drox:dt>
            <m:csymbol cd="ecmascript3">this</m:csymbol>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>style</m:ci>
            </drox:dt>
            <drox:ns>elem.style</drox:ns>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>orig</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>handled</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>hidden</m:ci>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <drox:ns>elem.nodeType</drox:ns>
              <m:apply>
                <m:ci>isHidden</m:ci>
                <m:ci>elem</m:ci>
              </m:apply>
            </m:apply>
          </drox:di>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">not</m:csymbol>
            <drox:ns>opts.queue</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>hooks</m:ci>
              </drox:dt>
              <m:apply>
                <drox:ns>jQuery._queueHooks</drox:ns>
                <m:ci>elem</m:ci>
                <m:cs>fx</m:cs>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="relation1">eq</m:csymbol>
                <drox:ns>hooks.unqueued</drox:ns>
                <m:csymbol cd="prog2">null</m:csymbol>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>hooks.unqueued</drox:ns>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>oldfire</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>hooks.empty</drox:ns>
                    <m:ci>fire</m:ci>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>hooks.empty</drox:ns>
                      <m:ci>fire</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <drox:ns>hooks.unqueued</drox:ns>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:ci>oldfire</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">post_increment</m:csymbol>
              <drox:ns>hooks.unqueued</drox:ns>
            </m:apply>
            <m:apply>
              <drox:ns>anim.always</drox:ns>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:apply>
                  <drox:ns>anim.always</drox:ns>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">post_decrement</m:csymbol>
                      <drox:ns>hooks.unqueued</drox:ns>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.queue</drox:ns>
                            <m:ci>elem</m:ci>
                            <m:cs>fx</m:cs>
                          </m:apply>
                          <m:ci>length</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>hooks.empty</drox:ns>
                            <m:ci>fire</m:ci>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:bind>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <drox:ns>elem.nodeType</drox:ns>
              <m:csymbol cd="alg1">one</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>opts.overflow</drox:ns>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">array</m:csymbol>
                <drox:ns>style.overflow</drox:ns>
                <drox:ns>style.overflowX</drox:ns>
                <drox:ns>style.overflowY</drox:ns>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>display</m:cs>
                  </m:apply>
                  <m:cs>inline</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>float</m:cs>
                  </m:apply>
                  <m:cs>none</m:cs>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>style.display</drox:ns>
                      </drox:dt>
                      <m:cs>inline-block</m:cs>
                    </drox:dl>
                  </m:apply>
                  <drox:else>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <drox:ns>style.zoom</drox:ns>
                        </drox:dt>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </drox:dl>
                    </m:apply>
                  </drox:else>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <drox:ns>opts.overflow</drox:ns>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>style.overflow</drox:ns>
              </drox:dt>
              <m:cs>hidden</m:cs>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="logic1">not</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.support</drox:ns>
                  <m:ci>shrinkWrapBlocks</m:ci>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <drox:ns>anim.always</drox:ns>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>style.overflow</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>opts.overflow</drox:ns>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>style.overflowX</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>opts.overflow</drox:ns>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>style.overflowY</drox:ns>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <drox:ns>opts.overflow</drox:ns>
                        <m:cn>2</m:cn>
                      </m:apply>
                    </drox:dl>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog2">for_each</m:csymbol>
          <m:ci>index</m:ci>
          <m:ci>props</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>value</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>props</m:ci>
                <m:ci>index</m:ci>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <drox:ns>rfxtypes.exec</drox:ns>
                <m:ci>value</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">delete</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>props</m:ci>
                    <m:ci>index</m:ci>
                  </m:apply>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>toggle</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>value</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:ci>hidden</m:ci>
                      <m:cs>hide</m:cs>
                      <m:cs>show</m:cs>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">continue</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <drox:ns>handled.push</drox:ns>
                  <m:ci>index</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>length</m:ci>
          </drox:dt>
          <drox:ns>handled.length</drox:ns>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>length</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>dataShow</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
            </drox:dl>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">in</m:csymbol>
                <m:cs>hidden</m:cs>
                <m:ci>dataShow</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>hidden</m:ci>
                  </drox:dt>
                  <drox:ns>dataShow.hidden</drox:ns>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>toggle</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <drox:ns>dataShow.hidden</drox:ns>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:ci>hidden</m:ci>
                  </m:apply>
                </drox:dl>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">if</m:csymbol>
              <m:ci>hidden</m:ci>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:ci>jQuery</m:ci>
                      <m:ci>elem</m:ci>
                    </m:apply>
                    <m:ci>show</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:else>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>anim.done</drox:ns>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:ci>jQuery</m:ci>
                            <m:ci>elem</m:ci>
                          </m:apply>
                          <m:ci>hide</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </m:apply>
              </drox:else>
            </m:apply>
            <m:apply>
              <drox:ns>anim.done</drox:ns>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">local_var</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>prop</m:ci>
                    </drox:dt>
                  </drox:di>
                </drox:dl>
                <m:apply>
                  <drox:ns>jQuery._removeData</drox:ns>
                  <m:ci>elem</m:ci>
                  <m:cs>fxshow</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">for_each</m:csymbol>
                  <m:ci>prop</m:ci>
                  <m:ci>orig</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.style</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:ci>prop</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>orig</m:ci>
                        <m:ci>prop</m:ci>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:bind>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">for</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>index</m:ci>
                </drox:dt>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="relation1">lt</m:csymbol>
                <m:ci>index</m:ci>
                <m:ci>length</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog2">post_increment</m:csymbol>
                <m:ci>index</m:ci>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">block</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>prop</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>handled</m:ci>
                    <m:ci>index</m:ci>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:ci>tween</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>anim.createTween</drox:ns>
                    <m:ci>prop</m:ci>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:ci>hidden</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                        <m:ci>dataShow</m:ci>
                        <m:ci>prop</m:ci>
                      </m:apply>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:dl>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>orig</m:ci>
                      <m:ci>prop</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </drox:dl>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">in</m:csymbol>
                      <m:ci>prop</m:ci>
                      <m:ci>dataShow</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>dataShow</m:ci>
                          <m:ci>prop</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:ns>tween.start</drox:ns>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>hidden</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>tween.end</drox:ns>
                          </drox:dt>
                          <drox:ns>tween.start</drox:ns>
                        </drox:dl>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <drox:ns>tween.start</drox:ns>
                          </drox:dt>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                            <m:csymbol cd="alg1">one</m:csymbol>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>Tween</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>options</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>prop</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>end</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>easing</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">new</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>Tween.prototype</drox:ns>
              <m:ci>init</m:ci>
            </m:apply>
            <m:ci>elem</m:ci>
            <m:ci>options</m:ci>
            <m:ci>prop</m:ci>
            <m:ci>end</m:ci>
            <m:ci>easing</m:ci>
          </m:apply>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.Tween</drox:ns>
        </drox:dt>
        <m:ci>Tween</m:ci>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>Tween.prototype</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>constructor</m:ci>
            </drox:dt>
            <m:ci>Tween</m:ci>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>init</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>options</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>prop</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>end</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>easing</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>unit</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>elem</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>prop</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>prop</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>easing</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>options</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>options</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>start</m:ci>
                  </m:apply>
                </drox:dt>
                <drox:dl>
                  <m:csymbol cd="prog1">assignment</m:csymbol>
                  <drox:dt>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>now</m:ci>
                    </m:apply>
                  </drox:dt>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>cur</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:dl>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>end</m:ci>
                  </m:apply>
                </drox:dt>
                <m:ci>end</m:ci>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>unit</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="logic1">or</m:csymbol>
                </m:apply>
              </drox:dl>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>cur</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>Tween.propHooks</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>prop</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:ci>hooks</m:ci>
                    <drox:ns>hooks.get</drox:ns>
                  </m:apply>
                  <m:apply>
                    <drox:ns>hooks.get</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>Tween.propHooks</drox:ns>
                        <m:ci>_default</m:ci>
                      </m:apply>
                      <m:ci>get</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>run</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>percent</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>eased</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>hooks</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>Tween.propHooks</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>prop</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>options</m:ci>
                  </m:apply>
                  <m:ci>duration</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>pos</m:ci>
                      </m:apply>
                    </drox:dt>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>eased</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>jQuery.easing</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>easing</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:ci>percent</m:ci>
                        <m:apply>
                          <m:csymbol cd="arith1">times</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                              <m:ci>options</m:ci>
                            </m:apply>
                            <m:ci>duration</m:ci>
                          </m:apply>
                          <m:ci>percent</m:ci>
                        </m:apply>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                        <m:csymbol cd="alg1">one</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:csymbol cd="ecmascript3">this</m:csymbol>
                            <m:ci>options</m:ci>
                          </m:apply>
                          <m:ci>duration</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                  </drox:dl>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>pos</m:ci>
                        </m:apply>
                      </drox:dt>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>eased</m:ci>
                        </drox:dt>
                        <m:ci>percent</m:ci>
                      </drox:dl>
                    </drox:dl>
                  </m:apply>
                </drox:else>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>now</m:ci>
                  </m:apply>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith1">times</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>end</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>start</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>eased</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>start</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>options</m:ci>
                  </m:apply>
                  <m:ci>step</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>options</m:ci>
                        </m:apply>
                        <m:ci>step</m:ci>
                      </m:apply>
                      <m:ci>call</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>elem</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>now</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>hooks</m:ci>
                  <drox:ns>hooks.set</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>hooks.set</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>Tween.propHooks</drox:ns>
                          <m:ci>_default</m:ci>
                        </m:apply>
                        <m:ci>set</m:ci>
                      </m:apply>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>Tween.prototype</drox:ns>
              <m:ci>init</m:ci>
            </m:apply>
            <m:ci>prototype</m:ci>
          </m:apply>
        </drox:dt>
        <drox:ns>Tween.prototype</drox:ns>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>Tween.propHooks</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>_default</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>get</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>tween</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>result</m:ci>
                      </drox:dt>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">if</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">and</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="relation1">neq</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>tween.elem</drox:ns>
                          <drox:ns>tween.prop</drox:ns>
                        </m:apply>
                        <m:csymbol cd="prog2">null</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">block</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>tween.elem</drox:ns>
                          <drox:ns>tween.prop</drox:ns>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>result</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>jQuery.css</drox:ns>
                      <drox:ns>tween.elem</drox:ns>
                      <drox:ns>tween.prop</drox:ns>
                      <m:cs/>
                    </m:apply>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">if_exp</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                      <m:ci>result</m:ci>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>set</m:ci>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>tween</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="switch2">cond</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>jQuery.fx</drox:ns>
                            <m:ci>step</m:ci>
                          </m:apply>
                          <drox:ns>tween.prop</drox:ns>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>jQuery.fx</drox:ns>
                            <m:ci>step</m:ci>
                          </m:apply>
                          <drox:ns>tween.prop</drox:ns>
                        </m:apply>
                        <m:ci>tween</m:ci>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <drox:ns>tween.elem</drox:ns>
                            <m:ci>style</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="logic1">or</m:csymbol>
                          </m:apply>
                        </m:apply>
                      </drox:dt>
                      <m:apply>
                        <drox:ns>jQuery.style</drox:ns>
                        <drox:ns>tween.elem</drox:ns>
                        <drox:ns>tween.prop</drox:ns>
                        <m:apply>
                          <m:csymbol cd="arith2">plus</m:csymbol>
                          <drox:ns>tween.now</drox:ns>
                          <drox:ns>tween.unit</drox:ns>
                        </m:apply>
                      </m:apply>
                    </drox:di>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>tween.elem</drox:ns>
                          <drox:ns>tween.prop</drox:ns>
                        </m:apply>
                      </drox:dt>
                      <drox:ns>tween.now</drox:ns>
                    </drox:dl>
                  </drox:dl>
                </m:bind>
              </drox:di>
            </drox:dl>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>Tween.propHooks</drox:ns>
            <m:ci>scrollTop</m:ci>
          </m:apply>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
              <drox:ns>Tween.propHooks</drox:ns>
              <m:ci>scrollLeft</m:ci>
            </m:apply>
          </drox:dt>
          <drox:dl>
            <m:csymbol cd="ecmascript3">object</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>set</m:ci>
              </drox:dt>
              <m:bind>
                <m:csymbol cd="fns1">lambda</m:csymbol>
                <m:bvar>
                  <m:ci>tween</m:ci>
                </m:bvar>
                <m:apply>
                  <m:csymbol cd="prog1">if</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>tween.elem</drox:ns>
                      <m:ci>nodeType</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>tween.elem</drox:ns>
                      <m:ci>parentNode</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <drox:ns>tween.elem</drox:ns>
                          <drox:ns>tween.prop</drox:ns>
                        </m:apply>
                      </drox:dt>
                      <drox:ns>tween.now</drox:ns>
                    </drox:dl>
                  </m:apply>
                </m:apply>
              </m:bind>
            </drox:di>
          </drox:dl>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <m:apply>
          <m:csymbol cd="ecmascript3">array</m:csymbol>
          <m:cs>toggle</m:cs>
          <m:cs>show</m:cs>
          <m:cs>hide</m:cs>
        </m:apply>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>i</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>cssFn</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:di>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>speed</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>easing</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <drox:ns>cssFn.apply</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:csymbol cd="ecmascript3">arguments</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>animate</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:ci>genFx</m:ci>
                      <m:ci>name</m:ci>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </m:apply>
                    <m:ci>speed</m:ci>
                    <m:ci>easing</m:ci>
                    <m:ci>callback</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>fadeTo</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>speed</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>to</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>easing</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:apply>
                                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                                    <m:ci>filter</m:ci>
                                  </m:apply>
                                  <m:ci>isHidden</m:ci>
                                </m:apply>
                                <m:ci>css</m:ci>
                              </m:apply>
                              <m:cs>opacity</m:cs>
                              <m:csymbol cd="alg1">zero</m:csymbol>
                            </m:apply>
                            <m:ci>show</m:ci>
                          </m:apply>
                        </m:apply>
                        <m:ci>end</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci>animate</m:ci>
                  </m:apply>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>opacity</m:ci>
                      </drox:dt>
                      <m:ci>to</m:ci>
                    </drox:di>
                  </drox:dl>
                  <m:ci>speed</m:ci>
                  <m:ci>easing</m:ci>
                  <m:ci>callback</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>animate</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>prop</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>speed</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>easing</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>empty</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.isEmptyObject</drox:ns>
                    <m:ci>prop</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>optall</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.speed</drox:ns>
                    <m:ci>speed</m:ci>
                    <m:ci>easing</m:ci>
                    <m:ci>callback</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>doAnimation</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>anim</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>Animation</m:ci>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.extend</drox:ns>
                            <drox:dl>
                              <m:csymbol cd="ecmascript3">object</m:csymbol>
                            </drox:dl>
                            <m:ci>prop</m:ci>
                          </m:apply>
                          <m:ci>optall</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>doAnimation.finish</drox:ns>
                      </drox:dt>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:apply>
                          <drox:ns>anim.stop</drox:ns>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </m:apply>
                      </m:bind>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>anim.stop</drox:ns>
                          <m:csymbol cd="logic1">true</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>doAnimation.finish</drox:ns>
                </drox:dt>
                <m:ci>doAnimation</m:ci>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>each</m:ci>
                    </m:apply>
                    <m:ci>doAnimation</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>queue</m:ci>
                    </m:apply>
                    <drox:ns>optall.queue</drox:ns>
                    <m:ci>doAnimation</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>stop</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>clearQueue</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>gotoEnd</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>stopQueue</m:ci>
                  </drox:dt>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>hooks</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>stop</m:ci>
                        </drox:dt>
                        <drox:ns>hooks.stop</drox:ns>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog2">delete</m:csymbol>
                      <drox:ns>hooks.stop</drox:ns>
                    </m:apply>
                    <m:apply>
                      <m:ci>stop</m:ci>
                      <m:ci>gotoEnd</m:ci>
                    </m:apply>
                  </m:bind>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <m:ci>type</m:ci>
                  </m:apply>
                  <m:cs>string</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>gotoEnd</m:ci>
                    </drox:dt>
                    <m:ci>clearQueue</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>clearQueue</m:ci>
                    </drox:dt>
                    <m:ci>type</m:ci>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>clearQueue</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                    <m:ci>type</m:ci>
                    <m:csymbol cd="logic1">false</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>queue</m:ci>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">array</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>dequeue</m:ci>
                        </drox:dt>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>index</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="relation1">neq</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:csymbol cd="prog2">null</m:csymbol>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>queueHooks</m:cs>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>timers</m:ci>
                        </drox:dt>
                        <drox:ns>jQuery.timers</drox:ns>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>jQuery._data</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>index</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>data</m:ci>
                              <m:ci>index</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>data</m:ci>
                                <m:ci>index</m:ci>
                              </m:apply>
                              <m:ci>stop</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:ci>stopQueue</m:ci>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>data</m:ci>
                                <m:ci>index</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">for_each</m:csymbol>
                            <m:ci>index</m:ci>
                            <m:ci>data</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog1">block</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog1">if</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="logic1">and</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="logic1">and</m:csymbol>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>data</m:ci>
                                      <m:ci>index</m:ci>
                                    </m:apply>
                                    <m:apply>
                                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                      <m:apply>
                                        <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                        <m:ci>data</m:ci>
                                        <m:ci>index</m:ci>
                                      </m:apply>
                                      <m:ci>stop</m:ci>
                                    </m:apply>
                                  </m:apply>
                                  <m:apply>
                                    <drox:ns>rrun.test</drox:ns>
                                    <m:ci>index</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="prog1">block</m:csymbol>
                                  <m:apply>
                                    <m:ci>stopQueue</m:ci>
                                    <m:apply>
                                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                      <m:ci>data</m:ci>
                                      <m:ci>index</m:ci>
                                    </m:apply>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">for</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>index</m:ci>
                        </drox:dt>
                        <drox:ns>timers.length</drox:ns>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog2">post_decrement</m:csymbol>
                        <m:ci>index</m:ci>
                      </m:apply>
                      <m:csymbol cd="prog2">empty</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>timers</m:ci>
                                  <m:ci>index</m:ci>
                                </m:apply>
                                <m:ci>elem</m:ci>
                              </m:apply>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="logic1">or</m:csymbol>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>timers</m:ci>
                                    <m:ci>index</m:ci>
                                  </m:apply>
                                  <m:ci>anim</m:ci>
                                </m:apply>
                                <m:ci>stop</m:ci>
                              </m:apply>
                              <m:ci>gotoEnd</m:ci>
                            </m:apply>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>dequeue</m:ci>
                              </drox:dt>
                              <m:csymbol cd="logic1">false</m:csymbol>
                            </drox:dl>
                            <m:apply>
                              <drox:ns>timers.splice</drox:ns>
                              <m:ci>index</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.dequeue</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>type</m:ci>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>finish</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>type</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
                  <m:ci>type</m:ci>
                  <m:csymbol cd="logic1">false</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>type</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>each</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>index</m:ci>
                        </drox:dt>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>data</m:ci>
                        </drox:dt>
                        <m:apply>
                          <drox:ns>jQuery._data</drox:ns>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>queue</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>data</m:ci>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>queue</m:cs>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>hooks</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>data</m:ci>
                          <m:apply>
                            <m:csymbol cd="arith2">plus</m:csymbol>
                            <m:ci>type</m:ci>
                            <m:cs>queueHooks</m:cs>
                          </m:apply>
                        </m:apply>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>timers</m:ci>
                        </drox:dt>
                        <drox:ns>jQuery.timers</drox:ns>
                      </drox:di>
                      <drox:di>
                        <drox:dt>
                          <m:ci>length</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="prog2">if_exp</m:csymbol>
                          <m:ci>queue</m:ci>
                          <drox:ns>queue.length</drox:ns>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <drox:ns>data.finish</drox:ns>
                      </drox:dt>
                      <m:csymbol cd="logic1">true</m:csymbol>
                    </drox:dl>
                    <m:apply>
                      <drox:ns>jQuery.queue</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>type</m:ci>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">array</m:csymbol>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:ci>hooks</m:ci>
                          <drox:ns>hooks.cur</drox:ns>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>hooks.cur</drox:ns>
                          <m:ci>finish</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <drox:ns>hooks.cur</drox:ns>
                              <m:ci>finish</m:ci>
                            </m:apply>
                            <m:ci>call</m:ci>
                          </m:apply>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">for</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>index</m:ci>
                        </drox:dt>
                        <drox:ns>timers.length</drox:ns>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="prog2">post_decrement</m:csymbol>
                        <m:ci>index</m:ci>
                      </m:apply>
                      <m:csymbol cd="prog2">empty</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>timers</m:ci>
                                  <m:ci>index</m:ci>
                                </m:apply>
                                <m:ci>elem</m:ci>
                              </m:apply>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>timers</m:ci>
                                  <m:ci>index</m:ci>
                                </m:apply>
                                <m:ci>queue</m:ci>
                              </m:apply>
                              <m:ci>type</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>timers</m:ci>
                                    <m:ci>index</m:ci>
                                  </m:apply>
                                  <m:ci>anim</m:ci>
                                </m:apply>
                                <m:ci>stop</m:ci>
                              </m:apply>
                              <m:csymbol cd="logic1">true</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <drox:ns>timers.splice</drox:ns>
                              <m:ci>index</m:ci>
                              <m:csymbol cd="alg1">one</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">for</m:csymbol>
                      <drox:dl>
                        <m:csymbol cd="prog1">assignment</m:csymbol>
                        <drox:dt>
                          <m:ci>index</m:ci>
                        </drox:dt>
                        <m:csymbol cd="alg1">zero</m:csymbol>
                      </drox:dl>
                      <m:apply>
                        <m:csymbol cd="relation1">lt</m:csymbol>
                        <m:ci>index</m:ci>
                        <m:ci>length</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog2">post_increment</m:csymbol>
                        <m:ci>index</m:ci>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">and</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>queue</m:ci>
                              <m:ci>index</m:ci>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>queue</m:ci>
                                <m:ci>index</m:ci>
                              </m:apply>
                              <m:ci>finish</m:ci>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <m:apply>
                                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                    <m:ci>queue</m:ci>
                                    <m:ci>index</m:ci>
                                  </m:apply>
                                  <m:ci>finish</m:ci>
                                </m:apply>
                                <m:ci>call</m:ci>
                              </m:apply>
                              <m:csymbol cd="ecmascript3">this</m:csymbol>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">delete</m:csymbol>
                      <drox:ns>data.finish</drox:ns>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>genFx</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>type</m:ci>
        </m:bvar>
        <m:bvar>
          <m:ci>includeWidth</m:ci>
        </m:bvar>
        <drox:dl>
          <m:csymbol cd="prog1">local_var</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>which</m:ci>
            </drox:dt>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>attrs</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>height</m:ci>
                </drox:dt>
                <m:ci>type</m:ci>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </drox:di>
        </drox:dl>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <m:ci>includeWidth</m:ci>
          </drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">if_exp</m:csymbol>
            <m:ci>includeWidth</m:ci>
            <m:csymbol cd="alg1">one</m:csymbol>
            <m:csymbol cd="alg1">zero</m:csymbol>
          </m:apply>
        </drox:dl>
        <m:apply>
          <m:csymbol cd="prog1">for</m:csymbol>
          <m:csymbol cd="prog2">empty</m:csymbol>
          <m:apply>
            <m:csymbol cd="relation1">lt</m:csymbol>
            <m:ci>i</m:ci>
            <m:cn>4</m:cn>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog2">assignment_operator</m:csymbol>
            <drox:dt>
              <m:ci>i</m:ci>
            </drox:dt>
            <m:csymbol cd="arith2">plus</m:csymbol>
            <m:apply>
              <m:csymbol cd="arith1">minus</m:csymbol>
              <m:cn>2</m:cn>
              <m:ci>includeWidth</m:ci>
            </m:apply>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:ci>which</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:ci>cssExpand</m:ci>
                <m:ci>i</m:ci>
              </m:apply>
            </drox:dl>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>attrs</m:ci>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <m:cs>margin</m:cs>
                    <m:ci>which</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:ci>attrs</m:ci>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:cs>padding</m:cs>
                      <m:ci>which</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:dt>
                <m:ci>type</m:ci>
              </drox:dl>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">if</m:csymbol>
          <m:ci>includeWidth</m:ci>
          <m:apply>
            <m:csymbol cd="prog1">block</m:csymbol>
            <drox:dl>
              <m:csymbol cd="prog1">assignment</m:csymbol>
              <drox:dt>
                <drox:ns>attrs.opacity</drox:ns>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>attrs.width</drox:ns>
                </drox:dt>
                <m:ci>type</m:ci>
              </drox:dl>
            </drox:dl>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:ci>attrs</m:ci>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>slideDown</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>genFx</m:ci>
              <m:cs>show</m:cs>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>slideUp</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>genFx</m:ci>
              <m:cs>hide</m:cs>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>slideToggle</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>genFx</m:ci>
              <m:cs>toggle</m:cs>
            </m:apply>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>fadeIn</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>opacity</m:ci>
                </drox:dt>
                <m:cs>show</m:cs>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>fadeOut</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>opacity</m:ci>
                </drox:dt>
                <m:cs>hide</m:cs>
              </drox:di>
            </drox:dl>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>fadeToggle</m:ci>
            </drox:dt>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>opacity</m:ci>
                </drox:dt>
                <m:cs>toggle</m:cs>
              </drox:di>
            </drox:dl>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>props</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>name</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>speed</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>easing</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>callback</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>animate</m:ci>
                  </m:apply>
                  <m:ci>props</m:ci>
                  <m:ci>speed</m:ci>
                  <m:ci>easing</m:ci>
                  <m:ci>callback</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.speed</drox:ns>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>speed</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>easing</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>fn</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>opt</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:ci>speed</m:ci>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                      <m:ci>speed</m:ci>
                    </m:apply>
                    <m:cs>object</m:cs>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <drox:ns>jQuery.extend</drox:ns>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                  <m:ci>speed</m:ci>
                </m:apply>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>complete</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>duration</m:ci>
                    </drox:dt>
                    <m:ci>speed</m:ci>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>easing</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </drox:di>
                </drox:dl>
              </m:apply>
            </drox:di>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>opt.duration</drox:ns>
            </drox:dt>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <drox:ns>jQuery.fx</drox:ns>
                <m:ci>off</m:ci>
              </m:apply>
              <m:csymbol cd="alg1">zero</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog2">if_exp</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                    <drox:ns>opt.duration</drox:ns>
                  </m:apply>
                  <m:cs>number</m:cs>
                </m:apply>
                <drox:ns>opt.duration</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">in</m:csymbol>
                    <drox:ns>opt.duration</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.fx</drox:ns>
                      <m:ci>speeds</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.fx</drox:ns>
                      <m:ci>speeds</m:ci>
                    </m:apply>
                    <drox:ns>opt.duration</drox:ns>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>jQuery.fx</drox:ns>
                      <m:ci>speeds</m:ci>
                    </m:apply>
                    <m:ci>_default</m:ci>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">or</m:csymbol>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <drox:ns>opt.queue</drox:ns>
                </drox:dt>
                <m:cs>fx</m:cs>
              </drox:dl>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>opt.old</drox:ns>
            </drox:dt>
            <drox:ns>opt.complete</drox:ns>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <drox:ns>opt.complete</drox:ns>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <drox:ns>opt.old</drox:ns>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>opt.old</drox:ns>
                      <m:ci>call</m:ci>
                    </m:apply>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <drox:ns>opt.queue</drox:ns>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.dequeue</drox:ns>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <drox:ns>opt.queue</drox:ns>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <m:ci>opt</m:ci>
          </m:apply>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.easing</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>linear</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>p</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>p</m:ci>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>swing</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>p</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="arith1">minus</m:csymbol>
                  <m:cn>0.5</m:cn>
                  <m:apply>
                    <m:csymbol cd="arith1">divide</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="transc1">cos</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith1">times</m:csymbol>
                        <m:ci>p</m:ci>
                        <drox:ns>Math.PI</drox:ns>
                      </m:apply>
                    </m:apply>
                    <m:cn>2</m:cn>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.timers</drox:ns>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="ecmascript3">array</m:csymbol>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.fx</drox:ns>
        </drox:dt>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>Tween.prototype</drox:ns>
          <m:ci>init</m:ci>
        </m:apply>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>tick</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>timer</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>timers</m:ci>
              </drox:dt>
              <drox:ns>jQuery.timers</drox:ns>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>i</m:ci>
              </drox:dt>
              <m:csymbol cd="alg1">zero</m:csymbol>
            </drox:di>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>fxNow</m:ci>
            </drox:dt>
            <m:apply>
              <drox:ns>jQuery.now</drox:ns>
            </m:apply>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">for</m:csymbol>
            <m:csymbol cd="prog2">empty</m:csymbol>
            <m:apply>
              <m:csymbol cd="relation1">lt</m:csymbol>
              <m:ci>i</m:ci>
              <drox:ns>timers.length</drox:ns>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog2">post_increment</m:csymbol>
              <m:ci>i</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>timer</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                  <m:ci>timers</m:ci>
                  <m:ci>i</m:ci>
                </m:apply>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">and</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="logic1">not</m:csymbol>
                    <m:apply>
                      <m:ci>timer</m:ci>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="ecmascript3">selector</m:csymbol>
                      <m:ci>timers</m:ci>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:ci>timer</m:ci>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <drox:ns>timers.splice</drox:ns>
                    <m:apply>
                      <m:csymbol cd="prog2">post_decrement</m:csymbol>
                      <m:ci>i</m:ci>
                    </m:apply>
                    <m:csymbol cd="alg1">one</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <drox:ns>timers.length</drox:ns>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.fx</drox:ns>
                  <m:ci>stop</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>fxNow</m:ci>
            </drox:dt>
            <m:csymbol cd="ecmascript3">undefined</m:csymbol>
          </drox:dl>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>timer</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>timer</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">and</m:csymbol>
              <m:apply>
                <m:ci>timer</m:ci>
              </m:apply>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.timers</drox:ns>
                  <m:ci>push</m:ci>
                </m:apply>
                <m:ci>timer</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.fx</drox:ns>
                  <m:ci>start</m:ci>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>interval</m:ci>
          </m:apply>
        </drox:dt>
        <m:cn>13</m:cn>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>start</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:ci>timerId</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>timerId</m:ci>
                </drox:dt>
                <m:apply>
                  <m:ci>setInterval</m:ci>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.fx</drox:ns>
                    <m:ci>tick</m:ci>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <drox:ns>jQuery.fx</drox:ns>
                    <m:ci>interval</m:ci>
                  </m:apply>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>stop</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:apply>
            <m:ci>clearInterval</m:ci>
            <m:ci>timerId</m:ci>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>timerId</m:ci>
            </drox:dt>
            <m:csymbol cd="prog2">null</m:csymbol>
          </drox:dl>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>speeds</m:ci>
          </m:apply>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>slow</m:ci>
            </drox:dt>
            <m:cn>600</m:cn>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>fast</m:ci>
            </drox:dt>
            <m:cn>200</m:cn>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>_default</m:ci>
            </drox:dt>
            <m:cn>400</m:cn>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fx</drox:ns>
            <m:ci>step</m:ci>
          </m:apply>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">and</m:csymbol>
          <drox:ns>jQuery.expr</drox:ns>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.expr</drox:ns>
            <m:ci>filters</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <drox:ns>jQuery.expr</drox:ns>
                  <m:ci>filters</m:ci>
                </m:apply>
                <m:ci>animated</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.grep</drox:ns>
                    <drox:ns>jQuery.timers</drox:ns>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>fn</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:csymbol cd="prog1">return</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                          <m:ci>elem</m:ci>
                          <drox:ns>fn.elem</drox:ns>
                        </m:apply>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                  <m:ci>length</m:ci>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:apply>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>jQuery.fn</drox:ns>
            <m:ci>offset</m:ci>
          </m:apply>
        </drox:dt>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>options</m:ci>
          </m:bvar>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <drox:ns>arguments.length</drox:ns>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:csymbol cd="prog2">if_exp</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                    <m:ci>options</m:ci>
                    <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                  </m:apply>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:ci>each</m:ci>
                    </m:apply>
                    <m:bind>
                      <m:csymbol cd="fns1">lambda</m:csymbol>
                      <m:bvar>
                        <m:ci>i</m:ci>
                      </m:bvar>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <drox:ns>jQuery.offset</drox:ns>
                          <m:ci>setOffset</m:ci>
                        </m:apply>
                        <m:csymbol cd="ecmascript3">this</m:csymbol>
                        <m:ci>options</m:ci>
                        <m:ci>i</m:ci>
                      </m:apply>
                    </m:bind>
                  </m:apply>
                </m:apply>
              </m:apply>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>docElem</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>win</m:ci>
              </drox:dt>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>box</m:ci>
              </drox:dt>
              <drox:dl>
                <m:csymbol cd="ecmascript3">object</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>top</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>left</m:ci>
                  </drox:dt>
                  <m:csymbol cd="alg1">zero</m:csymbol>
                </drox:di>
              </drox:dl>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>elem</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <m:csymbol cd="ecmascript3">this</m:csymbol>
                <m:csymbol cd="alg1">zero</m:csymbol>
              </m:apply>
            </drox:di>
            <drox:di>
              <drox:dt>
                <m:ci>doc</m:ci>
              </drox:dt>
              <m:apply>
                <m:csymbol cd="logic1">and</m:csymbol>
                <m:ci>elem</m:ci>
                <drox:ns>elem.ownerDocument</drox:ns>
              </m:apply>
            </drox:di>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:ci>doc</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
              </m:apply>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>docElem</m:ci>
            </drox:dt>
            <drox:ns>doc.documentElement</drox:ns>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="logic1">not</m:csymbol>
              <m:apply>
                <drox:ns>jQuery.contains</drox:ns>
                <m:ci>docElem</m:ci>
                <m:ci>elem</m:ci>
              </m:apply>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>box</m:ci>
              </m:apply>
            </m:apply>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog1">if</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_neq</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                <drox:ns>elem.getBoundingClientRect</drox:ns>
              </m:apply>
              <m:ci>core_strundefined</m:ci>
            </m:apply>
            <m:apply>
              <m:csymbol cd="prog1">block</m:csymbol>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:ci>box</m:ci>
                </drox:dt>
                <m:apply>
                  <drox:ns>elem.getBoundingClientRect</drox:ns>
                </m:apply>
              </drox:dl>
            </m:apply>
          </m:apply>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:ci>win</m:ci>
            </drox:dt>
            <m:apply>
              <m:ci>getWindow</m:ci>
              <m:ci>doc</m:ci>
            </m:apply>
          </drox:dl>
          <m:apply>
            <m:csymbol cd="prog1">return</m:csymbol>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>top</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith1">minus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <drox:ns>box.top</drox:ns>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>left</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith1">minus</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="arith2">plus</m:csymbol>
                    <drox:ns>box.left</drox:ns>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                  </m:apply>
                  <m:apply>
                    <m:csymbol cd="logic1">or</m:csymbol>
                  </m:apply>
                </m:apply>
              </drox:di>
            </drox:dl>
          </m:apply>
        </m:bind>
      </drox:dl>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>jQuery.offset</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>setOffset</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>elem</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>options</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>i</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>position</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>position</m:cs>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:ci>position</m:ci>
                  <m:cs>static</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:apply>
                        <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                        <drox:ns>elem.style</drox:ns>
                        <m:ci>position</m:ci>
                      </m:apply>
                    </drox:dt>
                    <m:cs>relative</m:cs>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>curElem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:ci>jQuery</m:ci>
                    <m:ci>elem</m:ci>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>curOffset</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>curElem.offset</drox:ns>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>curCSSTop</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>top</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>curCSSLeft</m:ci>
                  </drox:dt>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>left</m:cs>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>calculatePosition</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="logic1">and</m:csymbol>
                    <m:apply>
                      <m:csymbol cd="logic1">or</m:csymbol>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="relation1">gt</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.inArray</drox:ns>
                        <m:cs>auto</m:cs>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">array</m:csymbol>
                          <m:ci>curCSSTop</m:ci>
                          <m:ci>curCSSLeft</m:ci>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="arith1">unary_minus</m:csymbol>
                        <m:csymbol cd="alg1">one</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:apply>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>props</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>curPosition</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>curTop</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>curLeft</m:ci>
                  </drox:dt>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:ci>calculatePosition</m:ci>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>curPosition</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>curElem.position</drox:ns>
                    </m:apply>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>curTop</m:ci>
                    </drox:dt>
                    <drox:ns>curPosition.top</drox:ns>
                  </drox:dl>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>curLeft</m:ci>
                    </drox:dt>
                    <drox:ns>curPosition.left</drox:ns>
                  </drox:dl>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>curTop</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>curLeft</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.isFunction</drox:ns>
                  <m:ci>options</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>options</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>options.call</drox:ns>
                      <m:ci>elem</m:ci>
                      <m:ci>i</m:ci>
                      <m:ci>curOffset</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <drox:ns>options.top</drox:ns>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>props.top</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith1">minus</m:csymbol>
                        <drox:ns>options.top</drox:ns>
                        <drox:ns>curOffset.top</drox:ns>
                      </m:apply>
                      <m:ci>curTop</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="relation1">neq</m:csymbol>
                  <drox:ns>options.left</drox:ns>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <drox:ns>props.left</drox:ns>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith1">minus</m:csymbol>
                        <drox:ns>options.left</drox:ns>
                        <drox:ns>curOffset.left</drox:ns>
                      </m:apply>
                      <m:ci>curLeft</m:ci>
                    </m:apply>
                  </drox:dl>
                </m:apply>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">in</m:csymbol>
                  <m:cs>using</m:cs>
                  <m:ci>options</m:ci>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:apply>
                      <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                      <drox:ns>options.using</drox:ns>
                      <m:ci>call</m:ci>
                    </m:apply>
                    <m:ci>elem</m:ci>
                    <m:ci>props</m:ci>
                  </m:apply>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <m:apply>
                      <drox:ns>curElem.css</drox:ns>
                      <m:ci>props</m:ci>
                    </m:apply>
                  </m:apply>
                </drox:else>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <m:apply>
          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
          <drox:ns>jQuery.fn</drox:ns>
          <m:ci>extend</m:ci>
        </m:apply>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>position</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="logic1">not</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                  </m:apply>
                </m:apply>
              </m:apply>
              <drox:dl>
                <m:csymbol cd="prog1">local_var</m:csymbol>
                <drox:di>
                  <drox:dt>
                    <m:ci>offsetParent</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>offset</m:ci>
                  </drox:dt>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>parentOffset</m:ci>
                  </drox:dt>
                  <drox:dl>
                    <m:csymbol cd="ecmascript3">object</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>top</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>left</m:ci>
                      </drox:dt>
                      <m:csymbol cd="alg1">zero</m:csymbol>
                    </drox:di>
                  </drox:dl>
                </drox:di>
                <drox:di>
                  <drox:dt>
                    <m:ci>elem</m:ci>
                  </drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:csymbol cd="alg1">zero</m:csymbol>
                  </m:apply>
                </drox:di>
              </drox:dl>
              <m:apply>
                <m:csymbol cd="prog1">if</m:csymbol>
                <m:apply>
                  <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                  <m:apply>
                    <drox:ns>jQuery.css</drox:ns>
                    <m:ci>elem</m:ci>
                    <m:cs>position</m:cs>
                  </m:apply>
                  <m:cs>fixed</m:cs>
                </m:apply>
                <m:apply>
                  <m:csymbol cd="prog1">block</m:csymbol>
                  <drox:dl>
                    <m:csymbol cd="prog1">assignment</m:csymbol>
                    <drox:dt>
                      <m:ci>offset</m:ci>
                    </drox:dt>
                    <m:apply>
                      <drox:ns>elem.getBoundingClientRect</drox:ns>
                    </m:apply>
                  </drox:dl>
                </m:apply>
                <drox:else>
                  <m:apply>
                    <m:csymbol cd="prog1">block</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>offsetParent</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>offsetParent</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog1">assignment</m:csymbol>
                      <drox:dt>
                        <m:ci>offset</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:apply>
                          <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                          <m:csymbol cd="ecmascript3">this</m:csymbol>
                          <m:ci>offset</m:ci>
                        </m:apply>
                      </m:apply>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">not</m:csymbol>
                        <m:apply>
                          <drox:ns>jQuery.nodeName</drox:ns>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">selector</m:csymbol>
                            <m:ci>offsetParent</m:ci>
                            <m:csymbol cd="alg1">zero</m:csymbol>
                          </m:apply>
                          <m:cs>html</m:cs>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>parentOffset</m:ci>
                          </drox:dt>
                          <m:apply>
                            <drox:ns>offsetParent.offset</drox:ns>
                          </m:apply>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <drox:dl>
                      <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                      <drox:dt>
                        <drox:ns>parentOffset.top</drox:ns>
                      </drox:dt>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.css</drox:ns>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>offsetParent</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:cs>borderTopWidth</m:cs>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </drox:dl>
                    <drox:dl>
                      <m:csymbol cd="prog2">assignment_operator</m:csymbol>
                      <drox:dt>
                        <drox:ns>parentOffset.left</drox:ns>
                      </drox:dt>
                      <m:csymbol cd="arith2">plus</m:csymbol>
                      <m:apply>
                        <drox:ns>jQuery.css</drox:ns>
                        <m:apply>
                          <m:csymbol cd="ecmascript3">selector</m:csymbol>
                          <m:ci>offsetParent</m:ci>
                          <m:csymbol cd="alg1">zero</m:csymbol>
                        </m:apply>
                        <m:cs>borderLeftWidth</m:cs>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </drox:dl>
                  </m:apply>
                </drox:else>
              </m:apply>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <drox:dl>
                  <m:csymbol cd="ecmascript3">object</m:csymbol>
                  <drox:di>
                    <drox:dt>
                      <m:ci>top</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith1">minus</m:csymbol>
                        <drox:ns>offset.top</drox:ns>
                        <drox:ns>parentOffset.top</drox:ns>
                      </m:apply>
                      <m:apply>
                        <drox:ns>jQuery.css</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:cs>marginTop</m:cs>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                  <drox:di>
                    <drox:dt>
                      <m:ci>left</m:ci>
                    </drox:dt>
                    <m:apply>
                      <m:csymbol cd="arith1">minus</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="arith1">minus</m:csymbol>
                        <drox:ns>offset.left</drox:ns>
                        <drox:ns>parentOffset.left</drox:ns>
                      </m:apply>
                      <m:apply>
                        <drox:ns>jQuery.css</drox:ns>
                        <m:ci>elem</m:ci>
                        <m:cs>marginLeft</m:cs>
                        <m:csymbol cd="logic1">true</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </drox:di>
                </drox:dl>
              </m:apply>
            </m:bind>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>offsetParent</m:ci>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <m:apply>
                    <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                    <m:csymbol cd="ecmascript3">this</m:csymbol>
                    <m:ci>map</m:ci>
                  </m:apply>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>offsetParent</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">while</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <m:ci>offsetParent</m:ci>
                        <m:apply>
                          <m:csymbol cd="logic1">and</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="logic1">not</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.nodeName</drox:ns>
                              <m:ci>offsetParent</m:ci>
                              <m:cs>html</m:cs>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <m:apply>
                              <drox:ns>jQuery.css</drox:ns>
                              <m:ci>offsetParent</m:ci>
                              <m:cs>position</m:cs>
                            </m:apply>
                            <m:cs>static</m:cs>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <drox:dl>
                          <m:csymbol cd="prog1">assignment</m:csymbol>
                          <drox:dt>
                            <m:ci>offsetParent</m:ci>
                          </drox:dt>
                          <drox:ns>offsetParent.offsetParent</drox:ns>
                        </drox:dl>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">return</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </m:apply>
                  </m:bind>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:di>
        </drox:dl>
      </m:apply>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>scrollLeft</m:ci>
            </drox:dt>
            <m:cs>pageXOffset</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>scrollTop</m:ci>
            </drox:dt>
            <m:cs>pageYOffset</m:cs>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>method</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>prop</m:ci>
          </m:bvar>
          <drox:dl>
            <m:csymbol cd="prog1">local_var</m:csymbol>
            <drox:di>
              <drox:dt>
                <m:ci>top</m:ci>
              </drox:dt>
              <m:apply>
                <m:apply>
                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">regexp</m:csymbol>
                    <m:cs>/Y/</m:cs>
                  </m:apply>
                  <m:ci>test</m:ci>
                </m:apply>
                <m:ci>prop</m:ci>
              </m:apply>
            </drox:di>
          </drox:dl>
          <drox:dl>
            <m:csymbol cd="prog1">assignment</m:csymbol>
            <drox:dt>
              <m:apply>
                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                <drox:ns>jQuery.fn</drox:ns>
                <m:ci>method</m:ci>
              </m:apply>
            </drox:dt>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>val</m:ci>
              </m:bvar>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:apply>
                  <drox:ns>jQuery.access</drox:ns>
                  <m:csymbol cd="ecmascript3">this</m:csymbol>
                  <m:bind>
                    <m:csymbol cd="fns1">lambda</m:csymbol>
                    <m:bvar>
                      <m:ci>elem</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>method</m:ci>
                    </m:bvar>
                    <m:bvar>
                      <m:ci>val</m:ci>
                    </m:bvar>
                    <drox:dl>
                      <m:csymbol cd="prog1">local_var</m:csymbol>
                      <drox:di>
                        <drox:dt>
                          <m:ci>win</m:ci>
                        </drox:dt>
                        <m:apply>
                          <m:ci>getWindow</m:ci>
                          <m:ci>elem</m:ci>
                        </m:apply>
                      </drox:di>
                    </drox:dl>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:apply>
                        <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                        <m:ci>val</m:ci>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:ci>win</m:ci>
                            <m:apply>
                              <m:csymbol cd="prog2">if_exp</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">in</m:csymbol>
                                <m:ci>prop</m:ci>
                                <m:ci>win</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>win</m:ci>
                                <m:ci>prop</m:ci>
                              </m:apply>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>win.document</drox:ns>
                                  <m:ci>documentElement</m:ci>
                                </m:apply>
                                <m:ci>method</m:ci>
                              </m:apply>
                            </m:apply>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">selector</m:csymbol>
                              <m:ci>elem</m:ci>
                              <m:ci>method</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                    </m:apply>
                    <m:apply>
                      <m:csymbol cd="prog1">if</m:csymbol>
                      <m:ci>win</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog1">block</m:csymbol>
                        <m:apply>
                          <drox:ns>win.scrollTo</drox:ns>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="logic1">not</m:csymbol>
                              <m:ci>top</m:ci>
                            </m:apply>
                            <m:ci>val</m:ci>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:ci>jQuery</m:ci>
                                  <m:ci>win</m:ci>
                                </m:apply>
                                <m:ci>scrollLeft</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:ci>top</m:ci>
                            <m:ci>val</m:ci>
                            <m:apply>
                              <m:apply>
                                <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                <m:apply>
                                  <m:ci>jQuery</m:ci>
                                  <m:ci>win</m:ci>
                                </m:apply>
                                <m:ci>scrollTop</m:ci>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:apply>
                      <drox:else>
                        <m:apply>
                          <m:csymbol cd="prog1">block</m:csymbol>
                          <drox:dl>
                            <m:csymbol cd="prog1">assignment</m:csymbol>
                            <drox:dt>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:ci>elem</m:ci>
                                <m:ci>method</m:ci>
                              </m:apply>
                            </drox:dt>
                            <m:ci>val</m:ci>
                          </drox:dl>
                        </m:apply>
                      </drox:else>
                    </m:apply>
                  </m:bind>
                  <m:ci>method</m:ci>
                  <m:ci>val</m:ci>
                  <drox:ns>arguments.length</drox:ns>
                  <m:csymbol cd="prog2">null</m:csymbol>
                </m:apply>
              </m:apply>
            </m:bind>
          </drox:dl>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="ecmascript3">function</m:csymbol>
        <drox:dt>
          <m:ci>getWindow</m:ci>
        </drox:dt>
        <m:bvar>
          <m:ci>elem</m:ci>
        </m:bvar>
        <m:apply>
          <m:csymbol cd="prog1">return</m:csymbol>
          <m:apply>
            <m:csymbol cd="prog2">if_exp</m:csymbol>
            <m:apply>
              <drox:ns>jQuery.isWindow</drox:ns>
              <m:ci>elem</m:ci>
            </m:apply>
            <m:ci>elem</m:ci>
            <m:apply>
              <m:csymbol cd="prog2">if_exp</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                <drox:ns>elem.nodeType</drox:ns>
                <m:cn>9</m:cn>
              </m:apply>
              <m:apply>
                <m:csymbol cd="logic1">or</m:csymbol>
              </m:apply>
              <m:csymbol cd="logic1">false</m:csymbol>
            </m:apply>
          </m:apply>
        </m:apply>
      </drox:dl>
      <m:apply>
        <drox:ns>jQuery.each</drox:ns>
        <drox:dl>
          <m:csymbol cd="ecmascript3">object</m:csymbol>
          <drox:di>
            <drox:dt>
              <m:ci>Height</m:ci>
            </drox:dt>
            <m:cs>height</m:cs>
          </drox:di>
          <drox:di>
            <drox:dt>
              <m:ci>Width</m:ci>
            </drox:dt>
            <m:cs>width</m:cs>
          </drox:di>
        </drox:dl>
        <m:bind>
          <m:csymbol cd="fns1">lambda</m:csymbol>
          <m:bvar>
            <m:ci>name</m:ci>
          </m:bvar>
          <m:bvar>
            <m:ci>type</m:ci>
          </m:bvar>
          <m:apply>
            <drox:ns>jQuery.each</drox:ns>
            <drox:dl>
              <m:csymbol cd="ecmascript3">object</m:csymbol>
              <drox:di>
                <drox:dt>
                  <m:ci>padding</m:ci>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:cs>inner</m:cs>
                  <m:ci>name</m:ci>
                </m:apply>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci>content</m:ci>
                </drox:dt>
                <m:ci>type</m:ci>
              </drox:di>
              <drox:di>
                <drox:dt>
                  <m:ci/>
                </drox:dt>
                <m:apply>
                  <m:csymbol cd="arith2">plus</m:csymbol>
                  <m:cs>outer</m:cs>
                  <m:ci>name</m:ci>
                </m:apply>
              </drox:di>
            </drox:dl>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:bvar>
                <m:ci>defaultExtra</m:ci>
              </m:bvar>
              <m:bvar>
                <m:ci>funcName</m:ci>
              </m:bvar>
              <drox:dl>
                <m:csymbol cd="prog1">assignment</m:csymbol>
                <drox:dt>
                  <m:apply>
                    <m:csymbol cd="ecmascript3">selector</m:csymbol>
                    <drox:ns>jQuery.fn</drox:ns>
                    <m:ci>funcName</m:ci>
                  </m:apply>
                </drox:dt>
                <m:bind>
                  <m:csymbol cd="fns1">lambda</m:csymbol>
                  <m:bvar>
                    <m:ci>margin</m:ci>
                  </m:bvar>
                  <m:bvar>
                    <m:ci>value</m:ci>
                  </m:bvar>
                  <drox:dl>
                    <m:csymbol cd="prog1">local_var</m:csymbol>
                    <drox:di>
                      <drox:dt>
                        <m:ci>chainable</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">and</m:csymbol>
                        <drox:ns>arguments.length</drox:ns>
                        <m:apply>
                          <m:csymbol cd="logic1">or</m:csymbol>
                        </m:apply>
                      </m:apply>
                    </drox:di>
                    <drox:di>
                      <drox:dt>
                        <m:ci>extra</m:ci>
                      </drox:dt>
                      <m:apply>
                        <m:csymbol cd="logic1">or</m:csymbol>
                      </m:apply>
                    </drox:di>
                  </drox:dl>
                  <m:apply>
                    <m:csymbol cd="prog1">return</m:csymbol>
                    <m:apply>
                      <drox:ns>jQuery.access</drox:ns>
                      <m:csymbol cd="ecmascript3">this</m:csymbol>
                      <m:bind>
                        <m:csymbol cd="fns1">lambda</m:csymbol>
                        <m:bvar>
                          <m:ci>elem</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>type</m:ci>
                        </m:bvar>
                        <m:bvar>
                          <m:ci>value</m:ci>
                        </m:bvar>
                        <drox:dl>
                          <m:csymbol cd="prog1">local_var</m:csymbol>
                          <drox:di>
                            <drox:dt>
                              <m:ci>doc</m:ci>
                            </drox:dt>
                          </drox:di>
                        </drox:dl>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <drox:ns>jQuery.isWindow</drox:ns>
                            <m:ci>elem</m:ci>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="prog2">namespace_selector</m:csymbol>
                                  <drox:ns>elem.document</drox:ns>
                                  <m:ci>documentElement</m:ci>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="arith2">plus</m:csymbol>
                                  <m:cs>client</m:cs>
                                  <m:ci>name</m:ci>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">if</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                            <drox:ns>elem.nodeType</drox:ns>
                            <m:cn>9</m:cn>
                          </m:apply>
                          <m:apply>
                            <m:csymbol cd="prog1">block</m:csymbol>
                            <drox:dl>
                              <m:csymbol cd="prog1">assignment</m:csymbol>
                              <drox:dt>
                                <m:ci>doc</m:ci>
                              </drox:dt>
                              <drox:ns>elem.documentElement</drox:ns>
                            </drox:dl>
                            <m:apply>
                              <m:csymbol cd="prog1">return</m:csymbol>
                              <m:apply>
                                <m:csymbol cd="minmax1">max</m:csymbol>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <drox:ns>elem.body</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>scroll</m:cs>
                                    <m:ci>name</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>doc</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>scroll</m:cs>
                                    <m:ci>name</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <drox:ns>elem.body</drox:ns>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>offset</m:cs>
                                    <m:ci>name</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>doc</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>offset</m:cs>
                                    <m:ci>name</m:ci>
                                  </m:apply>
                                </m:apply>
                                <m:apply>
                                  <m:csymbol cd="ecmascript3">selector</m:csymbol>
                                  <m:ci>doc</m:ci>
                                  <m:apply>
                                    <m:csymbol cd="arith2">plus</m:csymbol>
                                    <m:cs>client</m:cs>
                                    <m:ci>name</m:ci>
                                  </m:apply>
                                </m:apply>
                              </m:apply>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                        <m:apply>
                          <m:csymbol cd="prog1">return</m:csymbol>
                          <m:apply>
                            <m:csymbol cd="prog2">if_exp</m:csymbol>
                            <m:apply>
                              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
                              <m:ci>value</m:ci>
                              <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                            </m:apply>
                            <m:apply>
                              <drox:ns>jQuery.css</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>type</m:ci>
                              <m:ci>extra</m:ci>
                            </m:apply>
                            <m:apply>
                              <drox:ns>jQuery.style</drox:ns>
                              <m:ci>elem</m:ci>
                              <m:ci>type</m:ci>
                              <m:ci>value</m:ci>
                              <m:ci>extra</m:ci>
                            </m:apply>
                          </m:apply>
                        </m:apply>
                      </m:bind>
                      <m:ci>type</m:ci>
                      <m:apply>
                        <m:csymbol cd="prog2">if_exp</m:csymbol>
                        <m:ci>chainable</m:ci>
                        <m:ci>margin</m:ci>
                        <m:csymbol cd="ecmascript3">undefined</m:csymbol>
                      </m:apply>
                      <m:ci>chainable</m:ci>
                      <m:csymbol cd="prog2">null</m:csymbol>
                    </m:apply>
                  </m:apply>
                </m:bind>
              </drox:dl>
            </m:bind>
          </m:apply>
        </m:bind>
      </m:apply>
      <drox:dl>
        <m:csymbol cd="prog1">assignment</m:csymbol>
        <drox:dt>
          <drox:ns>window.jQuery</drox:ns>
        </drox:dt>
        <drox:dl>
          <m:csymbol cd="prog1">assignment</m:csymbol>
          <drox:dt>
            <drox:ns>window.$</drox:ns>
          </drox:dt>
          <m:ci>jQuery</m:ci>
        </drox:dl>
      </drox:dl>
      <m:apply>
        <m:csymbol cd="prog1">if</m:csymbol>
        <m:apply>
          <m:csymbol cd="logic1">and</m:csymbol>
          <m:apply>
            <m:csymbol cd="logic1">and</m:csymbol>
            <m:apply>
              <m:csymbol cd="ecmascript3">strict_eq</m:csymbol>
              <m:apply>
                <m:csymbol cd="ecmascript3">typeof</m:csymbol>
                <m:ci>define</m:ci>
              </m:apply>
              <m:cs>function</m:cs>
            </m:apply>
            <drox:ns>define.amd</drox:ns>
          </m:apply>
          <m:apply>
            <m:csymbol cd="prog2">namespace_selector</m:csymbol>
            <drox:ns>define.amd</drox:ns>
            <m:ci>jQuery</m:ci>
          </m:apply>
        </m:apply>
        <m:apply>
          <m:csymbol cd="prog1">block</m:csymbol>
          <m:apply>
            <m:ci>define</m:ci>
            <m:cs>jquery</m:cs>
            <m:apply>
              <m:csymbol cd="ecmascript3">array</m:csymbol>
            </m:apply>
            <m:bind>
              <m:csymbol cd="fns1">lambda</m:csymbol>
              <m:apply>
                <m:csymbol cd="prog1">return</m:csymbol>
                <m:ci>jQuery</m:ci>
              </m:apply>
            </m:bind>
          </m:apply>
        </m:apply>
      </m:apply>
    </m:bind>
    <m:ci>window</m:ci>
  </m:apply>
</drox:dl>
